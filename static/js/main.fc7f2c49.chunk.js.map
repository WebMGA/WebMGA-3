{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","moleculeBoundingBox","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","genListBoundingBox","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","target","min","max","bool","m","mat","gutsMaterial","v","elem","rgb","colourMap","values","MeshPhongMaterial","color","side","THREE","clipShadows","Mesh","BoundingBoxs","color2","geo","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","colorWrite","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","setFromCenterAndSize","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","sidebarExpanded","cameraType","scene","Scene","occlusion_scene","setDefault","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","occlusionCullingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","num","traverse","child","isMesh","numOfObject","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","id","params","f","remove","updateSets","setUserColour","r","getRender_Object_number","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","enabled","visible","warning","updatePosition","genFoldedPositionFromUnfold","passGrid","passAxes","passShape","toggleGrid","toggleAxes","boundingShapeEnabled","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","localClippingEnabled","setBackFace","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","style","console","log","children","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","updateKey","key","setState","Menu","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","updateNum","requestAnimationFrame","functions","toggler","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","for","pullLeft","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","VideoOptions","Grid","fluid","PeriodicBoundingOption","toggleFold","toggleBoundingShapeEnabled","displayFoldState","toggleFoldState","reference","activeShape","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","backgroundColour","ReferenceOptions","updateGridSize","gridColour","updateReferenceColour","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","disableClipping","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","starting","genSets","setDefaultState","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unforded_sample2","video_sample","video_sample2","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc7f2c49.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    Material,\n    Box3Helper,\n    Box3\n\n} from 'three';\nimport * as THREE from 'three';\nimport {eigs, ParenthesisNodeDependencies, planckMassDependencies} from 'mathjs';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n    \n    \n    \n    positions = [];\n    Folded_position=[]\n    orientations = [];\n    elements = [];\n    meshes = [];\n    moleculeBoundingBox = [];\n\n    \n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci; \n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n        \n    }\n\n    isFoldedTest(){\n        let x = this.unitBox[0]/2;\n        let y = this.unitBox[1]/2;\n        let z = this.unitBox[2]/2;\n        for (let i = 0; i < this.positions.length; i++){\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if(a>=x || a<=-x){\n                return false\n            }\n            if(b>=y|| b<=-y){\n                return false\n            }\n            if(c>=z || c<=-z){\n               return false\n            }\n        return true;\n        \n    }\n}\n\n    genSet(){\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n        this.genListBoundingBox();\n    }\n\n    \n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace =false;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    // updateSlicedset(){\n    //     clippingPlanes = this.clippingPlanes;\n    //     for(let mesh of this.meshes){\n    //         mesh.material.geometries\n    //     }\n    // }\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n    genUnitBox(){\n        // This is the user input unit box of whole \n        return this.unitBox;\n\n    }\n    \n    genUnfoldPosition(){\n    \n        if(this.isFoldedTest()== false){\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos =[];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rnd1 = (Math.random() * (2) -1) \n            let rnd2 = (Math.random() * (2) -1)\n            let rnd3 = (Math.random() * (2) -1)\n            pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        }\n        this.positions = pos;\n        \n    }\n\n    genFoldedPositionFromUnfold(){\n        if(this.isFoldedTest()== true){\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos =[];\n        let lx = this.unitBox[0]/2;\n        let ly = this.unitBox[1]/2;\n        let lz = this.unitBox[2]/2;\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n            \n            rx = rx%lx;\n            ry = ry%ly;\n            rz = rz%lz;\n           \n            pos.push([rx,ry,rz])\n        }\n        this.Folded_position = pos;\n        \n    }\n    inRange(target,min,max){\n        if (min<=target<=max ){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    setBackFace(bool){\n        this.renderBackFace =bool;\n    }\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n        let gutsMaterial;\n        let v;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n        \n            mat =new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: false,\n                side : THREE.FrontSide,\n                clipShadows: true\n            });\n            mat.wireframe = this.wireframe;\n            if (this.renderBackFace){\n                gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n            }\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n                if (this.renderBackFace){\n                    v = new Mesh(g,gutsMaterial);\n                    this.meshes.push(v);\n                }\n                \n            }\n        }\n    }\n    genListBoundingBox(){\n        // Bounding Box for each molecule\n        let BoundingBoxs =[]\n        const color2 = new THREE.Color( '#00000')\n        for (let elem of this.elements){\n            let geo = BufferGeometryUtils.mergeBufferGeometries(elem.geometries);\n            let box = new Box3();\n            geo.computeBoundingBox();\n            box.copy(geo.boundingBox);\n            let boundingBox= new Box3Helper(box,color2);\n            boundingBox.material.colorWrite=true;\n            // boundingBox.material.depthWrite=false;\n            BoundingBoxs.push(boundingBox)\n        }\n        this.moleculeBoundingBox = BoundingBoxs;\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length>0){\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n        \n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n        \n        for (let set of sets) {\n            if (b != null){\n                break\n            }\n            b =set.genUnitBox()\n            \n        }\n    \n        switch (type) {\n            case 'box':\n                    let box = new Box3();\n                    box.setFromCenterAndSize(new Vector3(0,0,0),new Vector3(b[0]*2,b[1]*2,b[2]*2));\n                    this.boundingShape = new Box3Helper(box, this.colour);\n                    \n                break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n            \n\n        }\n        \n\n        return this.boundingShape;\n\n    }\n\n   \n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n   \n\n}\n\nexport default ReferenceTools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    Mesh\n} from 'three';\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    \n    \n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    numOfObject;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.occlusion_scene =new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n       \n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\"});\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        // this.renderer.localClippingEnabled = true;\n       \n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        //this.removeclipping();\n        this.initClippers();\n        this.occlusionCullingEnabled =true;\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n            // this.occlusion_scene.add(l.light)\n        }\n        this.scene.add(this.camera);\n        // this.occlusion_scene.add(this.camera)\n        this.lod = 2;\n    }\n\n    update() {\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    getRender_Object_number(){\n        let num =0;\n        this.scene.traverse( function(child) {\n             //@ts-ignore\n            if ( child.isMesh){\n                num = num+1;\n            };\n        } );\n       \n        this.numOfObject = (num-6)/3;\n    }\n    occlusionCulling(){\n       //Add bounding Box of each molecule to scene\n       //Color write are set to be False;\n        for (let set of this.sets) {\n            for (const y of set.moleculeBoundingBox ) {\n                this.occlusion_scene.add(y);\n            }\n        } \n\n        this.renderer.render(this.occlusion_scene,this.camera)\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id,toggle){\n        if(toggle==true){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });}\n        else if(toggle == false){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position =[];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n    \n    \n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle,id){\n        if (toggle == true){\n            this.renderer.localClippingEnabled = true;\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].setBackFace(true);\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n        else{\n            this.renderer.localClippingEnabled = false;\n        }\n        \n      \n    }\n\n    disableClipping(){\n        this.renderer.localClippingEnabled = false;\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n        \n   \n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 180),\n            new Plane(new Vector3(-1, 0, 0), 180),\n            new Plane(new Vector3(0, 1, 0), 180),\n            new Plane(new Vector3(0, -1, 0), 180),\n            new Plane(new Vector3(0, 0, 1), 180),\n            new Plane(new Vector3(0, 0, -1), 180)\n        ];\n       \n       this.clippingHelpers = [\n        new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n        new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n        \n    }\n    // removeclipping(){\n    //     for (let a of this.clippingPlanes) {\n    //         this.scene.remove(a);\n    //     }\n    //     for (let a of this.clippingHelpers) {\n    //         this.scene.remove(a);\n    //     }\n\n    \n    // }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic');\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Torus (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshPhongMaterial\n                <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if (this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput key={i} title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-100.0}\n                        max={100.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider, Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.resolution =[1.0];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n    setResolution(val,index){\n        this.resolution[index] = parseInt(val);\n    }\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n                 <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={0.1} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(key) {\n        this.setState({\n            active: key\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={19}>Video 0</Dropdown.Item>\n                <Dropdown.Item eventKey={20}>Video 2</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Item panel style={{ width: 120 }}></Dropdown.Item>\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false ,numOfRender:this.model.numOfObject};\n\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n     \n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n     \n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.updateNum();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2),\n            numOfRender:this.model.numOfObject\n        });\n    }\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                \n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active>Molecules rendered: {num}</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    {/* <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                        <Tooltip>\n                                            The performance test was included for completeness and will be removed after submission.\n                                        </Tooltip>\n                                    }>\n                                        <Icon style={{marginTop: 18}}icon=\"question-circle\" size=\"lg\" />\n                                    </Whisper> */}\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                \n                                    \n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"info\" />}>About</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals\n                        </Button>\n                            <Button key=\"man\" color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n                        <br />\n                        <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations included in the library.</i></p>\n\n                        <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see 'User Manual'.</i></p>\n\n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h2>WebMGA </h2>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++ that filled this gap in molecular graphics in 2008.\n                    \n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.state =View.state.model;\n    }\n    render(){\n        return(\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Play Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} > Play </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Download </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox> download</Checkbox>\n                        </Col>\n                    </Row>\n                  \n                </Grid>\n                <br />\n\n                <br />\n            </div>\n\n        )\n    }\n}\n\nexport class PeriodicBoundingOption extends React.Component{\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        //this.state.configurations[this.state.active].displayFoldState=true;\n        //this.state.boundingShapeEnabled =false;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        //this.toggleUnFold= this.toggleUnFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.configurations[this.state.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        View.state.model.configurations[this.state.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.state.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n    }\n    \n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const enabled = this.state.boundingShapeEnabled;\n        return (\n            \n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unfold </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayUnFoldState} onClick={this.toggleUnFold}> Show</Checkbox>\n                        </Col>\n                    </Row> */}\n                </Grid>\n                <br />\n\n                <br />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(val);\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val);\n        if (val == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = val;\n                    break;\n                case 'y':\n                    position.y = val;\n                    break;\n                case 'z':\n                    position.z = val;\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(val);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(val);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        View.state.slicing.slicing_enabled = toggle\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n        \n        switch (i) {\n            case 0:\n                this.state.x = val;\n                break;\n            case 1:\n                this.state.y = val;\n                break;\n            case 2:\n                this.state.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg(val, i) {\n        let colour = this.state.backgroundColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBg} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBg} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBg} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        // this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        // this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(val, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = val;\n                break;\n            case 'g':\n                rgb.g = val;\n                break;\n            case 'b':\n                rgb.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(val) {\n        this.model.updateGridSize(val);\n        this.model.update();\n        View.state.reference.size = val;\n    }\n    // toggleBoundingShapeEnabled() {\n    //     let toggle = !View.state.reference.boundingShapeEnabled;\n    //     this.setState({\n    //         boundingShapeEnabled: toggle\n    //     });\n    //     View.state.reference.boundingShapeEnabled = toggle;\n    //     this.model.updateBoundingShape(this.state.activeShape, toggle);\n    //     this.model.update();\n    // }\n    \n    // selectShape(val) {\n    //     this.setState({\n    //         activeShape: val\n    //     });\n    //     View.state.reference.activeShape = val;\n    //     this.model.updateBoundingShape(val, this.state.boundingShapeEnabled);\n    //     this.model.update();\n    // }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        // const enabled = this.state.boundingShapeEnabled;\n        // const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row> */}\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    {/* <Radio disabled={true} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio> */}\n\n                                {/* </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row> */} \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions,PeriodicBoundingOption,VideoOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\"  eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\"  eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Periodic Boundary Conditions\"  eventKey=\"Periodic Boundary Conditions\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"growth\" />} />\n                <Nav.Item title=\"Video Rendering\"  eventKey=\"Video Rendering\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\"  eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\"  eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\"  eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\"  eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav >\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model} />);\n                break;\n            case \"Periodic Boundary Conditions\":\n                menuContent.push(<PeriodicBoundingOption  key={active} model={model} />);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n                this.model.disableClipping()\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        //View.state.slicing.x=[-80,80];\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n\n        \n    }\n    \n\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i,substate.displayFoldState);\n            // this.model.toggleUnfoldState(i,substate.displayUnfoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state){\n        this.loadReferenceAndSlicing(state);\n        this.loadLightingAndCamera(state);\n        \n    }\n \n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n        \n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state)\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: [],\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled:false,\n        helpers: [false, false, false],\n        x: [-180, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: false,\n        boundingShapeEnabled:false\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n    \n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\nimport video_sample from'./Video_sample/cnf.00000000.json';\nimport video_sample2 from'./Video_sample/cnf.00000001.json';\nimport unfolded_sample1 from'./Samples/UnfoldedSC4.json';\nimport unforded_sample2 from'./Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        \n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter == this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime == null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.render();\n        this.notify('info', 'Welcome to WebMGA',\n            (<div>\n            <p style={{ width: 320 }} >\n                Check out the liquid crystal configurations in the Library, and head to the About section to learn more!\n                \n            </p>\n            <p style={{ width: 320 }} >\n                This application works best on the Chrome browser.\n             </p></div>\n            )\n\n\n\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 15000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultState(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.updateLOD(this.model.lod);\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample =unfolded_sample1;\n                break;\n            case 18:\n                sample =unforded_sample2 ;\n                break;\n            case 19:\n                sample = video_sample;\n                break;\n            case 20:\n                sample =video_sample2;\n                break\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width,resolution) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution).replace(\"image/jpeg\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key == 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}