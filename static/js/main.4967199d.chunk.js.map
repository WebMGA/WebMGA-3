{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","moleculeBoundingBox","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","quaternion","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","round","target","min","max","bool","num","mat","MeshPhongMaterial","side","THREE","clipShadows","gut","Intsancemesh1","Instancemesh2","Instancemesh3","rgb","colourMap","values","matrix2","ori","compose","setMatrixAt","setColorAt","Intsancemeshback1","Instancemeshback2","Instancemeshback3","elem","shape","clone","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","translate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","isNaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","color","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","videoFileloaded","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","Video_sample_list","clock","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","console","log","render","click","traverse","child","isMesh","numOfObject","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","m","id","params","f","remove","geometry","dispose","updateSets","setUserColour","r","getRender_Object_number","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","aspect","left","right","top","bottom","updateProjectionMatrix","update","zoom","enabled","visible","warning","updatePosition","genFoldedPositionFromUnfold","passGrid","passAxes","passShape","toggleGrid","toggleAxes","boundingShapeEnabled","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","localClippingEnabled","setBackFace","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","Promise","resolve","reject","fileHandle","lst","showOpenFilePicker","multiple","getFile","file","style","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","InstancedMesh","matrix","Matrix4","rotation","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","toggler","Menu","PerformanceDropdown","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","then","notifyFinishUpload","vidstate","loadVideoState","video","samples","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","vidState","capture","stop","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","displayFoldState","toggleFoldState","activeShape","toggleAxesMulticolour","showAxes","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","setTimeout","revokeObjectURL","getData","view","saveVideoState","starting","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unforded_sample2","convertQMGA","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","key","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4967199d.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    Box3Helper,\n    Box3\n\n} from 'three';\nimport * as THREE from 'three';\nimport {eigs} from 'mathjs';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n    \n    \n    \n    positions = [];\n    Folded_position=[]\n    orientations = [];\n    elements = [];\n    meshes = [];\n    moleculeBoundingBox = [];\n    // materials =[];\n\n    \n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci; \n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n    }\n\n    isFoldedTest(){\n        let x = this.unitBox[0]/2;\n        let y = this.unitBox[1]/2;\n        let z = this.unitBox[2]/2;\n        \n        for (let i = 0; i < this.positions.length; i++){\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if(a>=x || a<=-x){\n                return false\n            }\n            if(b>=y|| b<=-y){\n                return false\n            }\n            if(c>=z || c<=-z){\n               return false\n            }\n               \n    }\n    return true;\n}\n\n    genSet(){\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n        // this.genListBoundingBox();\n    }\n\n    \n\n    validateData() {\n        if (this.positions.length != this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw  new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace =false;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    \n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n    genUnitBox(){\n        // This is the user input unit box of whole \n        return this.unitBox;\n\n    }\n    \n    genUnfoldPosition(){\n    \n        if(this.isFoldedTest()=== false){\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos =[];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rnd1 = (Math.random() * (2) -1) \n            let rnd2 = (Math.random() * (2) -1)\n            let rnd3 = (Math.random() * (2) -1)\n            pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        }\n        this.positions = pos;\n        \n    }\n\n    genFoldedPositionFromUnfold(){\n        if(this.isFoldedTest()=== true){\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos =[];\n        let lx = this.unitBox[0];\n        let ly = this.unitBox[1];\n        let lz = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n            \n            rx = rx-lx*Math.round(rx/lx);\n            ry = ry-ly*Math.round(ry/ly);\n            rz = rz-lz*Math.round(rz/lz);\n           \n            pos.push([rx,ry,rz])\n        }\n        this.Folded_position = pos;\n        \n    }\n    inRange(target,min,max){\n        if (min<=target<=max ){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    setBackFace(bool){\n        this.renderBackFace =bool;\n    }\n    genMeshes(){\n        let num = this.elements.length;\n        \n        let c = '#FFFFFF'\n        let mat =new MeshPhongMaterial({\n            side : THREE.FrontSide,\n            clipShadows: true,\n            clippingPlanes:this.clippingPlanes,\n            wireframe : this.wireframe\n        });\n        let gut = new THREE.MeshBasicMaterial( { side: THREE.BackSide,clipShadows: true, clippingPlanes:this.clippingPlanes,\n            wireframe :this.wireframe} );\n \n        let Intsancemesh1 = new THREE.InstancedMesh( this.elements[0].geometries[0], mat, num);\n        let Instancemesh2= new THREE.InstancedMesh( this.elements[0].geometries[1], mat, num);\n        let Instancemesh3 =new THREE.InstancedMesh( this.elements[0].geometries[2], mat, num);\n        for ( let i = 0; i < num; i ++ ) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[this.elements[i].colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else{\n                c = this.userColour;\n            }\n            let matrix2 = new THREE.Matrix4();\n            const position = new THREE.Vector3();\n            position.x = this.elements[i].position[0];\n            position.y = this.elements[i].position[1];\n            position.z = this.elements[i].position[2];\n            var ori = this.elements[i].quaternion\n            matrix2.compose(position,ori,new THREE.Vector3(0.5,0.5,0.5));\n            Intsancemesh1.setMatrixAt( i,matrix2);\n            Instancemesh2.setMatrixAt(i,matrix2);\n            Instancemesh3.setMatrixAt(i,matrix2);\n            Intsancemesh1.setColorAt( i, c );\n            Instancemesh2.setColorAt( i,c );\n            Instancemesh3.setColorAt( i, c);\n        }\n        this.meshes.push(Intsancemesh1,Instancemesh2,Instancemesh3);\n        if (this.renderBackFace){\n           \n            let Intsancemeshback1 = new THREE.InstancedMesh( this.elements[0].geometries[0], gut, num);\n            let Instancemeshback2= new THREE.InstancedMesh( this.elements[0].geometries[1], gut, num);\n            let Instancemeshback3 =new THREE.InstancedMesh( this.elements[0].geometries[2], gut, num);\n            for ( let i = 0; i < num; i ++ ) {\n                if (this.colourByDirector) {\n                    let rgb = colourMap.values[this.elements[i].colourIndex];\n                    c = new Color(Model.rgbToHex(...rgb));\n                } \n                let matrix2 = new THREE.Matrix4();\n                const position = new THREE.Vector3();\n                position.x = this.elements[i].position[0];\n                position.y = this.elements[i].position[1];\n                position.z = this.elements[i].position[2];\n                const scale = new THREE.Vector3();\n                scale.x = scale.y = scale.z = Math.random() * 1;\n                var ori = this.elements[i].quaternion;\n                matrix2.compose(position,ori,new THREE.Vector3(0.5,0.5,0.5));\n                Intsancemeshback1.setMatrixAt( i,matrix2);\n                Instancemeshback2.setMatrixAt(i,matrix2);\n                Instancemeshback3.setMatrixAt(i,matrix2);\n                Intsancemeshback1.setColorAt( i, c );\n                Instancemeshback2.setColorAt( i,c );\n                Instancemeshback3.setColorAt( i, c);\n            }\n        this.meshes.push(Intsancemeshback1,Instancemeshback2,Instancemeshback3);\n        }\n    \n    }\n\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n            // this.rotate(elem.euler, geoms);\n            // this.translate(elem.position, geoms);\n            elem.setGeometries(geoms);\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length>0){\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n        \n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0,1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n        if (this.orientationType ==='v'){\n            scalarProduct = Math.abs(element.orientation[1] * this.director[0]\n                + element.orientation[0] * this.director[1]\n                + element.orientation[2] * this.director[2]);\n        }\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n        quaternion;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n            this.quaternion =q\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3\n} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n        \n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n        \n        for (let set of sets) {\n            if (b != null){\n                break\n            }\n            b =set.genUnitBox()\n            \n        }\n    \n        switch (type) {\n            case 'box':\n                    let box = new Box3();\n                    box.setFromCenterAndSize(new Vector3(0,0,0),new Vector3(b[0],b[1],b[2]));\n                    this.boundingShape = new Box3Helper(box, this.colour);\n                    \n                break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n            \n\n        }\n        \n\n        return this.boundingShape;\n\n    }\n\n   \n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n   \n\n}\n\nexport default ReferenceTools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    Mesh,\n    Quaternion,\n    MeshBasicMaterial,\n    InstancedMesh,\n    BoxGeometry,\n    Euler,\n    Matrix4,\n    Color\n  \n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\nimport { forEach } from 'mathjs';\n\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    \n    \n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    numOfObject;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n       \n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false,powerPreference: \"high-performance\",preserveDrawingBuffer:true});\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n\n        this.videoFileloaded =true;\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list=[];\n        this.clock = null;\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType,true); \n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n  \n    update() {\n        console.log('update called');\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n    getRender_Object_number(){\n        let num =0;\n        this.scene.traverse( function(child) {\n             //@ts-ignore\n            if ( child.isMesh){\n                num = num+1;\n            };\n        } );\n       \n        this.numOfObject = (num-6);\n        console.log(this.numOfObject)\n    }\n    // occlusionCulling(){\n         \n    // const renderer = new WebGLRenderer();\n    // const gl = renderer.getContext();\n    // console.log(gl)\n    // const scene = new Scene();\n    // const mesh1 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // const mesh2 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // scene.add(mesh1, mesh2);\n    // var query = gl.createQuery();\n    // const camera = this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n      \n    // camera.position.z = 5;\n    // for (let l of this.lighting) {\n    //     scene.add(l.light);}\n    // gl.beginQuery(gl.ANY_SAMPLES_PASSED,query);\n    // renderer.render(scene, camera);\n    // gl.endQuery(gl.ANY_SAMPLES_PASSED,query);\n    // var result = gl.getQueryParameter(query,gl.QUERY_RESULT);\n    // console.log(Number(result));\n    // console.log(result)\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n        console.log(this.sidebarExpanded)\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        console.log(\"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b))\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet === \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            m.geometry.dispose();\n            m.material.dispose(); \n            m.dispose();\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n        // let mesh = this.occlusionCulling();\n        // this.scene.add(mesh);\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose ();\n                m.material.dispose ();\n                m.dispose();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n        \n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        \n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n            console.log('sidebar')\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        console.log('set camera called')\n        if(this.camera){\n            this.camera='';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        // this.update();\n        \n        \n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id,toggle){\n        if(toggle===true){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });}\n        else if(toggle === false){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position =[];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n    \n    \n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle,id){\n        if (toggle === true){\n            this.renderer.localClippingEnabled = true;\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].setBackFace(true);\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n        else{\n            this.renderer.localClippingEnabled = false;\n            // if (this.sets){\n            //     console.log('called')\n            //     this.updateSets(id, [id], (id) => {\n            //         this.sets[id].elements =[];\n            //         this.sets[id].meshes = [];\n            //         this.sets[id].setBackFace(false);\n            //         this.sets[id].genElements();\n            //         this.sets[id].setElements();\n            //         this.sets[id].genMeshes();\n            //     });\n            // }\n            \n        }\n        \n      \n    }\n\n    // disableClipping(){\n    //     this.renderer.localClippingEnabled = false;\n    // }\n\n    initClippers() {\n        this.clippingIntersections = false;\n        \n   \n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 180),\n            new Plane(new Vector3(-1, 0, 0), 180),\n            new Plane(new Vector3(0, 1, 0), 180),\n            new Plane(new Vector3(0, -1, 0), 180),\n            new Plane(new Vector3(0, 0, 1), 180),\n            new Plane(new Vector3(0, 0, -1), 180)\n        ];\n       \n       this.clippingHelpers = [\n        new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n        new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n        \n    }\n\n\n    \n    // }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n    /* Video SUITE */\n    setloaded(toggle){\n        console.log(toggle);\n    }\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n          let fileHandle = [];\n          let lst = [];\n          try {\n            fileHandle = await window.showOpenFilePicker({ multiple: true });\n            for (let i = 0; i < fileHandle.length; i++) {\n              const file = await fileHandle[i].getFile();\n              lst.push(file);\n            }\n            this.Video_sample_list = lst;\n            resolve(lst);\n          } catch (error) {\n            reject(error);\n          }\n        });\n    }\n\n    notifyFinishUpload(){\n        this.notify('info', `Files loaded successfully`,\n            (<div>\n            <p style={{ width: 320 }} >\n                Now Select Your Video Viewing configuration!\n                You can show unit box, apply slicing , periodic boundary conditions etc.\n                Please Do not change screen size while generating Video e.g dont click on size bar\n            </p>\n            </div>\n            ));\n            }\n    \n\n    retrieveVideoSample(){\n        return this.Video_sample_list;\n    }\n   removeVideoSample(){\n    delete this.Video_sample_list;\n   }\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic',false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n        this.deleteAllMeshes();\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 500001;\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Torus (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshPhongMaterial\n                <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for( const set of this.sets){\n            console.log(set)\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose();\n                m.material.dispose(); \n                m.dispose();\n            }\n\n        }\n       \n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        \n\n        if (this.testShape.isPreset) {\n            geoms.push(this.testShape.presetGeometry.clone());\n        }\n        else {\n            geoms.push(this.testShape.stripGeometry.clone());\n            geoms.push(this.testShape.fanGeometries[0].clone());\n            geoms.push(this.testShape.fanGeometries[1].clone());\n        }\n\n        this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n        \n        let Intsancemesh1 = new InstancedMesh( geoms[0], this.testMaterial, n);\n        for ( let i = 0; i < n; i ++ ) {\n                const matrix = new Matrix4();\n                const position = new Vector3();\n                const rotation = new Euler();\n                const quaternion = new Quaternion();\n                const scale = new Vector3();\n                const color = new Color();\n\t\t\t\tposition.x = Math.random() * 40 - 20;\n\t\t\t\tposition.y = Math.random() * 40 - 20;\n\t\t\t\tposition.z = Math.random() * 40 - 20;\n\n\t\t\t\trotation.x = Math.random() * 2 * Math.PI;\n\t\t\t\trotation.y = Math.random() * 2 * Math.PI;\n\t\t\t\trotation.z = Math.random() * 2 * Math.PI;\n\n\t\t\t\tquaternion.setFromEuler( rotation );\n\n\t\t\t\tscale.x = scale.y = scale.z = Math.random() * 1;\n\n\t\t\t\tmatrix.compose( position, quaternion, scale );\n                Intsancemesh1.setMatrixAt( i, matrix );\n                Intsancemesh1.setColorAt( i, color.setHex( 0xffffff * Math.random() ) );\n        }\n        this.scene.add(Intsancemesh1);\n        // this.renderer.render(this.scene,this.camera);\n        geoms = [];\n    \n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider,InputNumber,InputGroup, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n        if (this.numerical) {\n            var defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key ={val} eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key ={'panel'}eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 100 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const[value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if(!nextValue||isNaN(nextValue)){\n                                    nextValue = 0;\n                                }\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                if(!nextValue||isNaN(nextValue)){\n                                    nextValue = 0;\n                                }\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-100.0}\n                        max={100.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if(!value||isNaN(value)){\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip,Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.resolution =[10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n    setResolution(val){\n        this.resolution[0] = parseInt(val);\n    }\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n                 <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n        this.toggler = props.toggler;\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Item panel style={{ width: 120 }}></Dropdown.Item>\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip >\n                            Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false ,numOfRender:this.model.numOfObject};\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n   \n     \n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n     \n    \n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n  \n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2),\n            numOfRender:this.model.numOfObject\n        });\n    }\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                \n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active>Draw call maded: {num}</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                   \n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                \n                                    \n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"info\" />}>About</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label htmlFor=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav >\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals\n                        </Button>\n                            <Button key=\"man\" color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n                        <br />\n                        <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations included in the library.</i></p>\n\n                        <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see 'User Manual'.</i></p>\n\n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h2>WebMGA </h2>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++ that filled this gap in molecular graphics in 2008.\n                    \n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport {View} from './View.js'\n\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.model.deleteAllMeshes();\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n        \n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;  \n    }\n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(toggle)\n        if(toggle ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n            \n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n    \n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            console.log('does this work?')\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            console.log('start render')\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n                console.log('sending request',i+1)\n            };\n        }\n        if (i === max_iter){\n                console.log('max')\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n                \n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n    \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                   \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\" \n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n                   \n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n        console.log(this.state,View.state.slicing);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        this.setState({\n            slicing_enabled :toggle\n        })\n        View.state.slicing.slicing_enabled = toggle\n        console.log(this.state,View.state.slicing);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n    \n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                // this.state.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                // this.state.y = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                // this.state.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n        \n        \n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n       \n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n   \nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n    \n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        \n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.state.showAxes;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                    \n\n\n                </Grid>\n               \n            </div>\n        );\n    }\n}\n","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions,VideoOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5};\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\"  eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\"  eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                 <Nav.Item title=\"Video Rendering\"  eventKey=\"Video Rendering\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\"  eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\"  eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\"  eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\"  eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler,functions}) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav >\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model} />);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler} functions ={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n    submenu;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n    \n    getData() {\n        return View.state;\n    }\n\n    setState(state,vid) {\n        View.state = state;\n        if(!vid){\n            this.loadLightingAndCamera(state,vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i,substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state,vid){\n        if(!vid){\n            this.loadLightingAndCamera(state,vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        \n    }\n \n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0,state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state,vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if(state.ambientLight.darkBackGround){\n            this.model.updateBg(\"#000000\");\n        }\n        if(!state.ambientLight.darkBackGround){\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if(!vid){\n            this.model.setCamera(state.camera.type,false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        this.model.updateLookAt(state.camera.lookAt);\n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init,vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n    \n        this.loadState(View.state,vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n  \n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: [],\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled:false,\n        helpers: [false, false, false],\n        x: [-180, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [1, 1, 0.2]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: false\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps :24,\n        uploaded :true,\n        video:false,\n        loadVideoState:false\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        darkBackGround:true\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\nimport unfolded_sample1 from'./Samples/UnfoldedSC4.json';\nimport unforded_sample2 from'./Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        \n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate,this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 50000;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n        this.generate(sample2,true,false); \n        // this.model.occlusionCulling();\n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`,\n            (<div>\n            <p style={{ width: 320 }} >\n                Check out the liquid crystal configurations in the Library, and head to the About section to learn more!\n                \n            </p>\n            <p style={{ width: 320 }} >\n                This application works best on the Chrome browser.\n             </p></div>\n            )\n\n        );\n        // this.loadVideoSample();\n    }\n    \n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 7000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState=()=>{\n        let data = {};\n        data.state = this.view.getData();\n        console.log( 'get state');\n        return JSON.stringify(data);\n        \n    }\n\n    generate = (data, starting,vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) { \n            if(vidstate){\n                this.view.setState((JSON.parse(vidstate)).state,true);\n            }\n            else{\n                this.view.setDefaultState(starting,false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        }\n        else {\n            this.view.setState(data.state,false);\n        }\n        this.model.update();\n    }\n\n    load = (file,VIDEO,vidstate) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n            this.externalToggle.closeSidemenu();\n            this.generate(data,false,vidstate);\n            if(VIDEO === false){\n                Alert.success('File loaded successfully.');\n            }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n        \n    }\n   \n\n   \n   \n    loadSample = (id) => {\n        let sample;\n       \n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample =unfolded_sample1;\n                break;\n            case 18:\n                sample =unforded_sample2 ;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n    \n        this.generate(sample, false,false);\n        \n        \n        Alert.success('File loaded successfully.');\n        \n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width,resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\",resolution/10);\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key === 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key === 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}