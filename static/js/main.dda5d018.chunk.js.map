{"version":3,"sources":["Model/Shapes.ts","Model/Light.ts","Model/Parameters.js","Model/Set.js","Model/ReferenceTools.js","Model/Model.tsx","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["linspace","start","stop","number","increment","values","i","push","base","Shape","LOD","parameters","stripGeometry","this","arguments","default_lod","undefined","lod","vertices","offset","length","cut","math","roll_row","slice","concat","section","map","row","row_index","complexity_count","complexity","value","LightTypes","Sphere","radius","vertical_sample_scale","samples","vertical_samples","update_samples","Math","max","genGeometries","theta","phi","sin_phi","sin","cos","thetas","phis","offset_thetas","PI","result","entries","phi_index","abc","sample_sphere","vertex_row","vertex","floor","phi_offset","spherical_vertices","quarter_thetas","bottom_half","rolled_vertices","roll_offset","toReversed","build_quarters","quarter_sphere_vertices","roll_vertices","build_halves","half_sphere_vertices","positions","row_column","position_components","to_triangles","geometry","BufferGeometry","setAttribute","BufferAttribute","Float32Array","BufferGeometryUtils","mergeVertices","computeVertexNormals","normalizeNormals","sub_geometries","generate_vertices","sub_vertices","geometry_from_vertices","mergeBufferGeometries","genGeometriesBase","Spheroplatelet","circle_radius","row_count","column_count","top","column","bottom","circle_angles","radius_vector","norm","face_circle_angles","x","normalised_radius_vector","Ellipsoid","y","z","scale","CapCutSphereBase","cut_radius","z_cut","flat_top","end_source_index","xs","ys","zs","end","Array","fill","CutSphere","DoubleCutSphere","angle_cut","partial_vertices","index","Cap","BaseLens","radius_2","angle","top_shape","bottom_cap","bottom_shape","set_lod","reverse","pole_offset","reverse_vertices","distance","ThickLens","thickness","cos_theta","RadiusOnlyLens","acos","BiconvexLens","separation","shape_halves","part","item","new_row","bottom_offsets","bottom_roll","indexOf","min","apply","Spherocylinder","Parameters","names","vals","Lens","Set","data","cp","ci","Folded_position","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","quaternion","w","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","genMeshes","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","constant","isFoldedTest","pos","rnd1","random","rnd2","rnd3","Alert","info","lx","ly","lz","rx","ry","rz","round","bool","num","geometry_distances","distance_index","new_gen_geometries","rgb","colourMap","Model","rgbToHex","mat","MeshPhongMaterial","side","THREE","clipShadows","color","matrix2","ori","compose","lod_mesh","addLevel","applyMatrix4","getRotations","calculateDirector","elem","setColourIndex","calculateColourIndex","shape","SHAPE","generate","translate","type","rot","Quaternion","orientationVector","Vector3","normalize","setFromUnitVectors","set","setFromAxisAngle","e","fromArray","setFromEuler","n","orderTensor","factor","eigen","eigs","reduce","iMax","arr","director","vectors","sqrt","isNaN","error","element","scalarProduct","abs","hex","val","LightNew","lightType","light","helper","setLight","setHelper","AMBIENT","AmbientLight","DIRECTIONAL","DirectionalLight","POINT","PointLight","RangeError","DirectionalLightHelper","PointLightHelper","setHex","parseInt","substring","intensity","light_types","ReferenceTools","s","axes","size","colour","material","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","director_colour","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","console","log","axesSize","origin","Line","setFromPoints","director_vector","clone","multiplyScalar","mat1","mat2","mat3","mat4","updateColour","chronometer","notify","scene","camera","lighting","bgColour","controls","lookAt","tools","renderer","height","width","axesEnabled","sidebarExpanded","cameraType","cameraPosition","selectedSet","clippingHelpers","numOfObject","axes_enabled","colour_axes","repeats_x","repeats_y","repeats_z","molecules","onBeforeRender","set_axes","setDefault","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","rotating","lightHelperWarningGiven","Video_sample_list","initClippers","updateDimensions","setCamera","setClearColor","l","add","enabled","axes_origin","assert","zoom","axis","remove","divideScalar","world_axes_origin","localToWorld","axis_line_ends","director_line_ends","line_ends","line_materials","line_end","colour_from_director","line_geometry","vector","enable_colour","palette_start","palette_range","hue","lightness","dot","setHSL","render","click","traverse","child","isMesh","model","temp","updateCamera","autoRotate","molecule","pop","forEach","mesh","new_mesh","id","params","f","m","update_repeats","updateSets","setUserColour","r","g","toggle","setData","clippingIntersections","getRender_Object_number","innerHeight","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","OrbitControls","domElement","target","aspect","left","right","updateProjectionMatrix","update","warning","updatePosition","genFoldedPositionFromUnfold","passAxes","toggleAxes","toggleMulticolour","boundingShapeEnabled","genBoundingShape","localClippingEnabled","setBackFace","Plane","PlaneHelper","visible","updateSlicers","Promise","resolve","reject","fileHandle","lst","showOpenFilePicker","multiple","getFile","file","style","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","testShape","testTotal","testLimit","testGeo","InstancedMesh1","InstancedMesh","InstancedMesh2","InstancedMesh3","matrix","Matrix4","rotation","setMatrixAt","setColorAt","componentToHex","Scene","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","localeCompare","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","parseFloat","Addon","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","toggler","Menu","PerformanceDropdown","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","Checkbox","checked","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","then","notifyFinishUpload","vidstate","loadVideoState","video","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","vidState","capture","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","ty","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","toggle_axes_enabled","toggle_axes_colour","displayFoldState","toggleFoldState","updateBoundingShape","activeShape","toggleAxesMulticolour","showAxes","repeats","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","setTimeout","revokeObjectURL","getData","view","saveVideoState","starting","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","split","toLowerCase","qmga_to_json","cnf_to_json","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","unfolded_sample1","unfolded_sample2","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","code","config","duration","description","Notification","split_data","trim","unit_box","molecule_count","molecule_number","molecule_data","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dda5d018.chunk.js","sourcesContent":["import {BufferAttribute, BufferGeometry} from 'three';\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport * as math from \"mathjs\";\n\nfunction linspace(start: number, stop: number, number: number): number[] {\n    let increment: number = (stop - start) / (number - 1)\n    let values: number[] = []\n    for (let i: number = 0; i < number; ++i) {\n        values.push(start + i * increment)\n    }\n    return values\n}\n\nfunction logspace(start: number, stop: number, number: number, base: number): number[] {\n    return linspace(start, stop, number).map(value => base ** value)\n}\n\nexport class Shape {\n\n    //complexity attributes\n    LOD;\n    static default_lod: number = 5\n    static complexity_count: number = 10\n    static complexity: number[] = math.multiply(math.round(math.divide(logspace(3, 7, Shape.complexity_count, 2), 2)), 2);\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometry?: BufferGeometry;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.LOD = Shape.default_lod;\n        this.stripGeometry = undefined;\n    }\n\n    set_lod(lod: number) {\n        this.LOD = lod\n    }\n\n    roll_vertices(vertices: number[][][], offset: boolean = false) {\n        for (let i = 0; i < vertices.length; ++i) {\n            let cut = math.ceil((i + (offset ? 1 : 0)) / 2)\n            vertices[i] = this.roll_row(vertices[i], cut)\n        }\n        return vertices\n    }\n\n    roll_row(vertices: number[][], cut: number) {\n        return vertices.slice(-cut).concat(vertices.slice(0, -cut))\n    }\n\n    reverse_vertices(section: number[][][]): number[][][] {\n        return section.map((row, row_index) => row.slice(-row_index).concat(row.slice(0, -row_index)))\n    }\n}\n\nexport class Sphere extends Shape {\n    radius: number\n    samples: number = Sphere.complexity[this.LOD]\n    vertical_samples: number = this.samples\n    vertical_sample_scale: number\n\n    constructor(radius: number, vertical_sample_scale: number = 1) {\n        super();\n        this.radius = radius\n        this.vertical_sample_scale = vertical_sample_scale\n        this.update_samples()\n    }\n\n    update_samples(): void {\n        this.samples = Math.max(4, Sphere.complexity[this.LOD])\n        this.vertical_samples = Math.max(4, this.samples * this.vertical_sample_scale)\n        if (this.vertical_samples % 2 == 1) {\n            ++this.vertical_samples\n        }\n    }\n\n    set_lod(lod: number) {\n        super.set_lod(lod);\n        this.update_samples();\n    }\n\n    generate(): void {\n        this.update_samples();\n        this.genGeometries();\n    }\n\n    sample_sphere(radius: number, theta: number, phi: number): number[] {\n        let sin_phi: number = Math.sin(phi);\n        return math.multiply(radius, [sin_phi * Math.cos(theta), sin_phi * Math.sin(theta), Math.cos(phi)])\n    }\n\n    spherical_vertices(radius: number, thetas: math.MathArray, phis: math.MathArray, samples: number): number[][] {\n        let offset_thetas: math.MathType = math.add(thetas, math.divide(Math.PI, samples))\n        let result = []\n        for (let [phi_index, phi] of phis.entries()) {\n            let abc = []\n            for (let theta of ((phi_index % 2 == 0) ? thetas : offset_thetas)) {\n                abc.push(this.sample_sphere(radius, theta, phi))\n            }\n            result.push(abc)\n        }\n        return result\n    }\n\n    build_quarters(vertices: number[][][]): math.MathType {\n        return math.concat(vertices, vertices.map(vertex_row => vertex_row.map(vertex => [-vertex[0], -vertex[1], vertex[2]])), 1)\n    }\n\n    quarter_thetas(samples: number): number[] {\n        return linspace(0, Math.PI, Math.floor(samples / 2) + 1).slice(0, -1)\n    }\n\n    quarter_sphere_vertices(radius: number, samples: number, phi_offset: number, vertical_samples: number = samples): math.MathArray {\n        let phis: number[] = linspace(0, Math.PI / 2, Math.floor(vertical_samples / 2) - phi_offset)\n        return this.spherical_vertices(radius, this.quarter_thetas(samples), phis, samples)\n    }\n\n    build_halves(vertices: number[][][]): math.MathType {\n        return math.concat(vertices, this.bottom_half(vertices), 0)\n    }\n\n    bottom_half(vertices: math.MathArray): math.MathArray {\n        //Initially I used .reverse which broke stuff as it's in-place\n        let rolled_vertices = []\n        let roll_offset = math.floor(vertices[0].length / 2)\n        for (let vertex_row of vertices) {\n            rolled_vertices.push(vertex_row.slice(roll_offset).concat(vertex_row.slice(0, roll_offset)))\n        }\n        return math.multiply(rolled_vertices.toReversed(), -1).slice(1)\n    }\n\n    half_sphere_vertices(radius: number, samples: number, vertical_samples: number = samples): math.MathType {\n        return this.build_quarters(this.quarter_sphere_vertices(radius, samples, 0, vertical_samples))\n    }\n\n    generate_vertices(): number[][][][] {\n        return [this.roll_vertices(this.build_halves(this.half_sphere_vertices(this.radius, this.samples, this.vertical_samples)))]\n    }\n\n    to_triangles(vertices: number[][][]) {\n        let positions: number[] = []\n        for (let row = 0; row < vertices.length; ++row) {\n            for (let row_column = 0; row_column < vertices[row].length; ++row_column) {\n                if (row > 0) {\n                    positions = positions.concat(vertices[row][row_column])\n                    positions = positions.concat(vertices[row][(row_column + 1) % vertices[row].length])\n                    positions = positions.concat(vertices[row - 1][(row_column) % vertices[row - 1].length])\n                }\n                //\n                if (row < vertices.length - 1) {\n                    positions = positions.concat(vertices[row][row_column])\n                    positions = positions.concat(vertices[row + 1][(row_column + 1) % vertices[row + 1].length])\n                    positions = positions.concat(vertices[row][(row_column + 1) % vertices[row].length])\n                }\n            }\n        }\n        return positions\n    }\n\n    geometry_from_vertices(vertices: number[][][], position_components: number): BufferGeometry {\n        let positions: number[] = this.to_triangles(vertices)\n        let geometry: BufferGeometry = new BufferGeometry();\n        geometry.setAttribute('position', new BufferAttribute(new Float32Array(positions), position_components));\n        geometry = BufferGeometryUtils.mergeVertices(geometry)\n        geometry.computeVertexNormals();\n        geometry.normalizeNormals();\n        return geometry\n    }\n\n    genGeometriesBase(position_components: number): BufferGeometry {\n        let sub_geometries = this.generate_vertices().map(sub_vertices => this.geometry_from_vertices(sub_vertices, position_components))\n        return BufferGeometryUtils.mergeBufferGeometries(sub_geometries)\n    }\n\n    genGeometries(): void {\n        const positionNumComponents: number = 3;\n        this.stripGeometry = this.genGeometriesBase(positionNumComponents)\n    }\n}\n\nexport class Spheroplatelet extends Sphere {\n    circle_radius: number\n\n    constructor(radius: number, circle_radius: number) {\n        super(radius);\n        this.circle_radius = circle_radius\n    }\n\n    generate_vertices(): math.MathType {\n        let vertices = super.generate_vertices()[0]\n        let row_count = math.size(vertices)[0]\n        let column_count = math.size(vertices)[1]\n        let top = [vertices[0].map(column => column.map(vertex => vertex))]\n        let bottom = [vertices[row_count - 1].map(column => column.map(vertex => vertex))]\n        let circle_angles = linspace(0, 2 * Math.PI, column_count + 1).slice(0, -1)\n        for (let row = 0; row < row_count; ++row) {\n            for (let column = 0; column < column_count; ++column) {\n                let radius_vector = vertices[row][column].slice(0, 2)\n                let norm = math.norm(radius_vector)\n                if (row == 0 || row == row_count - 1) {\n                    let face_circle_angles = circle_angles\n                    if (row == row_count - 1) {\n                        let offset = math.floor(row / 2) + 2\n                        face_circle_angles = circle_angles.slice(offset).concat(circle_angles.slice(0, offset))\n                    }\n                    let x = face_circle_angles[column]\n                    radius_vector = [math.cos(x), math.sin(x)]\n                    norm = 1\n                }\n                let normalised_radius_vector = math.multiply(this.circle_radius, math.divide(radius_vector, norm))\n                vertices[row][column][0] += normalised_radius_vector[0]\n                vertices[row][column][1] += normalised_radius_vector[1]\n            }\n        }\n        return [top.concat(vertices.slice(0, 1)), vertices, vertices.slice(-1).concat(bottom)]\n    }\n}\n\n//Ellipsoid mesh generator\nexport class Ellipsoid extends Sphere {\n    //Scale factor in [x, y, z] directions\n    scale: number[];\n\n    constructor(x: number, y: number, z: number) {\n        //Derive from origin centred sphere of radius 1\n        super(1);\n        this.scale = [x, y, z];\n    }\n\n    //Samples from ellipsoid instead of sphere\n    sample_sphere(radius: number, theta: number, phi: number): number[] {\n        //Multiply origin centred sphere coordinates by scale vector\n        return math.dotMultiply(super.sample_sphere(radius, theta, phi), this.scale);\n    }\n}\n\nexport class CapCutSphereBase extends Sphere {\n    cut_radius: number\n\n    constructor(radius: number, cut_radius: number, vertical_sample_scale: number = 1, z_cut: boolean = true) {\n        super(radius, vertical_sample_scale);\n        this.cut_radius = z_cut ? math.sqrt(math.square(radius) - math.square(cut_radius)) : cut_radius\n    }\n\n    base(phis: number[], flat_top: boolean) {\n        let vertices = this.roll_vertices(this.build_quarters(this.spherical_vertices(this.radius, this.quarter_thetas(this.samples), phis, this.samples)))\n        let end_source_index = flat_top ? 0 : vertices.length - 1\n        let xs = vertices[end_source_index].map(vertex => vertex[0])\n        let ys = vertices[end_source_index].map(vertex => vertex[1])\n        let zs = vertices[end_source_index].map(vertex => vertex[2])\n        let end = [new Array(math.size(vertices)[1]).fill([math.mean(xs), math.mean(ys), math.mean(zs)])]\n        return [vertices, flat_top ? end.concat(vertices.slice(0, 1)) : vertices.slice(-1).concat(end)]\n    }\n}\n\nexport class CutSphere extends CapCutSphereBase {\n    generate_vertices() {\n        let phis = linspace(math.asin(this.cut_radius / this.radius), Math.PI, this.vertical_samples - 1)\n        return super.base(phis, true)\n    }\n}\n\nexport class DoubleCutSphere extends CapCutSphereBase {\n    generate_vertices() {\n        let angle_cut = math.asin(this.cut_radius / this.radius)\n        let phis = linspace(angle_cut, Math.PI - angle_cut, this.vertical_samples - 2)\n        let partial_vertices = super.base(phis, true)\n        let index = partial_vertices[0].length - 1\n        let xs = partial_vertices[0][index].map(vertex => vertex[0])\n        let ys = partial_vertices[0][index].map(vertex => vertex[1])\n        let zs = partial_vertices[0][index].map(vertex => vertex[2])\n        let end = [new Array(math.size(partial_vertices[0])[1]).fill([math.mean(xs), math.mean(ys), math.mean(zs)])]\n        partial_vertices.push(end.concat([partial_vertices[0][index].toReversed()]))\n        return partial_vertices\n    }\n}\n\nexport class Cap extends CapCutSphereBase {\n    generate_vertices() {\n        let phis = linspace(0, math.asin(this.cut_radius / this.radius), this.vertical_samples - 1)\n        return super.base(phis, false)\n    }\n}\n\nexport class BaseLens extends Sphere {\n    radius_2: number\n    angle: number\n    cut_radius: number\n\n    constructor(radius: number, radius_2: number, angle: number) {\n        super(radius);\n        this.radius_2 = radius_2\n        this.angle = Math.PI - angle\n        this.cut_radius = this.radius * Math.sin(this.angle)\n    }\n\n    generate_vertices(): math.MathType {\n        if (this.angle == 0) {\n            return super.generate_vertices()\n        }\n        let cut_radius = this.cut_radius\n        let top_proportion = 0.5\n        let bottom_proportion = 0.5\n        let top_shape = new Cap(this.radius_2, cut_radius, top_proportion, false)\n        let bottom_cap = this.angle > Math.PI / 2\n        let bottom_shape = bottom_cap ? new Cap(this.radius, cut_radius, bottom_proportion, false) : new CutSphere(this.radius, cut_radius, bottom_proportion, false)\n        top_shape.set_lod(this.LOD)\n        bottom_shape.set_lod(this.LOD)\n        let top = math.multiply(top_shape.generate_vertices()[0], -1)\n        let bottom = bottom_shape.generate_vertices()[0]\n        if (bottom_cap) {\n            bottom.reverse()\n            for (let row = 0; row < math.size(bottom)[0]; ++row) {\n                bottom[row].reverse()\n                for (let column = 0; column < math.size(bottom)[1]; ++column) {\n                    bottom[row][column][1] *= -1\n                    bottom[row][column][2] *= -1\n                }\n            }\n        }\n        let pole_offset = bottom[bottom.length - 1][0][2]\n        bottom = this.reverse_vertices(bottom.map(row => row.map(vertex => math.multiply(math.subtract(vertex, [0, 0, pole_offset]), -1))).reverse())\n        let distance = bottom[bottom.length - 1][0][2] + top[top.length - 1][0][2]\n        top = this.reverse_vertices(top.map(row => row.map(vertex => math.add(math.multiply(vertex, -1), [0, 0, distance]))).reverse())\n        return [top, bottom]\n    }\n}\n\nexport class ThickLens extends BaseLens {\n    constructor(radius: number, thickness: number, angle: number) {\n        // let cos_theta_old = Math.cos(Math.PI - angle)\n        // let radius_2_old = (2 * radius ** 2 * cos_theta_old + 2 * radius ** 2 - 2 * radius * thickness * cos_theta_old - 2 * radius * thickness + thickness ** 2) / (2 * (radius * cos_theta_old + radius - thickness))\n        let cos_theta = Math.cos(angle)\n        let radius_2 = (2 * radius ** 2 * (1 - cos_theta) + 2 * thickness * radius * (cos_theta - 1) + thickness ** 2) / (2 * (radius * (1 - cos_theta) - thickness))\n        super(radius, radius_2, angle);\n    }\n}\n\nexport class Lens extends BaseLens {\n    constructor(radius: number, angle: number) {\n        super(radius, radius, angle);\n    }\n}\n\nexport class RadiusOnlyLens extends BaseLens {\n    constructor(radius: number) {\n        let angle = Math.acos(1 - 1 / (2 * Math.PI * radius ** 2));\n        super(radius / 2, radius / 2, angle);\n    }\n}\n\nexport class BiconvexLens extends BaseLens {\n    constructor(radius: number, angle: number, separation: number) {\n        super(radius, -radius, angle);\n        this.separation = separation;\n    }\n\n    new_row(top: number[][], radius: number) {\n        let offset = Math.acos(top[0][0] / radius)\n        return linspace(0 + offset, Math.PI * 2 + offset, top.length + 1).slice(0, -1).map(angle => this.sample_sphere(radius, angle, Math.PI / 2))\n    }\n\n    generate_vertices(): math.MathType {\n        let shape_halves = super.generate_vertices();\n        let offset = -(shape_halves[0][shape_halves[0].length - 1][0][2] + shape_halves[1][0][0][2]) / 2;\n        shape_halves = shape_halves.map(part => part.map(row => row.map(item => math.add(item, [0, 0, offset]))));\n        shape_halves[0] = shape_halves[0].map(row => row.map(item => math.subtract(item, [0, 0, this.separation / 2])));\n        shape_halves[1] = shape_halves[1].map(row => row.map(item => math.add(item, [0, 0, this.separation / 2])));\n        if (this.separation == 0) {\n            return shape_halves;\n        }\n        let top = shape_halves[1]\n        let bottom = shape_halves[0]\n        let new_row = this.new_row(top[top.length - 1], this.cut_radius)\n        let bottom_offsets = bottom[0].map(vertex => math.norm(math.subtract(vertex, top[top.length - 1][0])))\n        let bottom_roll = -bottom_offsets.indexOf(Math.min.apply(Math, bottom_offsets))\n        bottom = bottom.map(row => this.roll_row(row, bottom_roll))\n        top.push(new_row)\n        top = top.concat(bottom)\n        return [top];\n    }\n}\n\n//Spherocylinder mesh generator\nexport class Spherocylinder extends BiconvexLens {\n    constructor(radius: number, length: number) {\n        super(radius, Math.PI / 2, length);\n    }\n}","import {Alert} from 'rsuite';\nimport {AmbientLight, DirectionalLight, DirectionalLightHelper, Light, PointLight, PointLightHelper} from 'three';\n\nenum LightTypes {\n    AMBIENT = 0,\n    DIRECTIONAL,\n    POINT\n}\n\nexport class LightNew {\n    static light_types = LightTypes;\n    light: Light;\n    helper: DirectionalLightHelper | PointLightHelper | undefined;\n\n    constructor(lightType: LightTypes) {\n        this.light = this.setLight(lightType);\n        this.helper = this.setHelper();\n    }\n\n    setLight(lightType: LightTypes) {\n        let light;\n        switch (lightType) {\n            case LightTypes.AMBIENT:\n                light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case LightTypes.DIRECTIONAL:\n                light = new DirectionalLight(\"#ffffff\", 0.5);\n                light.position.set(-5, 0, -5);\n                break;\n            case LightTypes.POINT:\n                light = new PointLight(\"#ffffff\", 0.6);\n                light.position.set(5, 0, 5);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                throw RangeError;\n        }\n        return light\n    }\n\n    setHelper() {\n        let helper;\n        if (this.light instanceof DirectionalLight) {\n            helper = new DirectionalLightHelper(this.light, 10);\n        }\n        if (this.light instanceof PointLight) {\n            helper = new PointLightHelper(this.light, 10);\n        }\n        return helper;\n    }\n\n    updatePosition(x: number, y: number, z: number) {\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c: string, i: number) {\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n}\n\nexport default LightNew;","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'], vals: [1.0, 1.0, 0.2]\n    }, Spherocylinder: {\n        names: ['Radius', 'Length'], vals: [0.5, 0.7]\n    }, Spheroplatelet: {\n        names: ['RadSphere', 'RadCircle'], vals: [0.3, 0.2]\n    }, CutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n    }, Sphere: {\n        names: ['Radius'], vals: [0.6]\n    }, Cap: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n    }, Lens: {\n        names: ['Radius', 'Angle'], vals: [1, 0.7]\n    }, ThickLens: {\n        names: ['Radius', 'Thickness', 'Angle'], vals: [1, 0, 0.7]\n    }, RadiusOnlyLens: {\n        names: ['Radius'], vals: [0.5]\n    }, BiconvexLens: {\n        names: ['Radius', 'Angle', \"Separation\"], vals: [1, 0.7, 0]\n    }, DoubleCutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n\n    }\n}\n\nexport default Parameters;","import * as THREE from 'three';\nimport {Color, Euler, LOD, MeshPhongMaterial, Quaternion, Vector3} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes';\nimport {Shape} from './Shapes';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport {Alert} from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    unitBox;\n\n\n    positions = [];\n    Folded_position = []\n    orientations = [];\n    elements = [];\n    meshes = [];\n// materials =[];\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n        quaternion;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n            this.quaternion = q\n        }\n\n        quaternionToUnitVector(q) {\n            let a = (2 * (q.w * q.y + q.x * q.z));\n            let b = (2 * (-q.w * q.x + q.y * q.z));\n            let c = (1 - 2 * (q.x ** 2 + q.y ** 2));\n            return [a, b, c];\n        }\n\n        setColourIndex(i) {\n            this.colourIndex = i;\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cap':\n                parameters = Parameters.Cap;\n                break;\n            case 'Lens':\n                parameters = Parameters.ThickLens;\n                break;\n            case 'Cinacchi Lens':\n                parameters = Parameters.RadiusOnlyLens;\n                break;\n            case 'Biconvex Lens':\n                parameters = Parameters.BiconvexLens;\n                break;\n            case 'Double Cut Sphere':\n                parameters = Parameters.DoubleCutSphere;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    isFoldedTest() {\n        let x = this.unitBox[0] / 2;\n        let y = this.unitBox[1] / 2;\n        let z = this.unitBox[2] / 2;\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if (a >= x || a <= -x) {\n                return false\n            }\n            if (b >= y || b <= -y) {\n                return false\n            }\n            if (c >= z || c <= -z) {\n                return false\n            }\n\n        }\n        return true;\n    }\n\n    genSet() {\n        this.validateData();\n        this.genElements();\n        this.genMeshes();\n        // this.genListBoundingBox();\n    }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length !== defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace = false;\n        this.lod = Shape.default_lod;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    genUnitBox() {\n        // This is the user input unit box of whole\n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition() {\n        // Place holder function to generate Psedo unfolded configuration\n        if (this.isFoldedTest() === false) {\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos = [];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rnd1 = (Math.random() * (2) - 1)\n            let rnd2 = (Math.random() * (2) - 1)\n            let rnd3 = (Math.random() * (2) - 1)\n            pos.push([this.positions[i][0] + rnd1 * x, this.positions[i][1] + rnd2 * y, this.positions[i][2] + rnd3 * z])\n        }\n        this.positions = pos;\n\n    }\n\n    genFoldedPositionFromUnfold() {\n        if (this.isFoldedTest() === true) {\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos = [];\n        let lx = this.unitBox[0];\n        let ly = this.unitBox[1];\n        let lz = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n\n            rx = rx - lx * Math.round(rx / lx);\n            ry = ry - ly * Math.round(ry / ly);\n            rz = rz - lz * Math.round(rz / lz);\n\n            pos.push([rx, ry, rz])\n        }\n        this.Folded_position = pos;\n\n    }\n\n    setBackFace(bool) {\n        this.renderBackFace = bool;\n    }\n\n    genMeshes() {\n        let num = this.elements.length;\n\n        let c = '#FFFFFF'\n        let geometry_distances = [0]\n        let geometries = geometry_distances.map((distance, distance_index) => this.new_gen_geometries(Math.max(0, this.lod - distance_index)))\n        for (let i = 0; i < num; i++) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[this.elements[i].colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n            let mat = new MeshPhongMaterial({\n                side: this.renderBackFace ? THREE.DoubleSide : THREE.FrontSide,\n                clipShadows: true,\n                clippingPlanes: this.clippingPlanes,\n                wireframe: this.wireframe,\n                color: c,\n            });\n            let matrix2 = new THREE.Matrix4();\n            const position = new THREE.Vector3();\n            position.x = this.elements[i].position[0];\n            position.y = this.elements[i].position[1];\n            position.z = this.elements[i].position[2];\n            let ori = this.elements[i].quaternion\n            matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n            let meshes = geometries.map(geometry => new THREE.Mesh(geometry, mat))\n            let lod_mesh = new LOD()\n            for (let i = 0; i < meshes.length; ++i) {\n                lod_mesh.addLevel(meshes[i], geometry_distances[i])\n            }\n            lod_mesh.applyMatrix4(matrix2)\n            this.meshes.push(lod_mesh);\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length > 0) {\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for (let elem of this.elements) {\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    new_gen_geometries(lod) {\n        let shape\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                shape = new SHAPE.Sphere(...this.parameters);\n                break;\n            case 'Cap':\n                shape = new SHAPE.Cap(...this.parameters);\n                break;\n            case 'Lens':\n                shape = new SHAPE.ThickLens(...this.parameters);\n                break;\n            case 'Cinacchi Lens':\n                shape = new SHAPE.RadiusOnlyLens(...this.parameters);\n                break;\n            case 'Biconvex Lens':\n                shape = new SHAPE.BiconvexLens(...this.parameters);\n                break;\n            case 'Double Cut Sphere':\n                shape = new SHAPE.DoubleCutSphere(...this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n        shape.LOD = lod\n        shape.generate();\n        return shape.stripGeometry\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2 * pos[0], 2 * pos[1], 2 * pos[2]);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0] ** 2;\n            orderTensor[0][1] += orientation[0] * orientation[1];\n            orderTensor[0][2] += orientation[0] * orientation[2];\n            orderTensor[1][1] += orientation[1] ** 2;\n            orderTensor[1][2] += orientation[1] * orientation[2];\n            orderTensor[2][2] += orientation[2] ** 2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor;\n        orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor;\n        orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor;\n        orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n\n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0] ** 2 + this.director[1] ** 2 + this.director[2] ** 2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined) {\n            this.director = [0, 0, 1];\n        } else {\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element) {\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0] + element.orientation[1] * this.director[1] + element.orientation[2] * this.director[2]);\n        if (this.orientationType === 'v') {\n            scalarProduct = Math.abs(element.orientation[1] * this.director[0] + element.orientation[0] * this.director[1] + element.orientation[2] * this.director[2]);\n        }\n        if (scalarProduct > 1) {\n            scalarProduct = 1;\n        }\n\n        return Math.round(Math.acos(scalarProduct) / Math.PI * 2 * (n));\n\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n}\n\nexport default Set;","import {Box3, Box3Helper, BufferGeometry, Color, GridHelper, Line, LineBasicMaterial, Vector3} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;\n    G;\n    B;\n    director_colour;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes(undefined);\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n        this.director_colour = new Color(\"rgb(255, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b = null;\n        this.boundingShape = null;\n\n        for (let set of sets) {\n            if (b != null) {\n                break\n            }\n            b = set.genUnitBox()\n\n        }\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                box.setFromCenterAndSize(new Vector3(0, 0, 0), new Vector3(b[0], b[1], b[2]));\n                this.boundingShape = new Box3Helper(box, this.colour);\n\n                break;\n            default:\n                Alert.error('Error: Unknown bounding shape identifier');\n\n\n        }\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour, director) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 5\n        });\n        if (!this.multicolour) {\n            this.genAxes(director);\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes(director) {\n        console.log(\"director\", director)\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let origin = new Vector3(0, 0, 0);\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, axesSize, 0)]), this.material));\n        let director_vector = new Vector3(director[0], director[1], -director[2]);\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, director_vector.clone().multiplyScalar(axesSize)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(director) {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let origin = new Vector3(0, 0, 0);\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, 0, axesSize)]), mat3));\n        if (typeof director !== typeof undefined) {\n            let director_vector = new Vector3(director[0], director[1], -director[2]);\n            let mat4 = this.material = new LineBasicMaterial({color: this.director_colour, linewidth: 5});\n            this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, director_vector.clone().multiplyScalar(axesSize)]), mat4));\n        }\n    }\n\n    toggleMulticolour(director) {\n        this.multicolour = !this.multicolour;\n        if (this.multicolour) {\n            this.genMulticolourAxes(director);\n        } else {\n            this.updateColour(this.colour, director);\n            this.genAxes(director);\n        }\n    }\n\n\n}\n\nexport default ReferenceTools;","import {\n    BufferGeometry,\n    Color,\n    Euler,\n    InstancedMesh,\n    Line,\n    LineBasicMaterial,\n    Matrix4,\n    MeshPhongMaterial,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Plane,\n    PlaneHelper,\n    Quaternion,\n    Scene,\n    Vector3,\n    WebGLRenderer\n} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport Set from './Set'\nimport LightNew from './Light'\nimport ReferenceTools from './ReferenceTools'\nimport {Alert} from 'rsuite'\nimport * as SHAPE from './Shapes';\n\n\nexport class Model extends Scene {\n    sets: Set[] = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n    axesEnabled = false;\n\n\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n    clippingPlanes;\n    clippingHelpers;\n    numOfObject;\n    axes: Line[] = [];\n    axes_enabled: boolean = false;\n    colour_axes: boolean = true;\n    lod: number = SHAPE.Shape.default_lod;\n    repeats_x: number = 0;\n    repeats_y: number = 0;\n    repeats_z: number = 0;\n    molecules: Object3D[] = [];\n\n    constructor(chronometer, notify) {\n        super();\n        this.scene = this;\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n\n    }\n\n    onBeforeRender = () => {\n        this.set_axes();\n    };\n\n    /* GENERAL FUNCTIONS */\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            let hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    setDefault() {\n\n        this.renderer = new WebGLRenderer({\n            antialias: false, powerPreference: \"high-performance\", preserveDrawingBuffer: true\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.rotating = false;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list = [];\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType, true);\n        this.lighting = [new LightNew(LightNew.light_types.AMBIENT), new LightNew(LightNew.light_types.DIRECTIONAL), new LightNew(LightNew.light_types.POINT)];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = SHAPE.Shape.default_lod;\n    }\n\n    set_axes(enabled: boolean = this.axes_enabled, scale: number = 200, camera: PerspectiveCamera | OrthographicCamera = this.camera, sets: Set[] = this.sets, axes_origin: Vector3 = new Vector3(450, -250, 0), scene: Scene = this.scene, colour_axes: boolean = this.colour_axes): void {\n        console.assert(scale > 0)\n        console.log(camera.zoom)\n        //Remove existing lines from scene\n        if (typeof this.axes !== typeof undefined) {\n            for (let axis of this.axes) {\n                scene.remove(axis);\n            }\n        }\n        if (!enabled) {\n            return;\n        }\n        scale /= camera.zoom;\n        axes_origin.divideScalar(camera.zoom);\n        //Construct line parameters\n        let world_axes_origin: Vector3 = camera.localToWorld(axes_origin);\n        let axis_line_ends: Vector3[] = [new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1)];\n        let director_line_ends: Vector3[] = sets.map(set => set.director).map(director => new Vector3(director[0], director[1], -director[2]));\n        let line_ends: Vector3[] = axis_line_ends.concat(director_line_ends);\n        //Build line materials\n        let line_materials: LineBasicMaterial[] = line_ends.map(line_end => new LineBasicMaterial({color: this.colour_from_director(line_end, colour_axes)}));\n        //Build line geometries\n        let line_geometries: BufferGeometry[] = line_ends.map(line_end => new BufferGeometry().setFromPoints([world_axes_origin, world_axes_origin.clone().add(line_end.multiplyScalar(scale))]));\n        //Build line objects\n        let axes: Line[] = line_geometries.map((line_geometry, i) => new Line(line_geometry, line_materials[i]));\n        //Add lines to scene\n        for (let axis of axes) {\n            scene.add(axis);\n        }\n        //Store lines\n        this.axes = axes;\n    }\n\n    colour_from_director(vector: Vector3, enable_colour: boolean = true, palette_start: number = 4 * Math.PI / 3, palette_range: number = -2 / 3, sets: Set[] = this.sets): Color {\n        console.assert(0 <= palette_start && palette_start < 2 * Math.PI);\n        console.assert(-1 <= palette_range && palette_range <= 1);\n        console.assert(sets.length > 0);\n        let hue: number = 0;\n        let lightness: number = 1;\n        //Update hue if director present\n        if (enable_colour && sets.length > 0) {\n            //TODO handle multiple directors and director should be stored as vec3 in first place\n            let director: number[] = sets[0].director;\n            let director_vector: Vector3 = new Vector3(director[0], director[1], -director[2]);\n            //Set hue based on angle between director and vector\n            //TODO properly check rather than min\n            let angle: number = Math.acos(Math.min(director_vector.dot(vector.normalize()), 1));\n            console.assert(0 <= angle && angle <= Math.PI);\n            if (angle > Math.PI / 2) {\n                angle = Math.PI - angle;\n            }\n            console.assert(0 <= angle && angle <= Math.PI / 2);\n            hue = (palette_start + (angle * 4) * palette_range) % (2 * Math.PI) / (2 * Math.PI);\n            lightness = 0.5;\n        }\n        console.assert(0 <= hue && hue <= 1);\n        console.assert(0 <= lightness && lightness <= 1);\n        return new Color().setHSL(hue, 1, lightness);\n    }\n\n    update() {\n        console.log('update called');\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n\n    }\n\n    // occlusionCulling(){\n\n    // const renderer = new WebGLRenderer();\n    // const gl = renderer.getContext();\n    // console.log(gl)\n    // const scene = new Scene();\n    // const mesh1 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // const mesh2 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // scene.add(mesh1, mesh2);\n    // var query = gl.createQuery();\n    // const camera = this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n\n    // camera.position.z = 5;\n    // for (let l of this.lighting) {\n    //     scene.add(l.light);}\n    // gl.beginQuery(gl.ANY_SAMPLES_PASSED,query);\n    // renderer.render(scene, camera);\n    // gl.endQuery(gl.ANY_SAMPLES_PASSED,query);\n    // var result = gl.getQueryParameter(query,gl.QUERY_RESULT);\n    // console.log(Number(result));\n    // console.log(result)\n\n    getRender_Object_number() {\n        let num = 0;\n        this.scene.traverse(function (child) {\n            //@ts-ignore\n            if (child.isMesh) {\n                num = num + 1;\n            }\n\n        });\n\n        this.numOfObject = (num - 6);\n        console.log(this.numOfObject)\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n        console.log(this.sidebarExpanded)\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    update_repeats(x: number = this.repeats_x, y: number = this.repeats_y, z: number = this.repeats_z) {\n        this.repeats_x = x\n        this.repeats_y = y\n        this.repeats_z = z\n        while (true) {\n            let molecule = this.molecules.pop();\n            if (molecule == undefined) {\n                break;\n            }\n            this.scene.remove(molecule);\n        }\n        this.sets.forEach(set => {\n            set.meshes.forEach(mesh => {\n                for (let x = -this.repeats_x; x < this.repeats_x + 1; ++x) {\n                    for (let y = -this.repeats_y; y < this.repeats_y + 1; ++y) {\n                        for (let z = -this.repeats_z; z < this.repeats_z + 1; ++z) {\n                            if (x == 0 && y == 0 && z == 0) {\n                                continue;\n                            }\n                            let new_mesh: Object3D = mesh.clone();\n                            new_mesh.position.x += set.unitBox[0] * x;\n                            new_mesh.position.y += set.unitBox[1] * y;\n                            new_mesh.position.z += set.unitBox[2] * z;\n                            this.molecules.push(new_mesh);\n                            this.scene.add(new_mesh);\n                        }\n                    }\n                }\n            })\n        });\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            // m.geometry.dispose();\n            // m.material.dispose();\n            // m.dispose();\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n        this.update_repeats();\n        // let mesh = this.occlusionCulling();\n        // this.scene.add(mesh);\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                // m.geometry.dispose();\n                // m.material.dispose();\n                // m.dispose();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n\n    }\n\n    /* LOD FUNCTIONS */\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n            console.log('sidebar')\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        console.log('set camera called')\n        if (this.camera) {\n            this.camera = '';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        // this.update();\n\n\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / -2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / -2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type !== 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id, toggle) {\n        if (toggle === true) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].genMeshes();\n            });\n        } else if (toggle === false) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position = [];\n                this.sets[id].genElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggle_axes_enabled() {\n        this.axes_enabled = !this.axes_enabled;\n        this.update();\n    }\n\n    toggle_axes_colour() {\n        this.colour_axes = !this.colour_axes;\n        this.update();\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour(this.sets[0].director);\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle, id) {\n        if (toggle === true) {\n            this.renderer.localClippingEnabled = true;\n            for (let x = 0; x < this.sets.length; x++) {\n                this.updateSets(x, [x], (x) => {\n                    this.sets[x].elements = [];\n                    this.sets[x].meshes = [];\n                    this.sets[x].setBackFace(true);\n                    this.sets[x].genElements();\n                    this.sets[x].genMeshes();\n                });\n            }\n\n        } else {\n            this.renderer.localClippingEnabled = false;\n\n        }\n\n\n    }\n\n    // disableClipping(){\n    //     this.renderer.localClippingEnabled = false;\n    // }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n\n        this.clippingPlanes = [new Plane(new Vector3(1, 0, 0), 180), new Plane(new Vector3(-1, 0, 0), 180), new Plane(new Vector3(0, 1, 0), 180), new Plane(new Vector3(0, -1, 0), 180), new Plane(new Vector3(0, 0, 1), 180), new Plane(new Vector3(0, 0, -1), 180)];\n\n        this.clippingHelpers = [new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff), new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n\n    }\n\n\n    // }\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    /* Video SUITE */\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n            let fileHandle = [];\n            let lst = [];\n            try {\n                fileHandle = await window.showOpenFilePicker({multiple: true});\n                for (let i = 0; i < fileHandle.length; i++) {\n                    const file = await fileHandle[i].getFile();\n                    lst.push(file);\n                }\n                this.Video_sample_list = lst;\n                resolve(lst);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    notifyFinishUpload() {\n        this.notify('info', `Files loaded successfully`, (<div>\n            <p style={{width: 320}}>\n                Now Select Your Video Viewing configuration!\n                You can show unit box, apply slicing , periodic boundary conditions etc.\n                Please Do not change screen size while generating Video e.g dont click on size bar\n            </p>\n        </div>));\n    }\n\n\n    retrieveVideoSample() {\n        return this.Video_sample_list;\n    }\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic', false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, {x: 50, y: 0, z: 50});\n        this.deleteAllMeshes();\n        this.testMaterial = new MeshPhongMaterial({wireframe: false});\n        // this.testShape = new SHAPE.Preset('Sphere', ...Parameters.Sphere.vals);\n        this.testShape = new SHAPE.Spheroplatelet(0.3, 0.2);\n        console.log('this.genshape');\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 140001;\n\n        let geoms = [];\n        geoms.push(this.testShape.stripGeometry.clone());\n        this.testGeo = geoms;\n\n        this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n\n        this.notify('info', 'Initialising Performance Test', (<p style={{width: 320}}>\n            Test Size: {this.testLimit.toString()} <br/>\n            Step: {step.toString()} <br/>\n            Shape: Spheroplatelet(0.3,0.2) <br/>\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br/>\n            Material: MeshPhongMaterial\n            <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n        </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Spheroplatelet (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString())\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (const set of this.sets) {\n            console.log(set)\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                // m.geometry.dispose();\n                // m.material.dispose();\n                // m.dispose();\n            }\n\n        }\n\n    }\n\n    addRandomParticles(n) {\n        this.deleteAllMeshes();\n        console.log('add called')\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n        // let m;\n        // for (let i = 0; i < n; i++) {\n        //     for (let g of this.testGeo) {\n        //          m = new Mesh(g, this.testMaterial);\n        //         this.scene.add(m);\n        //     }}\n\n        let InstancedMesh1 = new InstancedMesh(this.testGeo[0], this.testMaterial, n);\n        let InstancedMesh2 = new InstancedMesh(this.testGeo[1], this.testMaterial, n);\n        let InstancedMesh3 = new InstancedMesh(this.testGeo[2], this.testMaterial, n);\n        console.log(InstancedMesh1);\n        for (let i = 0; i < n; i++) {\n            console.log('called')\n            const matrix = new Matrix4();\n            const position = new Vector3();\n            const rotation = new Euler();\n            const quaternion = new Quaternion();\n            const scale = new Vector3();\n            const color = new Color();\n            position.x = Math.random() * 40 - 20;\n            position.y = Math.random() * 40 - 20;\n            position.z = Math.random() * 40 - 20;\n\n            rotation.x = Math.random() * 2 * Math.PI;\n            rotation.y = Math.random() * 2 * Math.PI;\n            rotation.z = Math.random() * 2 * Math.PI;\n\n            quaternion.setFromEuler(rotation);\n\n            scale.x = scale.y = scale.z = Math.random();\n\n            matrix.compose(position, quaternion, scale);\n            InstancedMesh1.setMatrixAt(i, matrix);\n            InstancedMesh2.setMatrixAt(i, matrix);\n            InstancedMesh3.setMatrixAt(i, matrix);\n            InstancedMesh1.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh2.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh3.setColorAt(i, color.setHex(0xffffff * Math.random()));\n        }\n        this.scene.add(InstancedMesh1, InstancedMesh2, InstancedMesh3);\n        this.update();\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","import {ButtonToolbar, Col, Dropdown, InputGroup, InputNumber, RangeSlider, Row, Slider} from 'rsuite';\nimport React, {useState} from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    let set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(<ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i}\n                                 step={props.step} positive={props.positive} styling={props.styling}/>);\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive) {\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        let InputBox;\n        if (this.numerical) {\n            let defaultVal = this.values;\n            InputBox = (<div style={this.styling[0]}>\n                <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min}/>\n            </div>);\n        } else {\n            let vals = this.values;\n            let active = this.active;\n            let listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key={val} eventKey={val} active={act}\n                                              onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key={'panel'} eventKey={'panel'} panel style={{width: 150}}></Dropdown.Item>);\n\n            InputBox = (<ButtonToolbar style={{width: 10, marginLeft: 0}}>\n                <Dropdown style={{width: 100}} title={this.active}>\n                    {listItems}\n                </Dropdown>\n            </ButtonToolbar>);\n\n        }\n\n        return (<div>\n            <Row style={{marginTop: 15}}>\n                <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                <Col md={10}/>\n                <Col md={14}>{InputBox}</Col>\n            </Row>\n        </div>);\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (<div>\n        <br/>\n        <Row>\n            <Col md={5}>\n                <p style={{marginTop: 10, marginLeft: 30}}>{props.title}</p>\n            </Col>\n            <Col md={1}/>\n            <Col md={16}>\n                <InputGroup>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[0]}\n                        step={0.1}\n                        onChange={nextValue => {\n                            const end = value[1];\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            if (parseFloat(nextValue) > end) {\n                                return;\n                            }\n                            setValue([parseFloat(nextValue), end]);\n                            f(i, [parseFloat(nextValue), end]);\n                        }}\n                    />\n                    <InputGroup.Addon>to</InputGroup.Addon>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[1]}\n                        step={0.1}\n                        onChange={(nextValue) => {\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            const start = value[0];\n                            if (start > parseFloat(nextValue)) {\n                                return;\n                            }\n                            setValue([start, parseFloat(nextValue)]);\n                            f(i, [start, parseFloat(nextValue)]);\n                        }}\n                    />\n                </InputGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col md={21}>\n                <RangeSlider\n                    min={-100.0}\n                    max={100.0}\n                    progress\n                    style={{marginLeft: 35, marginTop: 30}}\n                    value={value}\n                    onChange={value => {\n                        setValue(value);\n                        f(i, value);\n                    }}\n                />\n            </Col>\n\n        </Row>\n    </div>);\n}\n\nexport const CustomSlider = (props) => {\n    let f = props.f;\n    let [value, setValue] = useState(props.val);\n    let type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{marginLeft: 25, marginTop: 16, width: 170}}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35}}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if (!value || isNaN(value)) {\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>);\n}","import {\n    Alert,\n    Button,\n    ButtonToolbar,\n    ControlLabel,\n    Drawer,\n    Dropdown,\n    Form,\n    FormGroup,\n    Header,\n    Icon,\n    Nav,\n    Navbar,\n    Slider,\n    Tooltip,\n    Whisper\n} from 'rsuite';\nimport {ParameterSet} from './Tools';\nimport React from \"react\";\nimport {Shape} from \"../Model/Shapes\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.resolution = [10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    setResolution(val) {\n        this.resolution[0] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (<Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\"/>}>\n\n            <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n            <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n\n            <Button style={{width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15}}\n                    appearance='primary' onClick={this.export}> Export </Button>\n        </Dropdown>);\n    }\n\n}\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {active: 2};\n        this.f = props.f;\n        this.toggler = props.toggler;\n    }\n\n    render() {\n        return (<Dropdown\n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\"/>}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n            }}>\n\n            <Dropdown.Menu title=\"Samples\">\n                <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Spherocylinders\">\n                <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Dense Packings\">\n                <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Item panel style={{width: 120}}></Dropdown.Item>\n        </Dropdown>);\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {val: props.model.lod + 1};\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (<Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\"/>}>\n            <Form style={{marginLeft: 20, marginTop: 20}} layout=\"inline\">\n                <FormGroup>\n                    <ControlLabel>Adjust LOD</ControlLabel>\n                    <Whisper placement=\"bottom\" trigger=\"hover\" speaker={<Tooltip>\n                        Decreasing LOD will increase rendering speed.\n                    </Tooltip>}>\n                        <Icon icon=\"question-circle\" size=\"lg\"/>\n                    </Whisper>\n                </FormGroup>\n            </Form>\n\n            <Slider\n                min={1}\n                step={1}\n                max={Shape.complexity_count}\n                value={lod}\n                graduated\n                progress\n                style={{width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20}}\n                onChange={(value) => {\n                    this.model.updateLOD(value - 1);\n                    this.updateVal(value);\n                    this.model.update();\n                }}\n\n            />\n            <br/>\n        </Dropdown>);\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = {fps: 0, showDrawer: false, rotating: false, numOfRender: this.model.numOfObject};\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2), numOfRender: this.model.numOfObject\n        });\n    }\n\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (<div>\n            <Header style={{height: 56}}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight>\n                            <ButtonToolbar>\n\n                                <Nav.Item active>fps: {fps}</Nav.Item>\n                                <Nav.Item active>Draw calls made: {num}</Nav.Item>\n                                <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\"\n                                          icon={<Icon icon=\"dashboard\"/>}>Run Performance Test</Nav.Item>\n\n                                <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\"\n                                          icon={<Icon icon=\"refresh\" spin={rotating}/>}>Autorotate</Nav.Item>\n\n\n                                <PerformanceDropdown model={this.model}/>\n                                <LibraryDropdown f={this.functions[3]}/>\n                                <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\"\n                                          icon={<Icon icon=\"info\"/>}>About</Nav.Item>\n                                <ExportDropdown f={this.functions[2]}/>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\"/>}\n                                          onSelect={this.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                       id=\"upload-btn\"\n                                       style={{display: 'none'}}\n                                       className='input-file'\n                                       accept='.json,.webmga'\n                                       onChange={e => this.functions[1](e.target.files[0])}/>\n                                <label htmlFor=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\"/>}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav>\n                            <h6 style={{padding: 20}}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n            <Drawer\n                size={'sm'}\n                placement={'right'}\n                show={showDrawer}\n                onHide={this.toggleDrawer}\n                backdrop={false}\n            >\n                <Drawer.Header>\n                    <Drawer.Title>About</Drawer.Title>\n                    <br/>\n                    <ButtonToolbar>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"mortar-board\"/> Liquid Crystals\n                        </Button>\n                        <Button key=\"man\" color=\"cyan\"\n                                href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"info-circle\"/> User Manual\n                        </Button>\n                        <Button color=\"cyan\" href=\"dissertations/2021.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation 2021\n                        </Button>\n                        <Button color=\"cyan\" href=\"dissertations/2023.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation 2023\n                        </Button>\n                        <Button color=\"cyan\" href=\"https://github.com/joe-down/WebMGA-3\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"github\"/> Github\n                        </Button>\n                    </ButtonToolbar>\n                    <br/>\n                    <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations\n                        included in the library.</i></p>\n\n                    <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a\n                        scientific publication, see 'User Manual'.</i></p>\n\n                </Drawer.Header>\n\n                <div style={{margin: 25}}>\n                    <h2>WebMGA </h2>\n                    <br/>\n                    WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc\n                    Computer Science at University College London, supervised by Guido Germano, Michael P. Allen,\n                    and Tobias Ritschel.\n                    <br/><br/>\n                    The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for\n                    coarse-grained molecular models that utilises prolated and elongated convex bodies as the\n                    elementary units of simulation.\n                    <br/><br/>\n                    Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack\n                    of available visualisation platforms suitable for this niche, WebMGA provides a unique,\n                    out-of-the-box solution for researchers and educators to generate, stylise, and interact with\n                    three-dimensional renders of molecular simulations.\n                    <br/><br/>\n                    WebMGA is written in Javascript, and implements the graphics library <a\n                    href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering\n                    images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\"\n                                      rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface\n                    that is intuitively compartmentalised and easy to learn.\n                    <br/><br/>\n                    WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\"\n                                                 rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based\n                    application written in C++ that filled this gap in molecular graphics in 2008.\n\n                </div>\n            </Drawer>\n        </div>);\n    }\n}\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport {View} from './View'\n\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.model.deleteAllMeshes();\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Sphere\", \"Ellipsoid\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Double Cut Sphere\", \"Cap\", \"Lens\", \"Cinacchi Lens\", \"Biconvex Lens\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n\n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;\n    }\n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(toggle)\n        if(toggle ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n\n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n\n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n            };\n        }\n        if (i === max_iter){\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n\n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\"\n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n\n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n\n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n        console.log(this.state,View.state.slicing);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        this.setState({\n            slicing_enabled :toggle\n        })\n        View.state.slicing.slicing_enabled = toggle\n        console.log(this.state,View.state.slicing);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n\n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                View.state.slicing.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                View.state.slicing.ty = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                View.state.slicing.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n\n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.update_repeats = this.update_repeats.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n        this.toggle_axes_enabled = this.toggle_axes_enabled.bind(this)\n        this.toggle_axes_colour = this.toggle_axes_colour.bind(this)\n\n    }\n\n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n\n    toggle_axes_enabled() {\n        this.model.toggle_axes_enabled();\n        this.setState({axesEnabled: !this.model.axes_enabled});\n    }\n\n    toggle_axes_colour() {\n        this.model.toggle_axes_colour();\n        this.setState({multicolour: !this.model.colour_axes});\n    }\n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n    update_repeats(val, type) {\n        val = Math.abs(Math.round(val));\n        switch (type) {\n            case 0:\n                this.state.repeats.x = val;\n                break;\n            case 1:\n                this.state.repeats.y = val;\n                break;\n            case 2:\n                this.state.repeats.z = val;\n                break;\n            default:\n                throw new Error(\"Bad repeat type\")\n        }\n        console.log(\"bread\", this.state, View)\n        this.model.update_repeats(this.state.repeats.x, this.state.repeats.y, this.state.repeats.z);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.model.axes_enabled;\n        const multicolour = this.model.colour_axes;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Repeats  </b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={[this.state.repeats.x, this.state.repeats.y, this.state.repeats.z]} f={this.update_repeats} step={1} styling={submenuParameterSetStyling} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{marginLeft: 12}} checked={showAxes}\n                                      onClick={this.toggle_axes_enabled}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{marginLeft: 12}} checked={multicolour}\n                                      onClick={this.toggle_axes_colour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n","import {Alert, Container, Content, Icon, IconButton, Nav, Navbar, Sidebar} from 'rsuite';\nimport React, {Component} from \"react\";\nimport {\n    AdditionalLightOptions,\n    AmbientLightOptions,\n    CameraOptions,\n    ModelsOptions,\n    ReferenceOptions,\n    SlicingOptions,\n    VideoOptions\n} from './SubMenus'\n\n\nconst NavToggle = ({expand, onChange}) => {\n    return (<Navbar appearance=\"subtle\" className=\"nav-toggle\">\n        <Navbar.Body>\n            <Nav pullRight>\n                <IconButton\n                    circle\n                    style={{textAlign: 'center', margin: 10}}\n                    onClick={onChange}\n                    appearance=\"default\"\n                    icon={<Icon icon={expand ? 'angle-left' : 'angle-right'}/>}/>\n            </Nav>\n        </Navbar.Body>\n    </Navbar>);\n};\n\nconst navItemStyle = {margin: 6.5};\n\nlet sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({active, onSelect, ...props}) => {\n    return (<div>\n        <Nav {...props} activeKey={active} onSelect={onSelect}\n             style={{backgroundColor: '#101010', height: sidebarHeight}}>\n            <Nav.Item title=\"Models\" eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\"/>}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Slicing\" eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Video Rendering\" eventKey=\"Video Rendering\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item title=\"Camera\" eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item title=\"Ambient\" eventKey=\"Ambient\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item title=\"Lighting\" eventKey=\"Lighting\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item title=\"Reference\" eventKey=\"Reference\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\"/>}/>\n            {/* </Whisper> */}\n\n        </Nav>\n    </div>);\n};\n\nconst MenuContent = ({active, expand, onChange, model, toggler, functions}) => {\n\n    let menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange}/>);\n    } else {\n        menuContent.push(<div style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav>\n                        <h3 style={{marginTop: 15, marginLeft: 30}}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange}/>\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n        </div>);\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model}/>);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler}/>);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model}/>);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model}/>);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model}/>);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded, active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n\n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand) {\n                this.handleToggle();\n            }\n        }\n    }\n\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n\n    render() {\n        const {expand} = this.state;\n        const {active} = this.state;\n        return (<div>\n                <Sidebar\n                    style={{display: 'flex', flexDirection: 'column'}}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56}>\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect}/>\n                        </Sidebar>\n                        <Content>\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle}\n                                         model={this.model} toggler={this.toggler} functions={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    static state;\n    header;\n    sidebar;\n    model;\n    expanded;\n    ModelDefaultState = {\n        active: 0, reset: 0, sets: [], configurations: [],\n    }\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled: false,\n        helpers: [false, false, false],\n        x: [-80, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n    ConfigurationDefaultState = {\n        title: '', shape: 'Ellipsoid', parameters: {\n            names: ['X', 'Y', 'Z'], vals: [1, 1, 0.2]\n        }, colour: {\n            r: 255, g: 255, b: 255\n        }, colourFromDirector: true, displayAsWireframe: false\n    }\n    CameraDefaultState = {\n        type: 'orthographic', lookAt: {\n            x: 0, y: 0, z: 0\n        }, position: {\n            x: 0, y: 0, z: -15\n        }, zoom: 50\n    }\n    PointLightDefaultState = {\n        reset: 0, active: 'point', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 60\n        }, position: {\n            x: 5, y: 0, z: 5\n        }\n    }\n    DirectionalLightDefaultState = {\n        reset: 0, active: 'directional', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 50\n        }, position: {\n            x: -5, y: 0, z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps: 24,\n        uploaded: true,\n        video: false,\n        loadVideoState: false,\n        repeats: {x: 0, y: 0, z: 0}\n    }\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255, g: 255, b: 255, i: 40\n        }, darkBackGround: true\n    }\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler={toggler}/>;\n        this.sidebar =\n            <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state, vid) {\n        View.state = state;\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        if (View.state.reference.repeats === undefined) {\n            View.state.reference.repeats = this.ReferenceDefaultState.repeats\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i, substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled)\n    }\n\n    loadState(state, vid) {\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n\n    }\n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0, state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state, vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if (state.ambientLight.darkBackGround) {\n            this.model.updateBg(\"#000000\");\n        }\n        if (!state.ambientLight.darkBackGround) {\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if (!vid) {\n            this.model.setCamera(state.camera.type, false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        this.model.updateLookAt(state.camera.lookAt);\n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultState(init, vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state, vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {mean, std} from 'mathjs';\nimport unfolded_sample1 from './Samples/UnfoldedSC4.json';\nimport unfolded_sample2 from './Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\n\nimport {Alert, Notification} from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => {\n        }\n        autorotate = () => {\n        }\n        updateCamera = () => {\n        }\n\n    }\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 5000;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)', (\n                    <p style={{width: 320}}>\n                        <b>FPS</b> <br/>\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br/>\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()}\n                        <br/>\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString() + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n                    this.externalToggle.autorotate();\n                    this.notify('success', 'Test Completed Succesfully', (<p style={{width: 320}}>\n                        All molecules deleted. Please see console output for a list of average FPS and standard\n                        deviations.\n                    </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            let time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n    constructor() {\n\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate, this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(({\n            top: 70, duration: 8000\n        }));\n\n    }\n\n    start = () => {\n        this.chronometer.model = this.model;\n        this.generate(sample2, true, false);\n        // this.model.occlusionCulling();\n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`, (<div>\n            <p style={{width: 320}}>\n                Check out the liquid crystal configurations in the Library, and head to the About section to\n                learn more!\n\n            </p>\n            <p style={{width: 320}}>\n                This application works best on the Chrome browser.\n            </p></div>));\n        // this.loadVideoSample();\n    }\n\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title, placement: 'bottomEnd', duration: 7000, description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        let file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename); else { // Others\n            let a = document.createElement(\"a\"), url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState = () => {\n        let data = {};\n        data.state = this.view.getData();\n        console.log('get state');\n        return JSON.stringify(data);\n\n    }\n\n    generate = (data, starting, vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            if (vidstate) {\n                this.view.setState((JSON.parse(vidstate)).state, true);\n            } else {\n                this.view.setDefaultState(starting, false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        } else {\n            this.view.setState(data.state, false);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n    }\n\n    load = (file, VIDEO, vidstate) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = () => {\n            let data;\n            if (file.type === \"application/json\") {\n                data = JSON.parse(fileReader.result);\n            } else if (file.name.split(\".\").pop().toLowerCase() === \"qmga\") {\n                data = this.qmga_to_json(fileReader.result);\n            } else {\n                data = this.cnf_to_json(fileReader.result);\n            }\n            try {\n                console.log(vidstate);\n                this.generate(data, false, vidstate);\n                if (VIDEO === false) {\n                    Alert.success('File loaded successfully.');\n                }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n            }\n        };\n        fileReader.readAsText(file);\n    }\n\n    qmga_to_json(data) {\n        let set = {name: \"Molecules\", orientationType: \"v\"}\n        let split_data = data.trim().split(\"\\n\")\n        let unit_box = split_data[0].split(/ +/)\n        set.unitBox = [parseFloat(unit_box[0]) / 2, parseFloat(unit_box[1]) / 2, parseFloat(unit_box[2]) / 2]\n        let molecule_count = split_data.length - 1\n        set.positions = new Array(molecule_count)\n        set.orientations = new Array(molecule_count)\n        for (let molecule_number = 0; molecule_number < molecule_count; ++molecule_number) {\n            let molecule_data = split_data[molecule_number + 1].trim().split(/ +/)\n            //TODO need to implement scale at position 0\n            set.positions[molecule_number] = molecule_data.slice(1, 4).map(value => parseFloat(value))\n            set.orientations[molecule_number] = molecule_data.slice(4, 7).map(value => parseFloat(value))\n        }\n        return {model: {sets: [set]}, state: null}\n    }\n\n    cnf_to_json(data) {\n        let set = {name: \"Molecules\", orientationType: \"v\"}\n        let split_data = data.trim().split(\"\\n\")\n        set.unitBox = [parseFloat(split_data[1]), parseFloat(split_data[2]), parseFloat(split_data[3])]\n        let molecule_count = parseInt(split_data[0])\n        set.positions = new Array(molecule_count)\n        set.orientations = new Array(molecule_count)\n        for (let molecule of split_data.slice(5)) {\n            let molecule_data = molecule.trim().split(/ +/)\n            let molecule_number = parseInt(molecule_data[12]) - 1\n            set.positions[molecule_number] = molecule_data.slice(0, 3).map(value => parseFloat(value))\n            set.orientations[molecule_number] = molecule_data.slice(6, 9).map(value => parseFloat(value))\n        }\n        return {model: {sets: [set]}, state: null}\n    }\n\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 17:\n                sample = unfolded_sample1;\n                break;\n            case 18:\n                sample = unfolded_sample2;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false, false);\n\n\n        Alert.success('File loaded successfully.');\n\n    }\n    export = (height, width, resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution / 10);\n\n        let link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (<div>\n            Image exported successfully.\n        </div>));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            switch (e.code) {\n                case 'Space':\n                    this.externalToggle.autorotate();\n                    if (this.chronometer.testing) {\n                        this.chronometer.testing = false;\n                    }\n                    break;\n                case  'KeyA':\n                    console.log(this.model.camera.position);\n                    break;\n            }\n\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n}\n\nexport default Controller;","import React, {Component} from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {Container, Content} from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n    controller;\n\n    constructor(props) {\n        super(props);\n        this.controller = new Controller();\n\n        this.state = {\n            header: this.controller.getHeader(), sidebar: this.controller.getSidebar()\n        };\n    }\n\n    componentDidMount() {\n        this.mount.appendChild(this.controller.getDomElement());\n        this.controller.start();\n    }\n\n    render() {\n        const header = this.state.header;\n        const sidebar = this.state.sidebar;\n\n        return (<div>\n            <Container>\n                {header}\n                <Container>\n                    {sidebar}\n                    <Content>\n                        <div ref={ref => (this.mount = ref)}/>\n                    </Content>\n                </Container>\n\n            </Container>\n\n        </div>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode> <App/> </React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}