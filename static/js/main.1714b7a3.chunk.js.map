{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","console","log","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","quaternion","w","z","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","lod","constant","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","round","bool","num","mat","MeshPhongMaterial","side","THREE","clipShadows","gut","Intsancemesh1","Instancemesh2","Instancemesh3","rgb","colourMap","values","Model","rgbToHex","matrix2","ori","compose","setMatrixAt","setColorAt","Intsancemeshback1","Instancemeshback2","Instancemeshback3","elem","shape","clone","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","translate","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","e","fromArray","setFromEuler","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","isNaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","color","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","colour","material","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","axesEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","rotating","lightHelperWarningGiven","selectedSet","Video_sample_list","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","traverse","child","isMesh","numOfObject","model","updateCamera","controls","autoRotate","id","params","f","m","remove","geometry","dispose","updateSets","setUserColour","r","toggle","setData","clippingIntersections","getRender_Object_number","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","target","aspect","left","right","top","bottom","updateProjectionMatrix","update","zoom","warning","updatePosition","genFoldedPositionFromUnfold","passAxes","toggleAxes","toggleMulticolour","enabled","boundingShapeEnabled","genBoundingShape","localClippingEnabled","setBackFace","Plane","clippingHelpers","PlaneHelper","visible","updateSlicers","Promise","resolve","reject","fileHandle","lst","showOpenFilePicker","multiple","getFile","file","style","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","testShape","testTotal","testLimit","testGeo","InstancedMesh1","InstancedMesh","InstancedMesh2","InstancedMesh3","matrix","Matrix4","rotation","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","toggler","Menu","PerformanceDropdown","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","then","notifyFinishUpload","vidstate","loadVideoState","video","samples","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","vidState","capture","stop","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","ty","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","displayFoldState","toggleFoldState","updateBoundingShape","activeShape","toggleAxesMulticolour","showAxes","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","setTimeout","revokeObjectURL","getData","view","saveVideoState","starting","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unfolded_sample2","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","key","code","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1714b7a3.chunk.js","sourcesContent":["import {\n    BufferAttribute,\n    BufferGeometry,\n    CylinderBufferGeometry,\n    SphereBufferGeometry,\n    TorusBufferGeometry,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode\n} from 'three';\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6, 10, 14, 20, 26];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n    clear() {\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate() {\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2 * this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [], piece = [], scale = this.parameters,\n\n            vertices = [], normals = [], temp = [];\n        console.log(scale)\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (let j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            } else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (let j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            } else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [], piece = [], radius = this.parameters[0], length = this.parameters[1], vertices, normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0], radCircle = this.parameters[1], plusZ = [0, 0, 1], minusZ = [0, 0, -1],\n            projectionUp = 0, projectionDown = 0, actComplexity = [], piece = [], vertices = [], normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    } else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    } else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    } else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    } else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0], zCut = this.parameters[1], plusZ = [0, 0, 1], minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius), radiusFan = radius * Math.sin(angle), actComplexity = [], piece = [],\n            vertices = [], normals = [], temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'], vals: [1.0, 1.0, 0.2]\n    }, Spherocylinder: {\n        names: ['Radius', 'Length'], vals: [0.5, 0.7]\n    }, Spheroplatelet: {\n        names: ['RadSphere', 'RadCircle'], vals: [0.3, 0.2]\n    }, CutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.2]\n    }, Sphere: {\n        names: ['Radius'], vals: [0.6]\n    }, Cylinder: {\n        names: ['Top', 'Bottom', 'Height'], vals: [0.5, 0.5, 2.0]\n    }, Torus: {\n        names: ['Radius', 'Tube', 'Arc'], vals: [1.0, 0.3, 6.3]\n    }\n}\n\nexport default Parameters;","import * as THREE from 'three';\nimport {Color, Euler, MeshPhongMaterial, Quaternion, Vector3} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport {Alert} from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    unitBox;\n\n\n    positions = [];\n    Folded_position = []\n    orientations = [];\n    elements = [];\n    meshes = [];\n// materials =[];\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n        quaternion;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n            this.quaternion = q\n        }\n\n        quaternionToUnitVector(q) {\n            let a = (2 * (q.w * q.y + q.x * q.z));\n            let b = (2 * (-q.w * q.x + q.y * q.z));\n            let c = (1 - 2 * (q.x ** 2 + q.y ** 2));\n            return [a, b, c];\n        }\n\n        setColourIndex(i) {\n            this.colourIndex = i;\n        }\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    isFoldedTest() {\n        let x = this.unitBox[0] / 2;\n        let y = this.unitBox[1] / 2;\n        let z = this.unitBox[2] / 2;\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if (a >= x || a <= -x) {\n                return false\n            }\n            if (b >= y || b <= -y) {\n                return false\n            }\n            if (c >= z || c <= -z) {\n                return false\n            }\n\n        }\n        return true;\n    }\n\n    genSet() {\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n        // this.genListBoundingBox();\n    }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length !== defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace = false;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    genUnitBox() {\n        // This is the user input unit box of whole\n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition() {\n        // Place holder function to generate Psedo unfolded configuration\n        if (this.isFoldedTest() === false) {\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos = [];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rnd1 = (Math.random() * (2) - 1)\n            let rnd2 = (Math.random() * (2) - 1)\n            let rnd3 = (Math.random() * (2) - 1)\n            pos.push([this.positions[i][0] + rnd1 * x, this.positions[i][1] + rnd2 * y, this.positions[i][2] + rnd3 * z])\n        }\n        this.positions = pos;\n\n    }\n\n    genFoldedPositionFromUnfold() {\n        if (this.isFoldedTest() === true) {\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos = [];\n        let lx = this.unitBox[0];\n        let ly = this.unitBox[1];\n        let lz = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n\n            rx = rx - lx * Math.round(rx / lx);\n            ry = ry - ly * Math.round(ry / ly);\n            rz = rz - lz * Math.round(rz / lz);\n\n            pos.push([rx, ry, rz])\n        }\n        this.Folded_position = pos;\n\n    }\n    setBackFace(bool) {\n        this.renderBackFace = bool;\n    }\n\n    genMeshes() {\n        let num = this.elements.length;\n\n        let c = '#FFFFFF'\n        let mat = new MeshPhongMaterial({\n            side: THREE.FrontSide, clipShadows: true, clippingPlanes: this.clippingPlanes, wireframe: this.wireframe\n        });\n        let gut = new THREE.MeshBasicMaterial({\n            side: THREE.BackSide, clipShadows: true, clippingPlanes: this.clippingPlanes, wireframe: this.wireframe\n        });\n\n        let Intsancemesh1 = new THREE.InstancedMesh(this.elements[0].geometries[0], mat, num);\n        let Instancemesh2 = new THREE.InstancedMesh(this.elements[0].geometries[1], mat, num);\n        let Instancemesh3 = new THREE.InstancedMesh(this.elements[0].geometries[2], mat, num);\n        for (let i = 0; i < num; i++) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[this.elements[i].colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n            let matrix2 = new THREE.Matrix4();\n            const position = new THREE.Vector3();\n            position.x = this.elements[i].position[0];\n            position.y = this.elements[i].position[1];\n            position.z = this.elements[i].position[2];\n            let ori = this.elements[i].quaternion\n            matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n            Intsancemesh1.setMatrixAt(i, matrix2);\n            Instancemesh2.setMatrixAt(i, matrix2);\n            Instancemesh3.setMatrixAt(i, matrix2);\n            Intsancemesh1.setColorAt(i, c);\n            Instancemesh2.setColorAt(i, c);\n            Instancemesh3.setColorAt(i, c);\n        }\n        this.meshes.push(Intsancemesh1, Instancemesh2, Instancemesh3);\n        console.log(Intsancemesh1)\n        if (this.renderBackFace) {\n\n            let Intsancemeshback1 = new THREE.InstancedMesh(this.elements[0].geometries[0], gut, num);\n            let Instancemeshback2 = new THREE.InstancedMesh(this.elements[0].geometries[1], gut, num);\n            let Instancemeshback3 = new THREE.InstancedMesh(this.elements[0].geometries[2], gut, num);\n            for (let i = 0; i < num; i++) {\n                if (this.colourByDirector) {\n                    let rgb = colourMap.values[this.elements[i].colourIndex];\n                    c = new Color(Model.rgbToHex(...rgb));\n                }\n                let matrix2 = new THREE.Matrix4();\n                const position = new THREE.Vector3();\n                position.x = this.elements[i].position[0];\n                position.y = this.elements[i].position[1];\n                position.z = this.elements[i].position[2];\n                const scale = new THREE.Vector3();\n                scale.x = scale.y = scale.z = Math.random();\n                let ori = this.elements[i].quaternion;\n                matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n                Intsancemeshback1.setMatrixAt(i, matrix2);\n                Instancemeshback2.setMatrixAt(i, matrix2);\n                Instancemeshback3.setMatrixAt(i, matrix2);\n                Intsancemeshback1.setColorAt(i, c);\n                Instancemeshback2.setColorAt(i, c);\n                Instancemeshback3.setColorAt(i, c);\n            }\n            this.meshes.push(Intsancemeshback1, Instancemeshback2, Instancemeshback3);\n\n        }\n\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            } else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n            // this.(elem.euler, geoms);\n            // this.translate(elem.position, geoms);\n            elem.setGeometries(geoms);\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length > 0) {\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for (let elem of this.elements) {\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                console.log(this.parameters)\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2 * pos[0], 2 * pos[1], 2 * pos[2]);\n        }\n    }\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0] ** 2;\n            orderTensor[0][1] += orientation[0] * orientation[1];\n            orderTensor[0][2] += orientation[0] * orientation[2];\n            orderTensor[1][1] += orientation[1] ** 2;\n            orderTensor[1][2] += orientation[1] * orientation[2];\n            orderTensor[2][2] += orientation[2] ** 2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor;\n        orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor;\n        orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor;\n        orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n\n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0] ** 2 + this.director[1] ** 2 + this.director[2] ** 2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined) {\n            this.director = [0, 0, 1];\n        } else {\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element) {\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0] + element.orientation[1] * this.director[1] + element.orientation[2] * this.director[2]);\n        if (this.orientationType === 'v') {\n            scalarProduct = Math.abs(element.orientation[1] * this.director[0] + element.orientation[0] * this.director[1] + element.orientation[2] * this.director[2]);\n        }\n        if (scalarProduct > 1) {\n            scalarProduct = 1;\n        }\n\n        return Math.round(Math.acos(scalarProduct) / Math.PI * 2 * (n));\n\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n}\n\nexport default Set;","import {Alert} from 'rsuite';\nimport {AmbientLight, DirectionalLight, DirectionalLightHelper, PointLight, PointLightHelper} from 'three';\n\nexport class Light {\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n    light;\n    helper;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z) {\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i) {\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {Box3, Box3Helper, BufferGeometry, Color, GridHelper, Line, LineBasicMaterial, Vector3} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;\n    G;\n    B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b = null;\n        this.boundingShape = null;\n\n        for (let set of sets) {\n            if (b != null) {\n                break\n            }\n            b = set.genUnitBox()\n\n        }\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                box.setFromCenterAndSize(new Vector3(0, 0, 0), new Vector3(b[0], b[1], b[2]));\n                this.boundingShape = new Box3Helper(box, this.colour);\n\n                break;\n            default:\n                Alert.error('Error: Unknown bounding shape identifier');\n\n\n        }\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 5\n        });\n        if (!this.multicolour) {\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour() {\n        this.multicolour = !this.multicolour;\n        if (this.multicolour) {\n            this.genMulticolourAxes();\n        } else {\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n\n\n}\n\nexport default ReferenceTools;","import {\n    Color,\n    Euler,\n    InstancedMesh,\n    Matrix4,\n    MeshPhongMaterial,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Plane,\n    PlaneHelper,\n    Quaternion,\n    Scene,\n    Vector3,\n    WebGLRenderer\n} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport {Alert} from 'rsuite'\nimport * as SHAPE from './Shapes.js';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n    axesEnabled = false;\n\n\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n    clippingPlanes;\n    clippingHelpers;\n    numOfObject;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n\n    }\n\n    /* GENERAL FUNCTIONS */\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            let hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    setDefault() {\n\n        this.renderer = new WebGLRenderer({\n            antialias: false, powerPreference: \"high-performance\", preserveDrawingBuffer: true\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.rotating = false;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list = [];\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType, true);\n        this.lighting = [new Light('ambient'), new Light('directional'), new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    update() {\n        console.log('update called');\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n\n    }\n\n    // occlusionCulling(){\n\n    // const renderer = new WebGLRenderer();\n    // const gl = renderer.getContext();\n    // console.log(gl)\n    // const scene = new Scene();\n    // const mesh1 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // const mesh2 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // scene.add(mesh1, mesh2);\n    // var query = gl.createQuery();\n    // const camera = this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n\n    // camera.position.z = 5;\n    // for (let l of this.lighting) {\n    //     scene.add(l.light);}\n    // gl.beginQuery(gl.ANY_SAMPLES_PASSED,query);\n    // renderer.render(scene, camera);\n    // gl.endQuery(gl.ANY_SAMPLES_PASSED,query);\n    // var result = gl.getQueryParameter(query,gl.QUERY_RESULT);\n    // console.log(Number(result));\n    // console.log(result)\n\n    getRender_Object_number() {\n        let num = 0;\n        this.scene.traverse(function (child) {\n            //@ts-ignore\n            if (child.isMesh) {\n                num = num + 1;\n            }\n\n        });\n\n        this.numOfObject = (num - 6);\n        console.log(this.numOfObject)\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n        console.log(this.sidebarExpanded)\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            m.geometry.dispose();\n            m.material.dispose();\n            m.dispose();\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n        // let mesh = this.occlusionCulling();\n        // this.scene.add(mesh);\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose();\n                m.material.dispose();\n                m.dispose();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n\n    }\n\n    /* LOD FUNCTIONS */\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n            console.log('sidebar')\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        console.log('set camera called')\n        if (this.camera) {\n            this.camera = '';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        // this.update();\n\n\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / -2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / -2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type !== 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id, toggle) {\n        if (toggle === true) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        } else if (toggle === false) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position = [];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle, id) {\n        if (toggle === true) {\n            this.renderer.localClippingEnabled = true;\n            for (let x = 0; x < this.sets.length; x++) {\n                this.updateSets(x, [x], (x) => {\n                    this.sets[x].elements = [];\n                    this.sets[x].meshes = [];\n                    this.sets[x].setBackFace(true);\n                    this.sets[x].genElements();\n                    this.sets[x].setElements();\n                    this.sets[x].genMeshes();\n                });\n            }\n\n        } else {\n            this.renderer.localClippingEnabled = false;\n\n        }\n\n\n    }\n\n    // disableClipping(){\n    //     this.renderer.localClippingEnabled = false;\n    // }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n\n        this.clippingPlanes = [new Plane(new Vector3(1, 0, 0), 180), new Plane(new Vector3(-1, 0, 0), 180), new Plane(new Vector3(0, 1, 0), 180), new Plane(new Vector3(0, -1, 0), 180), new Plane(new Vector3(0, 0, 1), 180), new Plane(new Vector3(0, 0, -1), 180)];\n\n        this.clippingHelpers = [new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff), new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n\n    }\n\n\n    // }\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    /* Video SUITE */\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n            let fileHandle = [];\n            let lst = [];\n            try {\n                fileHandle = await window.showOpenFilePicker({multiple: true});\n                for (let i = 0; i < fileHandle.length; i++) {\n                    const file = await fileHandle[i].getFile();\n                    lst.push(file);\n                }\n                this.Video_sample_list = lst;\n                resolve(lst);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    notifyFinishUpload() {\n        this.notify('info', `Files loaded successfully`, (<div>\n            <p style={{width: 320}}>\n                Now Select Your Video Viewing configuration!\n                You can show unit box, apply slicing , periodic boundary conditions etc.\n                Please Do not change screen size while generating Video e.g dont click on size bar\n            </p>\n        </div>));\n    }\n\n\n    retrieveVideoSample() {\n        return this.Video_sample_list;\n    }\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic', false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, {x: 50, y: 0, z: 50});\n        this.deleteAllMeshes();\n        this.testMaterial = new MeshPhongMaterial({wireframe: false});\n        // this.testShape = new SHAPE.Preset('Sphere', ...Parameters.Sphere.vals);\n        this.testShape = new SHAPE.Spheroplatelet(0.3, 0.2);\n        console.log('this.genshape');\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 140001;\n\n        let geoms = [];\n        if (this.testShape.isPreset) {\n            geoms.push(this.testShape.presetGeometry.clone());\n        } else {\n            geoms.push(this.testShape.stripGeometry.clone());\n            geoms.push(this.testShape.fanGeometries[0].clone());\n            geoms.push(this.testShape.fanGeometries[1].clone());\n        }\n        this.testGeo = geoms;\n\n        this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n\n        this.notify('info', 'Initialising Performance Test', (<p style={{width: 320}}>\n            Test Size: {this.testLimit.toString()} <br/>\n            Step: {step.toString()} <br/>\n            Shape: Spheroplatelet(0.3,0.2) <br/>\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br/>\n            Material: MeshPhongMaterial\n            <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n        </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Spheroplatelet (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString())\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (const set of this.sets) {\n            console.log(set)\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose();\n                m.material.dispose();\n                m.dispose();\n            }\n\n        }\n\n    }\n\n    addRandomParticles(n) {\n        this.deleteAllMeshes();\n        console.log('add called')\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n        // let m;\n        // for (let i = 0; i < n; i++) {\n        //     for (let g of this.testGeo) {\n        //          m = new Mesh(g, this.testMaterial);\n        //         this.scene.add(m);\n        //     }}\n\n        let InstancedMesh1 = new InstancedMesh(this.testGeo[0], this.testMaterial, n);\n        let InstancedMesh2 = new InstancedMesh(this.testGeo[1], this.testMaterial, n);\n        let InstancedMesh3 = new InstancedMesh(this.testGeo[2], this.testMaterial, n);\n        console.log(InstancedMesh1);\n        for (let i = 0; i < n; i++) {\n            console.log('called')\n            const matrix = new Matrix4();\n            const position = new Vector3();\n            const rotation = new Euler();\n            const quaternion = new Quaternion();\n            const scale = new Vector3();\n            const color = new Color();\n            position.x = Math.random() * 40 - 20;\n            position.y = Math.random() * 40 - 20;\n            position.z = Math.random() * 40 - 20;\n\n            rotation.x = Math.random() * 2 * Math.PI;\n            rotation.y = Math.random() * 2 * Math.PI;\n            rotation.z = Math.random() * 2 * Math.PI;\n\n            quaternion.setFromEuler(rotation);\n\n            scale.x = scale.y = scale.z = Math.random();\n\n            matrix.compose(position, quaternion, scale);\n            InstancedMesh1.setMatrixAt(i, matrix);\n            InstancedMesh2.setMatrixAt(i, matrix);\n            InstancedMesh3.setMatrixAt(i, matrix);\n            InstancedMesh1.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh2.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh3.setColorAt(i, color.setHex(0xffffff * Math.random()));\n        }\n        this.scene.add(InstancedMesh1, InstancedMesh2, InstancedMesh3);\n        this.update();\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","import {ButtonToolbar, Col, Dropdown, InputGroup, InputNumber, RangeSlider, Row, Slider} from 'rsuite';\nimport React, {useState} from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    let set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(<ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i}\n                                 step={props.step} positive={props.positive} styling={props.styling}/>);\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive) {\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        let InputBox;\n        if (this.numerical) {\n            let defaultVal = this.values;\n            InputBox = (<div style={this.styling[0]}>\n                <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min}/>\n            </div>);\n        } else {\n            let vals = this.values;\n            let active = this.active;\n            let listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key={val} eventKey={val} active={act}\n                                              onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key={'panel'} eventKey={'panel'} panel style={{width: 150}}></Dropdown.Item>);\n\n            InputBox = (<ButtonToolbar style={{width: 10, marginLeft: 0}}>\n                <Dropdown style={{width: 100}} title={this.active}>\n                    {listItems}\n                </Dropdown>\n            </ButtonToolbar>);\n\n        }\n\n        return (<div>\n            <Row style={{marginTop: 15}}>\n                <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                <Col md={10}/>\n                <Col md={14}>{InputBox}</Col>\n            </Row>\n        </div>);\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (<div>\n        <br/>\n        <Row>\n            <Col md={5}>\n                <p style={{marginTop: 10, marginLeft: 30}}>{props.title}</p>\n            </Col>\n            <Col md={1}/>\n            <Col md={16}>\n                <InputGroup>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[0]}\n                        step={0.1}\n                        onChange={nextValue => {\n                            const end = value[1];\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            if (parseFloat(nextValue) > end) {\n                                return;\n                            }\n                            setValue([parseFloat(nextValue), end]);\n                            f(i, [parseFloat(nextValue), end]);\n                        }}\n                    />\n                    <InputGroup.Addon>to</InputGroup.Addon>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[1]}\n                        step={0.1}\n                        onChange={(nextValue) => {\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            const start = value[0];\n                            if (start > parseFloat(nextValue)) {\n                                return;\n                            }\n                            setValue([start, parseFloat(nextValue)]);\n                            f(i, [start, parseFloat(nextValue)]);\n                        }}\n                    />\n                </InputGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col md={21}>\n                <RangeSlider\n                    min={-100.0}\n                    max={100.0}\n                    progress\n                    style={{marginLeft: 35, marginTop: 30}}\n                    value={value}\n                    onChange={value => {\n                        setValue(value);\n                        f(i, value);\n                    }}\n                />\n            </Col>\n\n        </Row>\n    </div>);\n}\n\nexport const CustomSlider = (props) => {\n    let f = props.f;\n    let [value, setValue] = useState(props.val);\n    let type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{marginLeft: 25, marginTop: 16, width: 170}}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35}}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if (!value || isNaN(value)) {\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>);\n}","import {\n    Alert,\n    Button,\n    ButtonToolbar,\n    ControlLabel,\n    Drawer,\n    Dropdown,\n    Form,\n    FormGroup,\n    Header,\n    Icon,\n    Nav,\n    Navbar,\n    Slider,\n    Tooltip,\n    Whisper\n} from 'rsuite';\nimport {ParameterSet} from './Tools';\nimport React from \"react\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.resolution = [10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    setResolution(val) {\n        this.resolution[0] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (<Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\"/>}>\n\n            <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n            <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n\n            <Button style={{width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15}}\n                    appearance='primary' onClick={this.export}> Export </Button>\n        </Dropdown>);\n    }\n\n}\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {active: 2};\n        this.f = props.f;\n        this.toggler = props.toggler;\n    }\n\n    render() {\n        return (<Dropdown\n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\"/>}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n            }}>\n\n            <Dropdown.Menu title=\"Samples\">\n                <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Spherocylinders\">\n                <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Dense Packings\">\n                <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Item panel style={{width: 120}}></Dropdown.Item>\n        </Dropdown>);\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {val: props.model.lod + 1};\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (<Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\"/>}>\n            <Form style={{marginLeft: 20, marginTop: 20}} layout=\"inline\">\n                <FormGroup>\n                    <ControlLabel>Adjust LOD</ControlLabel>\n                    <Whisper placement=\"bottom\" trigger=\"hover\" speaker={<Tooltip>\n                        Decreasing LOD will increase rendering speed.\n                    </Tooltip>}>\n                        <Icon icon=\"question-circle\" size=\"lg\"/>\n                    </Whisper>\n                </FormGroup>\n            </Form>\n\n            <Slider\n                min={1}\n                step={1}\n                max={5}\n                value={lod}\n                graduated\n                progress\n                style={{width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20}}\n                onChange={(value) => {\n                    this.model.updateLOD(value - 1);\n                    this.updateVal(value);\n                    this.model.update();\n                }}\n\n            />\n            <br/>\n        </Dropdown>);\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = {fps: 0, showDrawer: false, rotating: false, numOfRender: this.model.numOfObject};\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2), numOfRender: this.model.numOfObject\n        });\n    }\n\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (<div>\n            <Header style={{height: 56}}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight>\n                            <ButtonToolbar>\n\n                                <Nav.Item active>fps: {fps}</Nav.Item>\n                                <Nav.Item active>Draw call maded: {num}</Nav.Item>\n                                <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\"\n                                          icon={<Icon icon=\"dashboard\"/>}>Run Performance Test</Nav.Item>\n\n                                <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\"\n                                          icon={<Icon icon=\"refresh\" spin={rotating}/>}>Autorotate</Nav.Item>\n\n\n                                <PerformanceDropdown model={this.model}/>\n                                <LibraryDropdown f={this.functions[3]}/>\n                                <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\"\n                                          icon={<Icon icon=\"info\"/>}>About</Nav.Item>\n                                <ExportDropdown f={this.functions[2]}/>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\"/>}\n                                          onSelect={this.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                       id=\"upload-btn\"\n                                       style={{display: 'none'}}\n                                       className='input-file'\n                                       accept='.json,.webmga'\n                                       onChange={e => this.functions[1](e.target.files[0])}/>\n                                <label htmlFor=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\"/>}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav>\n                            <h6 style={{padding: 20}}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n            <Drawer\n                size={'sm'}\n                placement={'right'}\n                show={showDrawer}\n                onHide={this.toggleDrawer}\n                backdrop={false}\n            >\n                <Drawer.Header>\n                    <Drawer.Title>About</Drawer.Title>\n                    <br/>\n                    <ButtonToolbar>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"mortar-board\"/> Liquid Crystals\n                        </Button>\n                        <Button key=\"man\" color=\"cyan\"\n                                href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"info-circle\"/> User Manual\n                        </Button>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation\n                        </Button>\n                        <Button color=\"cyan\" href=\"https://github.com/joe-down/WebMGA-3\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"github\"/> Github\n                        </Button>\n                    </ButtonToolbar>\n                    <br/>\n                    <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations\n                        included in the library.</i></p>\n\n                    <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a\n                        scientific publication, see 'User Manual'.</i></p>\n\n                </Drawer.Header>\n\n                <div style={{margin: 25}}>\n                    <h2>WebMGA </h2>\n                    <br/>\n                    WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc\n                    Computer Science at University College London, supervised by Guido Germano, Michael P. Allen,\n                    and Tobias Ritschel.\n                    <br/><br/>\n                    The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for\n                    coarse-grained molecular models that utilises prolated and elongated convex bodies as the\n                    elementary units of simulation.\n                    <br/><br/>\n                    Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack\n                    of available visualisation platforms suitable for this niche, WebMGA provides a unique,\n                    out-of-the-box solution for researchers and educators to generate, stylise, and interact with\n                    three-dimensional renders of molecular simulations.\n                    <br/><br/>\n                    WebMGA is written in Javascript, and implements the graphics library <a\n                    href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering\n                    images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\"\n                                      rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface\n                    that is intuitively compartmentalised and easy to learn.\n                    <br/><br/>\n                    WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\"\n                                                 rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based\n                    application written in C++ that filled this gap in molecular graphics in 2008.\n\n                </div>\n            </Drawer>\n        </div>);\n    }\n}\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport {View} from './View.js'\n\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.model.deleteAllMeshes();\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n        \n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;  \n    }\n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(toggle)\n        if(toggle ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n            \n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n    \n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n            };\n        }\n        if (i === max_iter){\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n                \n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n    \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                   \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\" \n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n                   \n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n        console.log(this.state,View.state.slicing);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        this.setState({\n            slicing_enabled :toggle\n        })\n        View.state.slicing.slicing_enabled = toggle\n        console.log(this.state,View.state.slicing);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n    \n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                View.state.slicing.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                View.state.slicing.ty = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                View.state.slicing.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n        \n        \n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n       \n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n   \nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n    \n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        \n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.state.showAxes;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                    \n\n\n                </Grid>\n               \n            </div>\n        );\n    }\n}\n","import {Alert, Container, Content, Icon, IconButton, Nav, Navbar, Sidebar} from 'rsuite';\nimport React, {Component} from \"react\";\nimport {\n    AdditionalLightOptions,\n    AmbientLightOptions,\n    CameraOptions,\n    ModelsOptions,\n    ReferenceOptions,\n    SlicingOptions,\n    VideoOptions\n} from './SubMenus'\n\n\nconst NavToggle = ({expand, onChange}) => {\n    return (<Navbar appearance=\"subtle\" className=\"nav-toggle\">\n        <Navbar.Body>\n            <Nav pullRight>\n                <IconButton\n                    circle\n                    style={{textAlign: 'center', margin: 10}}\n                    onClick={onChange}\n                    appearance=\"default\"\n                    icon={<Icon icon={expand ? 'angle-left' : 'angle-right'}/>}/>\n            </Nav>\n        </Navbar.Body>\n    </Navbar>);\n};\n\nconst navItemStyle = {margin: 6.5};\n\nlet sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({active, onSelect, ...props}) => {\n    return (<div>\n        <Nav {...props} activeKey={active} onSelect={onSelect}\n             style={{backgroundColor: '#101010', height: sidebarHeight}}>\n            <Nav.Item title=\"Models\" eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\"/>}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Slicing\" eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Video Rendering\" eventKey=\"Video Rendering\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item title=\"Camera\" eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item title=\"Ambient\" eventKey=\"Ambient\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item title=\"Lighting\" eventKey=\"Lighting\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item title=\"Reference\" eventKey=\"Reference\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\"/>}/>\n            {/* </Whisper> */}\n\n        </Nav>\n    </div>);\n};\n\nconst MenuContent = ({active, expand, onChange, model, toggler, functions}) => {\n\n    let menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange}/>);\n    } else {\n        menuContent.push(<div style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav>\n                        <h3 style={{marginTop: 15, marginLeft: 30}}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange}/>\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n        </div>);\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model}/>);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler}/>);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model}/>);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model}/>);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model}/>);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded, active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n\n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand) {\n                this.handleToggle();\n            }\n        }\n    }\n\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n\n    render() {\n        const {expand} = this.state;\n        const {active} = this.state;\n        return (<div>\n                <Sidebar\n                    style={{display: 'flex', flexDirection: 'column'}}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56}>\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect}/>\n                        </Sidebar>\n                        <Content>\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle}\n                                         model={this.model} toggler={this.toggler} functions={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    static state;\n    header;\n    sidebar;\n    model;\n    expanded;\n    ModelDefaultState = {\n        active: 0, reset: 0, sets: [], configurations: [],\n    }\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled: false,\n        helpers: [false, false, false],\n        x: [-80, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n    ConfigurationDefaultState = {\n        title: '', shape: 'Ellipsoid', parameters: {\n            names: ['X', 'Y', 'Z'], vals: [1, 1, 0.2]\n        }, colour: {\n            r: 255, g: 255, b: 255\n        }, colourFromDirector: true, displayAsWireframe: false\n    }\n    CameraDefaultState = {\n        type: 'orthographic', lookAt: {\n            x: 0, y: 0, z: 0\n        }, position: {\n            x: 0, y: 0, z: -15\n        }, zoom: 50\n    }\n    PointLightDefaultState = {\n        reset: 0, active: 'point', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 60\n        }, position: {\n            x: 5, y: 0, z: 5\n        }\n    }\n    DirectionalLightDefaultState = {\n        reset: 0, active: 'directional', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 50\n        }, position: {\n            x: -5, y: 0, z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps: 24,\n        uploaded: true,\n        video: false,\n        loadVideoState: false\n    }\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255, g: 255, b: 255, i: 40\n        }, darkBackGround: true\n    }\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler={toggler}/>;\n        this.sidebar =\n            <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state, vid) {\n        View.state = state;\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i, substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled)\n    }\n\n    loadState(state, vid) {\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n\n    }\n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0, state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state, vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if (state.ambientLight.darkBackGround) {\n            this.model.updateBg(\"#000000\");\n        }\n        if (!state.ambientLight.darkBackGround) {\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if (!vid) {\n            this.model.setCamera(state.camera.type, false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        this.model.updateLookAt(state.camera.lookAt);\n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultState(init, vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state, vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {mean, std} from 'mathjs';\nimport unfolded_sample1 from './Samples/UnfoldedSC4.json';\nimport unfolded_sample2 from './Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport {Alert, Notification} from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => {\n        }\n        autorotate = () => {\n        }\n        updateCamera = () => {\n        }\n\n    }\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 5000;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)', (\n                    <p style={{width: 320}}>\n                        <b>FPS</b> <br/>\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br/>\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()}\n                        <br/>\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString() + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n                    this.externalToggle.autorotate();\n                    this.notify('success', 'Test Completed Succesfully', (<p style={{width: 320}}>\n                        All molecules deleted. Please see console output for a list of average FPS and standard\n                        deviations.\n                    </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            let time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n    constructor() {\n\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate, this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(({\n            top: 70, duration: 8000\n        }));\n\n    }\n\n    start = () => {\n        this.chronometer.model = this.model;\n        this.generate(sample2, true, false);\n        // this.model.occlusionCulling();\n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`, (<div>\n            <p style={{width: 320}}>\n                Check out the liquid crystal configurations in the Library, and head to the About section to\n                learn more!\n\n            </p>\n            <p style={{width: 320}}>\n                This application works best on the Chrome browser.\n            </p></div>));\n        // this.loadVideoSample();\n    }\n\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title, placement: 'bottomEnd', duration: 7000, description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        let file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename); else { // Others\n            let a = document.createElement(\"a\"), url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState = () => {\n        let data = {};\n        data.state = this.view.getData();\n        console.log('get state');\n        return JSON.stringify(data);\n\n    }\n\n    generate = (data, starting, vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            if (vidstate) {\n                this.view.setState((JSON.parse(vidstate)).state, true);\n            } else {\n                this.view.setDefaultState(starting, false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        } else {\n            this.view.setState(data.state, false);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n    }\n\n    load = (file, VIDEO, vidstate) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = () => {\n            const data = JSON.parse(fileReader.result);\n            try {\n                console.log(vidstate);\n                this.generate(data, false, vidstate);\n                if (VIDEO === false) {\n                    Alert.success('File loaded successfully.');\n                }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n            }\n        };\n        fileReader.readAsText(file);\n    }\n\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample = unfolded_sample1;\n                break;\n            case 18:\n                sample = unfolded_sample2;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false, false);\n\n\n        Alert.success('File loaded successfully.');\n\n    }\n    export = (height, width, resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution / 10);\n\n        let link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (<div>\n            Image exported successfully.\n        </div>));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            let key = e.code;\n            //TODO\n            if (key === 'Space') {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            if (key === 'KeyA') {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n}\n\nexport default Controller;","import React, {Component} from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {Container, Content} from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n    controller;\n\n    constructor(props) {\n        super(props);\n        this.controller = new Controller();\n\n        this.state = {\n            header: this.controller.getHeader(), sidebar: this.controller.getSidebar()\n        };\n    }\n\n    componentDidMount() {\n        this.mount.appendChild(this.controller.getDomElement());\n        this.controller.start();\n    }\n\n    render() {\n        const header = this.state.header;\n        const sidebar = this.state.sidebar;\n\n        return (<div>\n            <Container>\n                {header}\n                <Container>\n                    {sidebar}\n                    <Content>\n                        <div ref={ref => (this.mount = ref)}/>\n                    </Content>\n                </Container>\n\n            </Container>\n\n        </div>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode> <App/> </React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}