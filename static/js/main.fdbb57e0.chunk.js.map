{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","console","log","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","moleculeBoundingBox","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","quaternion","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","round","target","min","max","bool","num","mat","MeshPhongMaterial","side","THREE","clipShadows","gut","Intsancemesh1","Instancemesh2","Instancemesh3","rgb","colourMap","values","matrix2","ori","compose","setMatrixAt","setColorAt","Intsancemeshback1","Instancemeshback2","Instancemeshback3","elem","shape","clone","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","translate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","isNaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","color","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","videoFileloaded","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","Video_sample_list","clock","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","traverse","child","isMesh","numOfObject","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","m","id","params","f","remove","geometry","dispose","updateSets","setUserColour","r","getRender_Object_number","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","aspect","left","right","top","bottom","updateProjectionMatrix","update","zoom","enabled","visible","warning","updatePosition","genFoldedPositionFromUnfold","passGrid","passAxes","passShape","toggleGrid","toggleAxes","boundingShapeEnabled","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","localClippingEnabled","setBackFace","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","Promise","resolve","reject","fileHandle","lst","showOpenFilePicker","multiple","getFile","file","style","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","testShape","testTotal","testLimit","testGeo","InstancedMesh","Intsancemesh2","Intsancemesh3","matrix","Matrix4","rotation","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","toggler","Menu","PerformanceDropdown","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","then","notifyFinishUpload","vidstate","loadVideoState","video","samples","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","vidState","capture","stop","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","ty","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","displayFoldState","toggleFoldState","activeShape","toggleAxesMulticolour","showAxes","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","setTimeout","revokeObjectURL","getData","view","saveVideoState","starting","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unfolded_sample2","convertQMGA","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","key","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fdbb57e0.chunk.js","sourcesContent":["import {\n    BufferAttribute,\n    BufferGeometry,\n    CylinderBufferGeometry,\n    SphereBufferGeometry,\n    TorusBufferGeometry,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode\n} from 'three';\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6, 10, 14, 20, 26];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n    clear() {\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate() {\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2 * this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [], piece = [], scale = this.parameters,\n\n            vertices = [], normals = [], temp = [];\n        console.log(scale)\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            } else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            } else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [], piece = [], radius = this.parameters[0], length = this.parameters[1], vertices, normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0], radCircle = this.parameters[1], plusZ = [0, 0, 1], minusZ = [0, 0, -1],\n            projectionUp = 0, projectionDown = 0, actComplexity = [], piece = [], vertices = [], normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    } else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    } else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    } else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    } else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate() {\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0], zCut = this.parameters[1], plusZ = [0, 0, 1], minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius), radiusFan = radius * Math.sin(angle), actComplexity = [], piece = [],\n            vertices = [], normals = [], temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    } else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                } else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'], vals: [1.0, 1.0, 0.2]\n    }, Spherocylinder: {\n        names: ['Radius', 'Length'], vals: [0.5, 0.7]\n    }, Spheroplatelet: {\n        names: ['RadSphere', 'RadCircle'], vals: [0.3, 0.2]\n    }, CutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.2]\n    }, Sphere: {\n        names: ['Radius'], vals: [0.6]\n    }, Cylinder: {\n        names: ['Top', 'Bottom', 'Height'], vals: [0.5, 0.5, 2.0]\n    }, Torus: {\n        names: ['Radius', 'Tube', 'Arc'], vals: [1.0, 0.3, 6.3]\n    }\n}\n\nexport default Parameters;","import * as THREE from 'three';\nimport {Color, Euler, MeshPhongMaterial, Quaternion, Vector3} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport {Alert} from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n\n\n    positions = [];\n    Folded_position = []\n    orientations = [];\n    elements = [];\n    meshes = [];\n    moleculeBoundingBox = [];\n\n    // materials =[];\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n        quaternion;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n            this.quaternion = q\n        }\n\n        quaternionToUnitVector(q) {\n            let a = (2 * (q.w * q.y + q.x * q.z));\n            let b = (2 * (-q.w * q.x + q.y * q.z));\n            let c = (1 - 2 * (q.x ** 2 + q.y ** 2));\n            return [a, b, c];\n        }\n\n        setColourIndex(i) {\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    isFoldedTest() {\n        let x = this.unitBox[0] / 2;\n        let y = this.unitBox[1] / 2;\n        let z = this.unitBox[2] / 2;\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if (a >= x || a <= -x) {\n                return false\n            }\n            if (b >= y || b <= -y) {\n                return false\n            }\n            if (c >= z || c <= -z) {\n                return false\n            }\n\n        }\n        return true;\n    }\n\n    genSet() {\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n        // this.genListBoundingBox();\n    }\n\n    validateData() {\n        if (this.positions.length != this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace = false;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genUnitBox() {\n        // This is the user input unit box of whole\n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition() {\n        // Place holder function to generate Psedo unfolded configuration\n        if (this.isFoldedTest() === false) {\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos = [];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rnd1 = (Math.random() * (2) - 1)\n            let rnd2 = (Math.random() * (2) - 1)\n            let rnd3 = (Math.random() * (2) - 1)\n            pos.push([this.positions[i][0] + rnd1 * x, this.positions[i][1] + rnd2 * y, this.positions[i][2] + rnd3 * z])\n        }\n        this.positions = pos;\n\n    }\n\n    genFoldedPositionFromUnfold() {\n        if (this.isFoldedTest() === true) {\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos = [];\n        let lx = this.unitBox[0];\n        let ly = this.unitBox[1];\n        let lz = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n\n            rx = rx - lx * Math.round(rx / lx);\n            ry = ry - ly * Math.round(ry / ly);\n            rz = rz - lz * Math.round(rz / lz);\n\n            pos.push([rx, ry, rz])\n        }\n        this.Folded_position = pos;\n\n    }\n\n    inRange(target, min, max) {\n        if (min <= target <= max) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    setBackFace(bool) {\n        this.renderBackFace = bool;\n    }\n\n    genMeshes() {\n        let num = this.elements.length;\n\n        let c = '#FFFFFF'\n        let mat = new MeshPhongMaterial({\n            side: THREE.FrontSide, clipShadows: true, clippingPlanes: this.clippingPlanes, wireframe: this.wireframe\n        });\n        let gut = new THREE.MeshBasicMaterial({\n            side: THREE.BackSide, clipShadows: true, clippingPlanes: this.clippingPlanes, wireframe: this.wireframe\n        });\n\n        let Intsancemesh1 = new THREE.InstancedMesh(this.elements[0].geometries[0], mat, num);\n        let Instancemesh2 = new THREE.InstancedMesh(this.elements[0].geometries[1], mat, num);\n        let Instancemesh3 = new THREE.InstancedMesh(this.elements[0].geometries[2], mat, num);\n        for (let i = 0; i < num; i++) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[this.elements[i].colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n            let matrix2 = new THREE.Matrix4();\n            const position = new THREE.Vector3();\n            position.x = this.elements[i].position[0];\n            position.y = this.elements[i].position[1];\n            position.z = this.elements[i].position[2];\n            var ori = this.elements[i].quaternion\n            matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n            Intsancemesh1.setMatrixAt(i, matrix2);\n            Instancemesh2.setMatrixAt(i, matrix2);\n            Instancemesh3.setMatrixAt(i, matrix2);\n            Intsancemesh1.setColorAt(i, c);\n            Instancemesh2.setColorAt(i, c);\n            Instancemesh3.setColorAt(i, c);\n        }\n        this.meshes.push(Intsancemesh1, Instancemesh2, Instancemesh3);\n        console.log(Intsancemesh1)\n        if (this.renderBackFace) {\n\n            let Intsancemeshback1 = new THREE.InstancedMesh(this.elements[0].geometries[0], gut, num);\n            let Instancemeshback2 = new THREE.InstancedMesh(this.elements[0].geometries[1], gut, num);\n            let Instancemeshback3 = new THREE.InstancedMesh(this.elements[0].geometries[2], gut, num);\n            for (let i = 0; i < num; i++) {\n                if (this.colourByDirector) {\n                    let rgb = colourMap.values[this.elements[i].colourIndex];\n                    c = new Color(Model.rgbToHex(...rgb));\n                }\n                let matrix2 = new THREE.Matrix4();\n                const position = new THREE.Vector3();\n                position.x = this.elements[i].position[0];\n                position.y = this.elements[i].position[1];\n                position.z = this.elements[i].position[2];\n                const scale = new THREE.Vector3();\n                scale.x = scale.y = scale.z = Math.random() * 1;\n                var ori = this.elements[i].quaternion;\n                matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n                Intsancemeshback1.setMatrixAt(i, matrix2);\n                Instancemeshback2.setMatrixAt(i, matrix2);\n                Instancemeshback3.setMatrixAt(i, matrix2);\n                Intsancemeshback1.setColorAt(i, c);\n                Instancemeshback2.setColorAt(i, c);\n                Instancemeshback3.setColorAt(i, c);\n            }\n            this.meshes.push(Intsancemeshback1, Instancemeshback2, Instancemeshback3);\n\n        }\n\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            } else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n            // this.(elem.euler, geoms);\n            // this.translate(elem.position, geoms);\n            elem.setGeometries(geoms);\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length > 0) {\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for (let elem of this.elements) {\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                console.log(this.parameters)\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2 * pos[0], 2 * pos[1], 2 * pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n\n\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0] ** 2;\n            orderTensor[0][1] += orientation[0] * orientation[1];\n            orderTensor[0][2] += orientation[0] * orientation[2];\n            orderTensor[1][1] += orientation[1] ** 2;\n            orderTensor[1][2] += orientation[1] * orientation[2];\n            orderTensor[2][2] += orientation[2] ** 2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor;\n        orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor;\n        orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor;\n        orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n\n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0] ** 2 + this.director[1] ** 2 + this.director[2] ** 2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined) {\n            this.director = [0, 0, 1];\n        } else {\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element) {\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0] + element.orientation[1] * this.director[1] + element.orientation[2] * this.director[2]);\n        if (this.orientationType === 'v') {\n            scalarProduct = Math.abs(element.orientation[1] * this.director[0] + element.orientation[0] * this.director[1] + element.orientation[2] * this.director[2]);\n        }\n        if (scalarProduct > 1) {\n            scalarProduct = 1;\n        }\n\n        return Math.round(Math.acos(scalarProduct) / Math.PI * 2 * (n));\n\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n}\n\nexport default Set;","import {Alert} from 'rsuite';\nimport {AmbientLight, DirectionalLight, DirectionalLightHelper, PointLight, PointLightHelper} from 'three';\n\nexport class Light {\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n    light;\n    helper;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z) {\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i) {\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {Box3, Box3Helper, BufferGeometry, Color, GridHelper, Line, LineBasicMaterial, Vector3} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;\n    G;\n    B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n\n        for (let set of sets) {\n            if (b != null) {\n                break\n            }\n            b = set.genUnitBox()\n\n        }\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                box.setFromCenterAndSize(new Vector3(0, 0, 0), new Vector3(b[0], b[1], b[2]));\n                this.boundingShape = new Box3Helper(box, this.colour);\n\n                break;\n            default:\n                Alert.error('Error: Unknown bounding shape identifier');\n\n\n        }\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 5\n        });\n        if (!this.multicolour) {\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if (this.multicolour) {\n            this.genMulticolourAxes();\n        } else {\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour() {\n        this.multicolour = !this.multicolour;\n        if (this.multicolour) {\n            this.genMulticolourAxes();\n        } else {\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n\n\n}\n\nexport default ReferenceTools;","import {\n    Color,\n    Euler,\n    InstancedMesh,\n    Matrix4,\n    MeshPhongMaterial,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Plane,\n    PlaneHelper,\n    Quaternion,\n    Scene,\n    Vector3,\n    WebGLRenderer\n} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport {Alert} from 'rsuite'\nimport * as SHAPE from './Shapes.js';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n\n\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    numOfObject;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n\n    }\n\n    /* GENERAL FUNCTIONS */\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    setDefault() {\n\n        this.renderer = new WebGLRenderer({\n            antialias: false, powerPreference: \"high-performance\", preserveDrawingBuffer: true\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n\n        this.videoFileloaded = true;\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list = [];\n        this.clock = null;\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType, true);\n        this.lighting = [new Light('ambient'), new Light('directional'), new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    update() {\n        console.log('update called');\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n\n    }\n\n    // occlusionCulling(){\n\n    // const renderer = new WebGLRenderer();\n    // const gl = renderer.getContext();\n    // console.log(gl)\n    // const scene = new Scene();\n    // const mesh1 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // const mesh2 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // scene.add(mesh1, mesh2);\n    // var query = gl.createQuery();\n    // const camera = this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n\n    // camera.position.z = 5;\n    // for (let l of this.lighting) {\n    //     scene.add(l.light);}\n    // gl.beginQuery(gl.ANY_SAMPLES_PASSED,query);\n    // renderer.render(scene, camera);\n    // gl.endQuery(gl.ANY_SAMPLES_PASSED,query);\n    // var result = gl.getQueryParameter(query,gl.QUERY_RESULT);\n    // console.log(Number(result));\n    // console.log(result)\n\n    getRender_Object_number() {\n        let num = 0;\n        this.scene.traverse(function (child) {\n            //@ts-ignore\n            if (child.isMesh) {\n                num = num + 1;\n            }\n\n        });\n\n        this.numOfObject = (num - 6);\n        console.log(this.numOfObject)\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n        console.log(this.sidebarExpanded)\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet === \"\") {\n                return;\n            } else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            m.geometry.dispose();\n            m.material.dispose();\n            m.dispose();\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n        // let mesh = this.occlusionCulling();\n        // this.scene.add(mesh);\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose();\n                m.material.dispose();\n                m.dispose();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n            console.log('sidebar')\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        console.log('set camera called')\n        if (this.camera) {\n            this.camera = '';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        // this.update();\n\n\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / -2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / -2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id, toggle) {\n        if (toggle === true) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        } else if (toggle === false) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position = [];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle, id) {\n        if (toggle === true) {\n            this.renderer.localClippingEnabled = true;\n            for (let x = 0; x < this.sets.length; x++) {\n                this.updateSets(x, [x], (x) => {\n                    this.sets[x].elements = [];\n                    this.sets[x].meshes = [];\n                    this.sets[x].setBackFace(true);\n                    this.sets[x].genElements();\n                    this.sets[x].setElements();\n                    this.sets[x].genMeshes();\n                });\n            }\n\n        } else {\n            this.renderer.localClippingEnabled = false;\n\n        }\n\n\n    }\n\n    // disableClipping(){\n    //     this.renderer.localClippingEnabled = false;\n    // }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n\n        this.clippingPlanes = [new Plane(new Vector3(1, 0, 0), 180), new Plane(new Vector3(-1, 0, 0), 180), new Plane(new Vector3(0, 1, 0), 180), new Plane(new Vector3(0, -1, 0), 180), new Plane(new Vector3(0, 0, 1), 180), new Plane(new Vector3(0, 0, -1), 180)];\n\n        this.clippingHelpers = [new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff), new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n\n    }\n\n\n    // }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    /* Video SUITE */\n    setloaded(toggle) {\n        console.log(toggle);\n    }\n\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n            let fileHandle = [];\n            let lst = [];\n            try {\n                fileHandle = await window.showOpenFilePicker({multiple: true});\n                for (let i = 0; i < fileHandle.length; i++) {\n                    const file = await fileHandle[i].getFile();\n                    lst.push(file);\n                }\n                this.Video_sample_list = lst;\n                resolve(lst);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    notifyFinishUpload() {\n        this.notify('info', `Files loaded successfully`, (<div>\n            <p style={{width: 320}}>\n                Now Select Your Video Viewing configuration!\n                You can show unit box, apply slicing , periodic boundary conditions etc.\n                Please Do not change screen size while generating Video e.g dont click on size bar\n            </p>\n        </div>));\n    }\n\n\n    retrieveVideoSample() {\n        return this.Video_sample_list;\n    }\n\n    removeVideoSample() {\n        delete this.Video_sample_list;\n    }\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic', false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, {x: 50, y: 0, z: 50});\n        this.deleteAllMeshes();\n        this.testMaterial = new MeshPhongMaterial({wireframe: false});\n        // this.testShape = new SHAPE.Preset('Sphere', ...Parameters.Sphere.vals);\n        this.testShape = new SHAPE.Spheroplatelet(0.3, 0.2);\n        console.log('this.genshape');\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 140001;\n\n        let geoms = [];\n        if (this.testShape.isPreset) {\n            geoms.push(this.testShape.presetGeometry.clone());\n        } else {\n            geoms.push(this.testShape.stripGeometry.clone());\n            geoms.push(this.testShape.fanGeometries[0].clone());\n            geoms.push(this.testShape.fanGeometries[1].clone());\n        }\n        this.testGeo = geoms;\n\n        this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n\n        this.notify('info', 'Initialising Performance Test', (<p style={{width: 320}}>\n            Test Size: {this.testLimit.toString()} <br/>\n            Step: {step.toString()} <br/>\n            Shape: Spheroplatelet(0.3,0.2) <br/>\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br/>\n            Material: MeshPhongMaterial\n            <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n        </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Spheroplatelet (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString())\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (const set of this.sets) {\n            console.log(set)\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose();\n                m.material.dispose();\n                m.dispose();\n            }\n\n        }\n\n    }\n\n    addRandomParticles(n) {\n        this.deleteAllMeshes();\n        console.log('add called')\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n        // let m;\n        // for (let i = 0; i < n; i++) {\n        //     for (let g of this.testGeo) {\n        //          m = new Mesh(g, this.testMaterial);\n        //         this.scene.add(m);\n        //     }}\n\n        let Intsancemesh1 = new InstancedMesh(this.testGeo[0], this.testMaterial, n);\n        let Intsancemesh2 = new InstancedMesh(this.testGeo[1], this.testMaterial, n);\n        let Intsancemesh3 = new InstancedMesh(this.testGeo[2], this.testMaterial, n);\n        console.log(Intsancemesh1);\n        for (let i = 0; i < n; i++) {\n            console.log('called')\n            const matrix = new Matrix4();\n            const position = new Vector3();\n            const rotation = new Euler();\n            const quaternion = new Quaternion();\n            const scale = new Vector3();\n            const color = new Color();\n            position.x = Math.random() * 40 - 20;\n            position.y = Math.random() * 40 - 20;\n            position.z = Math.random() * 40 - 20;\n\n            rotation.x = Math.random() * 2 * Math.PI;\n            rotation.y = Math.random() * 2 * Math.PI;\n            rotation.z = Math.random() * 2 * Math.PI;\n\n            quaternion.setFromEuler(rotation);\n\n            scale.x = scale.y = scale.z = Math.random() * 1;\n\n            matrix.compose(position, quaternion, scale);\n            Intsancemesh1.setMatrixAt(i, matrix);\n            Intsancemesh2.setMatrixAt(i, matrix);\n            Intsancemesh3.setMatrixAt(i, matrix);\n            Intsancemesh1.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            Intsancemesh2.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            Intsancemesh3.setColorAt(i, color.setHex(0xffffff * Math.random()));\n        }\n        this.scene.add(Intsancemesh1, Intsancemesh2, Intsancemesh3);\n        this.update();\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","import {ButtonToolbar, Col, Dropdown, InputGroup, InputNumber, RangeSlider, Row, Slider} from 'rsuite';\nimport React, {useState} from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(<ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i}\n                                 step={props.step} positive={props.positive} styling={props.styling}/>);\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive) {\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n        if (this.numerical) {\n            var defaultVal = this.values;\n            InputBox = (<div style={this.styling[0]}>\n                <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min}/>\n            </div>);\n        } else {\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key={val} eventKey={val} active={act}\n                                              onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key={'panel'} eventKey={'panel'} panel style={{width: 150}}></Dropdown.Item>);\n\n            InputBox = (<ButtonToolbar style={{width: 10, marginLeft: 0}}>\n                <Dropdown style={{width: 100}} title={this.active}>\n                    {listItems}\n                </Dropdown>\n            </ButtonToolbar>);\n\n        }\n\n        return (<div>\n            <Row style={{marginTop: 15}}>\n                <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                <Col md={10}/>\n                <Col md={14}>{InputBox}</Col>\n            </Row>\n        </div>);\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (<div>\n        <br/>\n        <Row>\n            <Col md={5}>\n                <p style={{marginTop: 10, marginLeft: 30}}>{props.title}</p>\n            </Col>\n            <Col md={1}/>\n            <Col md={16}>\n                <InputGroup>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[0]}\n                        step={0.1}\n                        onChange={nextValue => {\n                            const end = value[1];\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            if (parseFloat(nextValue) > end) {\n                                return;\n                            }\n                            setValue([parseFloat(nextValue), end]);\n                            f(i, [parseFloat(nextValue), end]);\n                        }}\n                    />\n                    <InputGroup.Addon>to</InputGroup.Addon>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[1]}\n                        step={0.1}\n                        onChange={(nextValue) => {\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            const start = value[0];\n                            if (start > parseFloat(nextValue)) {\n                                return;\n                            }\n                            setValue([start, parseFloat(nextValue)]);\n                            f(i, [start, parseFloat(nextValue)]);\n                        }}\n                    />\n                </InputGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col md={21}>\n                <RangeSlider\n                    min={-100.0}\n                    max={100.0}\n                    progress\n                    style={{marginLeft: 35, marginTop: 30}}\n                    value={value}\n                    onChange={value => {\n                        setValue(value);\n                        f(i, value);\n                    }}\n                />\n            </Col>\n\n        </Row>\n    </div>);\n}\n\nexport const CustomSlider = (props) => {\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{marginLeft: 25, marginTop: 16, width: 170}}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35}}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if (!value || isNaN(value)) {\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>);\n}","import {\n    Alert,\n    Button,\n    ButtonToolbar,\n    ControlLabel,\n    Drawer,\n    Dropdown,\n    Form,\n    FormGroup,\n    Header,\n    Icon,\n    Nav,\n    Navbar,\n    Slider,\n    Tooltip,\n    Whisper\n} from 'rsuite';\nimport {ParameterSet} from './Tools';\nimport React from \"react\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.resolution = [10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    setResolution(val) {\n        this.resolution[0] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (<Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\"/>}>\n\n            <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n            <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n\n            <Button style={{width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15}}\n                    appearance='primary' onClick={this.export}> Export </Button>\n        </Dropdown>);\n    }\n\n}\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {active: 2};\n        this.f = props.f;\n        this.toggler = props.toggler;\n    }\n\n    render() {\n        return (<Dropdown\n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\"/>}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n            }}>\n\n            <Dropdown.Menu title=\"Samples\">\n                <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Spherocylinders\">\n                <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Dense Packings\">\n                <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Item panel style={{width: 120}}></Dropdown.Item>\n        </Dropdown>);\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {val: props.model.lod + 1};\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (<Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\"/>}>\n            <Form style={{marginLeft: 20, marginTop: 20}} layout=\"inline\">\n                <FormGroup>\n                    <ControlLabel>Adjust LOD</ControlLabel>\n                    <Whisper placement=\"bottom\" trigger=\"hover\" speaker={<Tooltip>\n                        Decreasing LOD will increase rendering speed.\n                    </Tooltip>}>\n                        <Icon icon=\"question-circle\" size=\"lg\"/>\n                    </Whisper>\n                </FormGroup>\n            </Form>\n\n            <Slider\n                min={1}\n                step={1}\n                max={5}\n                value={lod}\n                graduated\n                progress\n                style={{width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20}}\n                onChange={(value) => {\n                    this.model.updateLOD(value - 1);\n                    this.updateVal(value);\n                    this.model.update();\n                }}\n\n            />\n            <br/>\n        </Dropdown>);\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = {fps: 0, showDrawer: false, rotating: false, numOfRender: this.model.numOfObject};\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2), numOfRender: this.model.numOfObject\n        });\n    }\n\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (<div>\n            <Header style={{height: 56}}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight>\n                            <ButtonToolbar>\n\n                                <Nav.Item active>fps: {fps}</Nav.Item>\n                                <Nav.Item active>Draw call maded: {num}</Nav.Item>\n                                <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\"\n                                          icon={<Icon icon=\"dashboard\"/>}>Run Performance Test</Nav.Item>\n\n                                <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\"\n                                          icon={<Icon icon=\"refresh\" spin={rotating}/>}>Autorotate</Nav.Item>\n\n\n                                <PerformanceDropdown model={this.model}/>\n                                <LibraryDropdown f={this.functions[3]}/>\n                                <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\"\n                                          icon={<Icon icon=\"info\"/>}>About</Nav.Item>\n                                <ExportDropdown f={this.functions[2]}/>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\"/>}\n                                          onSelect={this.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                       id=\"upload-btn\"\n                                       style={{display: 'none'}}\n                                       className='input-file'\n                                       accept='.json,.webmga'\n                                       onChange={e => this.functions[1](e.target.files[0])}/>\n                                <label htmlFor=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\"/>}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav>\n                            <h6 style={{padding: 20}}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n            <Drawer\n                size={'sm'}\n                placement={'right'}\n                show={showDrawer}\n                onHide={this.toggleDrawer}\n                backdrop={false}\n            >\n                <Drawer.Header>\n                    <Drawer.Title>About</Drawer.Title>\n                    <br/>\n                    <ButtonToolbar>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"mortar-board\"/> Liquid Crystals\n                        </Button>\n                        <Button key=\"man\" color=\"cyan\"\n                                href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"info-circle\"/> User Manual\n                        </Button>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation\n                        </Button>\n                        <Button color=\"cyan\" href=\"https://github.com/joe-down/WebMGA-3\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"github\"/> Github\n                        </Button>\n                    </ButtonToolbar>\n                    <br/>\n                    <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations\n                        included in the library.</i></p>\n\n                    <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a\n                        scientific publication, see 'User Manual'.</i></p>\n\n                </Drawer.Header>\n\n                <div style={{margin: 25}}>\n                    <h2>WebMGA </h2>\n                    <br/>\n                    WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc\n                    Computer Science at University College London, supervised by Guido Germano, Michael P. Allen,\n                    and Tobias Ritschel.\n                    <br/><br/>\n                    The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for\n                    coarse-grained molecular models that utilises prolated and elongated convex bodies as the\n                    elementary units of simulation.\n                    <br/><br/>\n                    Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack\n                    of available visualisation platforms suitable for this niche, WebMGA provides a unique,\n                    out-of-the-box solution for researchers and educators to generate, stylise, and interact with\n                    three-dimensional renders of molecular simulations.\n                    <br/><br/>\n                    WebMGA is written in Javascript, and implements the graphics library <a\n                    href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering\n                    images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\"\n                                      rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface\n                    that is intuitively compartmentalised and easy to learn.\n                    <br/><br/>\n                    WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\"\n                                                 rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based\n                    application written in C++ that filled this gap in molecular graphics in 2008.\n\n                </div>\n            </Drawer>\n        </div>);\n    }\n}\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport {View} from './View.js'\n\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.model.deleteAllMeshes();\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n        \n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;  \n    }\n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(toggle)\n        if(toggle ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n            \n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n    \n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n            };\n        }\n        if (i === max_iter){\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n                \n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n    \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                   \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\" \n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n                   \n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n        console.log(this.state,View.state.slicing);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        this.setState({\n            slicing_enabled :toggle\n        })\n        View.state.slicing.slicing_enabled = toggle\n        console.log(this.state,View.state.slicing);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n    \n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                View.state.slicing.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                View.state.slicing.ty = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                View.state.slicing.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n        \n        \n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n       \n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n   \nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n    \n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        \n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.state.showAxes;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                    \n\n\n                </Grid>\n               \n            </div>\n        );\n    }\n}\n","import {Alert, Container, Content, Icon, IconButton, Nav, Navbar, Sidebar} from 'rsuite';\nimport React, {Component} from \"react\";\nimport {\n    AdditionalLightOptions,\n    AmbientLightOptions,\n    CameraOptions,\n    ModelsOptions,\n    ReferenceOptions,\n    SlicingOptions,\n    VideoOptions\n} from './SubMenus'\n\n\nconst NavToggle = ({expand, onChange}) => {\n    return (<Navbar appearance=\"subtle\" className=\"nav-toggle\">\n        <Navbar.Body>\n            <Nav pullRight>\n                <IconButton\n                    circle\n                    style={{textAlign: 'center', margin: 10}}\n                    onClick={onChange}\n                    appearance=\"default\"\n                    icon={<Icon icon={expand ? 'angle-left' : 'angle-right'}/>}/>\n            </Nav>\n        </Navbar.Body>\n    </Navbar>);\n};\n\nconst navItemStyle = {margin: 6.5};\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({active, onSelect, ...props}) => {\n    return (<div>\n        <Nav {...props} activeKey={active} onSelect={onSelect}\n             style={{backgroundColor: '#101010', height: sidebarHeight}}>\n            <Nav.Item title=\"Models\" eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\"/>}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Slicing\" eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Video Rendering\" eventKey=\"Video Rendering\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item title=\"Camera\" eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item title=\"Ambient\" eventKey=\"Ambient\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item title=\"Lighting\" eventKey=\"Lighting\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item title=\"Reference\" eventKey=\"Reference\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\"/>}/>\n            {/* </Whisper> */}\n\n        </Nav>\n    </div>);\n};\n\nconst MenuContent = ({active, expand, onChange, model, toggler, functions}) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange}/>);\n    } else {\n        menuContent.push(<div style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav>\n                        <h3 style={{marginTop: 15, marginLeft: 30}}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange}/>\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n        </div>);\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model}/>);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler}/>);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model}/>);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model}/>);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model}/>);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded, active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n\n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand) {\n                this.handleToggle();\n            }\n        }\n    }\n\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n\n    render() {\n        const {expand} = this.state;\n        const {active} = this.state;\n        return (<div>\n                <Sidebar\n                    style={{display: 'flex', flexDirection: 'column'}}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56}>\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect}/>\n                        </Sidebar>\n                        <Content>\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle}\n                                         model={this.model} toggler={this.toggler} functions={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    static state;\n    header;\n    sidebar;\n    model;\n    expanded;\n    submenu;\n    ModelDefaultState = {\n        active: 0, reset: 0, sets: [], configurations: [],\n    }\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled: false,\n        helpers: [false, false, false],\n        x: [-80, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n    ConfigurationDefaultState = {\n        title: '', shape: 'Ellipsoid', parameters: {\n            names: ['X', 'Y', 'Z'], vals: [1, 1, 0.2]\n        }, colour: {\n            r: 255, g: 255, b: 255\n        }, colourFromDirector: true, displayAsWireframe: false\n    }\n    CameraDefaultState = {\n        type: 'orthographic', lookAt: {\n            x: 0, y: 0, z: 0\n        }, position: {\n            x: 0, y: 0, z: -15\n        }, zoom: 50\n    }\n    PointLightDefaultState = {\n        reset: 0, active: 'point', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 60\n        }, position: {\n            x: 5, y: 0, z: 5\n        }\n    }\n    DirectionalLightDefaultState = {\n        reset: 0, active: 'directional', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 50\n        }, position: {\n            x: -5, y: 0, z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps: 24,\n        uploaded: true,\n        video: false,\n        loadVideoState: false\n    }\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255, g: 255, b: 255, i: 40\n        }, darkBackGround: true\n    }\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler={toggler}/>;\n        this.sidebar =\n            <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state, vid) {\n        View.state = state;\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i, substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state, vid) {\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n\n    }\n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0, state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state, vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if (state.ambientLight.darkBackGround) {\n            this.model.updateBg(\"#000000\");\n        }\n        if (!state.ambientLight.darkBackGround) {\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if (!vid) {\n            this.model.setCamera(state.camera.type, false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        this.model.updateLookAt(state.camera.lookAt);\n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultState(init, vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state, vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {mean, std} from 'mathjs';\nimport unfolded_sample1 from './Samples/UnfoldedSC4.json';\nimport unfolded_sample2 from './Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport {Alert, Notification} from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => {\n        }\n        autorotate = () => {\n        }\n        updateCamera = () => {\n        }\n\n    }\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 5000;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)', (\n                    <p style={{width: 320}}>\n                        <b>FPS</b> <br/>\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br/>\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()}\n                        <br/>\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString() + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n                    this.externalToggle.autorotate();\n                    this.notify('success', 'Test Completed Succesfully', (<p style={{width: 320}}>\n                        All molecules deleted. Please see console output for a list of average FPS and standard\n                        deviations.\n                    </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n    constructor() {\n\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate, this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(({\n            top: 70, duration: 8000\n        }));\n\n    }\n\n    start = () => {\n        this.chronometer.model = this.model;\n        this.generate(sample2, true, false);\n        // this.model.occlusionCulling();\n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`, (<div>\n            <p style={{width: 320}}>\n                Check out the liquid crystal configurations in the Library, and head to the About section to\n                learn more!\n\n            </p>\n            <p style={{width: 320}}>\n                This application works best on the Chrome browser.\n            </p></div>));\n        // this.loadVideoSample();\n    }\n\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title, placement: 'bottomEnd', duration: 7000, description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename); else { // Others\n            var a = document.createElement(\"a\"), url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState = () => {\n        let data = {};\n        data.state = this.view.getData();\n        console.log('get state');\n        return JSON.stringify(data);\n\n    }\n\n    generate = (data, starting, vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            if (vidstate) {\n                this.view.setState((JSON.parse(vidstate)).state, true);\n            } else {\n                this.view.setDefaultState(starting, false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        } else {\n            this.view.setState(data.state, false);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n    }\n\n    load = (file, VIDEO, vidstate) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            const data = JSON.parse(fileReader.result);\n            try {\n                console.log(vidstate);\n                this.generate(data, false, vidstate);\n                if (VIDEO === false) {\n                    Alert.success('File loaded successfully.');\n                }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n    }\n\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample = unfolded_sample1;\n                break;\n            case 18:\n                sample = unfolded_sample2;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false, false);\n\n\n        Alert.success('File loaded successfully.');\n\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width, resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution / 10);\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (<div>\n            Image exported successfully.\n        </div>));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key === 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key === 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n}\n\nexport default Controller;","import React, {Component} from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {Container, Content} from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n    controller;\n\n    constructor(props) {\n        super(props);\n        this.controller = new Controller();\n\n        this.state = {\n            header: this.controller.getHeader(), sidebar: this.controller.getSidebar()\n        };\n    }\n\n    componentDidMount() {\n        this.mount.appendChild(this.controller.getDomElement());\n        this.controller.start();\n    }\n\n    render() {\n        const header = this.state.header;\n        const sidebar = this.state.sidebar;\n\n        return (<div>\n            <Container>\n                {header}\n                <Container>\n                    {sidebar}\n                    <Content>\n                        <div ref={ref => (this.mount = ref)}/>\n                    </Content>\n                </Container>\n\n            </Container>\n\n        </div>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode> <App/> </React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}