{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Model/Model.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","moleculeBoundingBox","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","console","log","a","b","c","validateData","genElements","setElements","genMeshes","genListBoundingBox","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","target","min","max","bool","m","mat","gutsMaterial","v","elem","rgb","colourMap","values","MeshPhongMaterial","color","side","THREE","clipShadows","Mesh","BoundingBoxs","color2","geo","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","colorWrite","shape","clone","rotate","translate","setGeometries","lst1","lst2","ori","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","isNaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","setFromCenterAndSize","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","ParameterSet","props","titles","title","numerical","f","step","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","style","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","width","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","height","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","model","state","updateKey","key","setState","Menu","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","update","GeneralMenu","continuousRender","chronometer","click","controls","rotating","requestAnimationFrame","functions","toggler","fps","showDrawer","numOfRender","numOfObject","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","num","Header","Navbar","Body","Nav","pullRight","spin","id","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","r","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","lst","then","notifyFinishUpload","Video_sample_list","vidstate","loadVideoState","video","samples","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","setTimeout","vidState","capture","renderer","domElement","stop","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","camera","selectType","updateLookat","updatePosition","updateZoom","updateState","updateCamera","zoom","updateCameraZoom","setCamera","updateCameraPosition","lookAt","updateLookAt","cameraType","cameraPosition","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","enabled","updateLight","updateLightPosition","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","toggleAxes","toggleMulticolour","displayFoldState","toggleFoldState","boundingShapeEnabled","updateBoundingShape","activeShape","toggleAxesMulticolour","showAxes","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","window","innerHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","sidebarExpanded","handleToggle","disableClipping","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","axesEnabled","directionalLightColour","parse","pointLightColour","init","loadState","notify","gridEnabled","scene","Scene","occlusion_scene","setDefault","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","devicePixelRatio","videoFileloaded","cameraPostion","lightHelperWarningGiven","selectedSet","clock","initClippers","updateDimensions","view","externalToggle","lighting","tools","bgColour","setClearColor","l","add","render","traverse","child","isMesh","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","params","remove","geometry","dispose","updateSets","setUserColour","getRender_Object_number","occlusionCulling","innerWidth","setSize","starting","PerspectiveCamera","OrthographicCamera","OrbitControls","aspect","left","right","top","bottom","updateProjectionMatrix","visible","warning","genFoldedPositionFromUnfold","passGrid","passAxes","passShape","toggleGrid","updateSize","genBoundingShape","localClippingEnabled","setBackFace","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","Promise","resolve","reject","fileHandle","showOpenFilePicker","multiple","getFile","file","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","children","componentToHex","Controller","ExternalToggle","Chronometer","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","revokeObjectURL","getData","saveVideoState","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unforded_sample2","convertQMGA","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1b799ca.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    Box3Helper,\n    Box3\n\n} from 'three';\nimport * as THREE from 'three';\nimport {eigs} from 'mathjs';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n    \n    \n    \n    positions = [];\n    Folded_position=[]\n    orientations = [];\n    elements = [];\n    meshes = [];\n    moleculeBoundingBox = [];\n    // materials =[];\n\n    \n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci; \n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n        \n    }\n\n    isFoldedTest(){\n        let x = this.unitBox[0]/2;\n        let y = this.unitBox[1]/2;\n        let z = this.unitBox[2]/2;\n        console.log(this.positions.length,x,y,z)\n        for (let i = 0; i < this.positions.length; i++){\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if(a>=x || a<=-x){\n                return false\n            }\n            if(b>=y|| b<=-y){\n                return false\n            }\n            if(c>=z || c<=-z){\n               return false\n            }\n            console.log(i,a,b,c);    \n    }\n    return true;\n}\n\n    genSet(){\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n        this.genListBoundingBox();\n    }\n\n    \n\n    validateData() {\n        if (this.positions.length != this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw  new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace =false;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    // updateSlicedset(){\n    //     clippingPlanes = this.clippingPlanes;\n    //     for(let mesh of this.meshes){\n    //         mesh.material.geometries\n    //     }\n    // }\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n    genUnitBox(){\n        // This is the user input unit box of whole \n        return this.unitBox;\n\n    }\n    \n    genUnfoldPosition(){\n    \n        if(this.isFoldedTest()=== false){\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos =[];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rnd1 = (Math.random() * (2) -1) \n            let rnd2 = (Math.random() * (2) -1)\n            let rnd3 = (Math.random() * (2) -1)\n            pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        }\n        this.positions = pos;\n        \n    }\n\n    genFoldedPositionFromUnfold(){\n        if(this.isFoldedTest()=== true){\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos =[];\n        let lx = this.unitBox[0]/2;\n        let ly = this.unitBox[1]/2;\n        let lz = this.unitBox[2]/2;\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n            \n            rx = rx%lx;\n            ry = ry%ly;\n            rz = rz%lz;\n           \n            pos.push([rx,ry,rz])\n        }\n        this.Folded_position = pos;\n        \n    }\n    inRange(target,min,max){\n        if (min<=target<=max ){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    setBackFace(bool){\n        this.renderBackFace =bool;\n    }\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n        let gutsMaterial;\n        let v;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n        \n            mat =new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: false,\n                side : THREE.FrontSide,\n                clipShadows: true\n            });\n            mat.wireframe = this.wireframe;\n            if (this.renderBackFace){\n                gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n            }\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n                if (this.renderBackFace){\n                    v = new Mesh(g,gutsMaterial);\n                    this.meshes.push(v);\n                }\n                \n            }\n        }\n    }\n    genListBoundingBox(){\n        // Bounding Box for each molecule\n        let BoundingBoxs =[]\n        const color2 = new THREE.Color( '0xff0000')\n        for (let elem of this.elements){\n            let geo = BufferGeometryUtils.mergeBufferGeometries(elem.geometries);\n            let box = new Box3();\n            geo.computeBoundingBox();\n            box.copy(geo.boundingBox);\n            let boundingBox= new Box3Helper(box,color2);\n            boundingBox.material.colorWrite=true;\n            // boundingBox.material.depthWrite=false;\n            BoundingBoxs.push(boundingBox)\n        }\n        this.moleculeBoundingBox = BoundingBoxs;\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n    setPositions(lst1,lst2){\n        // let pos =[];\n        // let x = this.unitBox[0];\n        // let y = this.unitBox[1];\n        // let z = this.unitBox[2];\n\n        // for (let i = 0; i < this.positions.length; i++){\n        //     let rnd1 = (Math.random() * (2) -1) \n        //     let rnd2 = (Math.random() * (2) -1)\n        //     let rnd3 = (Math.random() * (2) -1)\n        //     pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        // }\n        // this.positions = pos;\n        const pos = lst1;\n        const ori = lst2;\n        this.positions =pos;\n        this.orientations =ori;\n          \n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length>0){\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3\n} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n        \n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n        \n        for (let set of sets) {\n            if (b != null){\n                break\n            }\n            b =set.genUnitBox()\n            \n        }\n    \n        switch (type) {\n            case 'box':\n                    let box = new Box3();\n                    box.setFromCenterAndSize(new Vector3(0,0,0),new Vector3(b[0]*2,b[1]*2,b[2]*2));\n                    this.boundingShape = new Box3Helper(box, this.colour);\n                    \n                break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n            \n\n        }\n        \n\n        return this.boundingShape;\n\n    }\n\n   \n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n   \n\n}\n\nexport default ReferenceTools;","\n\nimport { Dropdown, RangeSlider,InputNumber,InputGroup, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n        if (this.numerical) {\n            var defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key ={val} eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key ={'panel'}eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 100 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const[value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if(!nextValue||isNaN(nextValue)){\n                                    nextValue = 0;\n                                }\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                if(!nextValue||isNaN(nextValue)){\n                                    nextValue = 0;\n                                }\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-100.0}\n                        max={100.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if(!value||isNaN(value)){\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip,Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.resolution =[10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n    setResolution(val){\n        this.resolution[0] = parseInt(val);\n    }\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n                 <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(key) {\n        this.setState({\n            active: key\n        });\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Item panel style={{ width: 120 }}></Dropdown.Item>\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip >\n                            Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false ,numOfRender:this.model.numOfObject};\n\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n   \n     \n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n     \n    \n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n  \n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2),\n            numOfRender:this.model.numOfObject\n        });\n    }\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                \n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active>Molecules rendered: {num}</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    {/* <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                        <Tooltip>\n                                            The performance test was included for completeness and will be removed after submission.\n                                        </Tooltip>\n                                    }>\n                                        <Icon style={{marginTop: 18}}icon=\"question-circle\" size=\"lg\" />\n                                    </Whisper> */}\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                \n                                    \n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"info\" />}>About</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label htmlFor=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav >\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals\n                        </Button>\n                            <Button key=\"man\" color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n                        <br />\n                        <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations included in the library.</i></p>\n\n                        <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see 'User Manual'.</i></p>\n\n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h2>WebMGA </h2>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++ that filled this gap in molecular graphics in 2008.\n                    \n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport { View } from './View'\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n        \n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;  \n    }\n    \n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(this.state.video);\n        if(this.state.video ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            setTimeout(() => {\n                this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n            }, 2000);\n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n    \n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            console.log('does this work?')\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            console.log('start render')\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            \n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n                console.log('sending request',i+1)\n            };\n        }\n        if (i === max_iter){\n                console.log('max')\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n                \n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n    \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                   \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\" \n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n                   \n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        View.state.slicing.slicing_enabled = toggle\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n    \n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                // this.state.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                // this.state.y = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                // this.state.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n        \n        \n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n       \n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n   \nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n    \n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        \n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.state.showAxes;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n                    \n\n\n                </Grid>\n               \n            </div>\n        );\n    }\n}\n","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions,VideoOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5};\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\"  eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\"  eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                 <Nav.Item title=\"Video Rendering\"  eventKey=\"Video Rendering\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\"  eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\"  eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\"  eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\"  eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler,functions}) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav >\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model} />);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n                this.model.disableClipping()\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler} functions ={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n    submenu;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n    \n    getData() {\n        return View.state;\n    }\n\n    setState(state,vid) {\n        View.state = state;\n        if(!vid){\n            this.loadLightingAndCamera(state,vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i,substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state,vid){\n        if(!vid){\n            this.loadLightingAndCamera(state,vid);\n        }\n        this.loadReferenceAndSlicing(state);\n        \n    }\n \n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0,state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state,vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if(state.ambientLight.darkBackGround){\n            this.model.updateBg(\"#000000\");\n        }\n        if(!state.ambientLight.darkBackGround){\n            this.model.updateBg('#FFFFFF');\n        }\n        \n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if(!vid){\n            this.model.setCamera(state.camera.type,false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        \n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init,vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n    \n        this.loadState(View.state,vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n  \n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: [],\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled:false,\n        helpers: [false, false, false],\n        x: [-180, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [1, 1, 0.2]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: false\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps :24,\n        uploaded :true,\n        video:false,\n        loadVideoState:false\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        darkBackGround:true\n    }\n\n}\n\nexport default View;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    Mesh,\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\nimport View from \"../View/View.js\"\n\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    \n    \n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    numOfObject;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.occlusion_scene =new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n       \n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false,powerPreference: \"high-performance\",preserveDrawingBuffer:true});\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n\n        this.videoFileloaded =true;\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list=[];\n        this.clock = null;\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType,true);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n        \n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n            // this.occlusion_scene.add(l.light)\n        }\n        this.scene.add(this.camera);\n        // this.occlusion_scene.add(this.camera)\n        this.lod = 2;\n    }\n  \n\n    update() {\n        console.log(this.renderer.info);\n        this.renderer.render(this.scene, this.camera);\n        \n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n\n    getRender_Object_number(){\n        let num =0;\n        this.scene.traverse( function(child) {\n             //@ts-ignore\n            if ( child.isMesh){\n                num = num+1;\n            };\n        } );\n       \n        this.numOfObject = (num-6)/3;\n    }\n    occlusionCulling(){\n    //    Add bounding Box of each molecule to scene\n    //    Color write are set to be False;\n        // for (let set of this.sets) {\n        //     for (const y of set.moleculeBoundingBox ) {\n        //         this.scene.add(y);\n        //         console.log(y)\n        //     }\n        // } \n        this.renderer.render(this.scene, this.camera)\n        // const query = gl.createQuery();\n        // gl.beginQuery(gl.ANY_SAMPLES_PASSED_CONSERVATIVE,query);\n        \n        // const currentQuery = gl.getQuery(gl.ANY_SAMPLES_PASSED_CONSERVATIVE, query);\n        // gl.endQuery(query);\n        // console.log(currentQuery);\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet === \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            m.geometry.dispose();\n            m.material.dispose(); \n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                m.geometry.dispose ();\n                m.material.dispose ();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n        this.occlusionCulling();\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type,starting) {\n        console.log('set camera called')\n        if(this.camera){\n            this.camera='';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        \n      \n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n       \n        // else{\n        //     this.controls.update();\n        // }\n        \n        this.controls.target = this.lookAt;\n        this.update();\n        \n        \n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id,toggle){\n        if(toggle===true){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });}\n        else if(toggle === false){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position =[];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n    \n    \n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle,id){\n        if (toggle === true){\n            this.renderer.localClippingEnabled = true;\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].setBackFace(true);\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n        else{\n            this.renderer.localClippingEnabled = false;\n        }\n        \n      \n    }\n\n    disableClipping(){\n        this.renderer.localClippingEnabled = false;\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n        \n   \n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 180),\n            new Plane(new Vector3(-1, 0, 0), 180),\n            new Plane(new Vector3(0, 1, 0), 180),\n            new Plane(new Vector3(0, -1, 0), 180),\n            new Plane(new Vector3(0, 0, 1), 180),\n            new Plane(new Vector3(0, 0, -1), 180)\n        ];\n       \n       this.clippingHelpers = [\n        new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n        new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n        \n    }\n\n\n    \n    // }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n    /* Video SUITE */\n    setloaded(toggle){\n        console.log(toggle);\n    }\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n          let fileHandle = [];\n          let lst = [];\n          try {\n            fileHandle = await window.showOpenFilePicker({ multiple: true });\n            for (let i = 0; i < fileHandle.length; i++) {\n              const file = await fileHandle[i].getFile();\n              lst.push(file);\n            }\n            this.Video_sample_list = lst;\n            resolve(lst);\n          } catch (error) {\n            reject(error);\n          }\n        });\n    }\n\n    notifyFinishUpload(){\n        this.notify('info', `Files loaded successfully`,\n            (<div>\n            <p style={{ width: 320 }} >\n                Now Select Your Video Viewing configuration!\n                We recommend showing bounding box!\n            </p>\n            </div>\n            ));\n            }\n    \n\n    retrieveVideoSample(){\n        return this.Video_sample_list;\n    }\n   removeVideoSample(){\n    delete this.Video_sample_list;\n   }\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic',false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Torus (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshPhongMaterial\n                <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if (this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\nimport unfolded_sample1 from'./Samples/UnfoldedSC4.json';\nimport unforded_sample2 from'./Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        \n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate,this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2,true,false); \n        \n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`,\n            (<div>\n            <p style={{ width: 320 }} >\n                Check out the liquid crystal configurations in the Library, and head to the About section to learn more!\n                \n            </p>\n            <p style={{ width: 320 }} >\n                This application works best on the Chrome browser.\n             </p></div>\n            )\n\n        );\n        // this.loadVideoSample();\n    }\n    \n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 7000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState=()=>{\n        let data = {};\n        data.state = this.view.getData();\n        console.log( 'get state');\n        return JSON.stringify(data);\n        \n    }\n\n    generate = (data, starting,vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) { \n            if(vidstate){\n                this.view.setState((JSON.parse(vidstate)).state,true);\n            }\n            else{\n                this.view.setDefaultState(starting,false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        }\n        else {\n            this.view.setState(data.state,false);\n        }\n        this.model.update();\n    }\n\n    load = (file,VIDEO,vidstate) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n            this.generate(data,false,vidstate);\n            if(VIDEO === false){\n                Alert.success('File loaded successfully.');\n            }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n        \n    }\n   \n\n   \n   \n    loadSample = (id) => {\n        let sample;\n       \n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample =unfolded_sample1;\n                break;\n            case 18:\n                sample =unforded_sample2 ;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n        this.generate(sample, false,false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width,resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\",resolution/10);\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key === 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key === 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}