{"version":3,"sources":["Model/Shapes.ts","Model/Light.ts","Model/Parameters.js","Model/Set.js","Model/ReferenceTools.js","Model/Model.tsx","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["linspace","start","stop","number","increment","values","i","push","base","Shape","LOD","parameters","stripGeometry","this","arguments","default_lod","undefined","lod","vertices","offset","length","cut","math","roll_row","slice","concat","section","map","row","row_index","complexity_count","complexity","value","LightTypes","Sphere","radius","vertical_sample_scale","samples","vertical_samples","update_samples","Math","max","genGeometries","theta","phi","sin_phi","sin","cos","thetas","phis","offset_thetas","PI","result","entries","phi_index","abc","sample_sphere","vertex_row","vertex","floor","phi_offset","spherical_vertices","quarter_thetas","bottom_half","rolled_vertices","roll_offset","toReversed","build_quarters","quarter_sphere_vertices","roll_vertices","build_halves","half_sphere_vertices","positions","row_column","position_components","to_triangles","geometry","BufferGeometry","setAttribute","BufferAttribute","Float32Array","BufferGeometryUtils","mergeVertices","computeVertexNormals","normalizeNormals","sub_geometries","generate_vertices","sub_vertices","geometry_from_vertices","mergeBufferGeometries","genGeometriesBase","Spheroplatelet","circle_radius","row_count","column_count","top","column","bottom","circle_angles","radius_vector","norm","face_circle_angles","x","normalised_radius_vector","Ellipsoid","y","z","scale","CapCutSphereBase","cut_radius","z_cut","flat_top","end_source_index","xs","ys","zs","end","Array","fill","CutSphere","DoubleCutSphere","angle_cut","partial_vertices","index","Cap","BaseLens","radius_2","angle","top_shape","bottom_cap","bottom_shape","set_lod","reverse","pole_offset","reverse_vertices","distance","ThickLens","thickness","cos_theta","RadiusOnlyLens","acos","BiconvexLens","separation","shape_halves","part","item","new_row","bottom_offsets","bottom_roll","indexOf","min","apply","Spherocylinder","Parameters","names","vals","Lens","Set","data","cp","ci","variable_lod","Folded_position","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","quaternion","w","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","genMeshes","Error","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","renderBackFace","constant","isFoldedTest","pos","rnd1","random","rnd2","rnd3","Alert","info","lx","ly","lz","rx","ry","rz","round","bool","num","geometry_distances","distance_index","new_gen_geometries","rgb","colourMap","Model","rgbToHex","mat","MeshPhongMaterial","side","THREE","clipShadows","color","matrix2","ori","compose","lod_mesh","addLevel","applyMatrix4","getRotations","calculateDirector","elem","setColourIndex","calculateColourIndex","shape","SHAPE","generate","translate","type","rot","Quaternion","orientationVector","Vector3","normalize","setFromUnitVectors","set","setFromAxisAngle","e","fromArray","setFromEuler","n","orderTensor","factor","eigen","eigs","reduce","iMax","arr","director","vectors","sqrt","isNaN","error","element","scalarProduct","abs","hex","val","LightNew","lightType","light","helper","setLight","setHelper","AMBIENT","AmbientLight","DIRECTIONAL","DirectionalLight","POINT","PointLight","RangeError","DirectionalLightHelper","PointLightHelper","setHex","parseInt","substring","intensity","light_types","ReferenceTools","s","axes","size","colour","material","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","director_colour","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","console","log","axesSize","origin","Line","setFromPoints","director_vector","clone","multiplyScalar","mat1","mat2","mat3","mat4","updateColour","chronometer","notify","scene","camera","lighting","bgColour","controls","lookAt","tools","renderer","height","width","axesEnabled","sidebarExpanded","cameraType","cameraPosition","selectedSet","clippingHelpers","numOfObject","axes_enabled","colour_axes","repeats_x","repeats_y","repeats_z","molecules","onBeforeRender","set_axes","setDefault","WebGLRenderer","antialias","powerPreference","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","rotating","lightHelperWarningGiven","Video_sample_list","initClippers","updateDimensions","setCamera","setClearColor","l","add","status","updateSets","enabled","axes_origin","assert","zoom","axis","remove","divideScalar","world_axes_origin","localToWorld","axis_line_ends","director_line_ends","line_ends","line_materials","line_end","colour_from_director","line_geometry","vector","enable_colour","palette_start","palette_range","hue","lightness","dot","setHSL","render","click","traverse","child","isMesh","model","temp","updateCamera","autoRotate","molecule","pop","forEach","mesh","new_mesh","id","params","f","m","update_repeats","setUserColour","r","g","toggle","setData","clippingIntersections","getRender_Object_number","innerHeight","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","OrbitControls","domElement","target","aspect","left","right","updateProjectionMatrix","update","warning","updatePosition","genFoldedPositionFromUnfold","passAxes","toggleAxes","toggleMulticolour","boundingShapeEnabled","genBoundingShape","localClippingEnabled","setBackFace","Plane","PlaneHelper","visible","updateSlicers","Promise","resolve","reject","fileHandle","lst","showOpenFilePicker","multiple","getFile","file","style","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","testShape","testTotal","testLimit","testGeo","InstancedMesh1","InstancedMesh","InstancedMesh2","InstancedMesh3","matrix","Matrix4","rotation","setMatrixAt","setColorAt","componentToHex","Scene","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","localeCompare","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","parseFloat","Addon","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","toggler","Menu","PerformanceDropdown","updateVal","toggleVariableLod","setState","set_variable_lod","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Checkbox","checked","GeneralMenu","continuousRender","requestAnimationFrame","functions","fps","showDrawer","numOfRender","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","htmlFor","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","VideoOptions","reference","setfps","UploadFiles","RealTimeVideo","VideoToggle","setVideoState","filename","setFileName","uploaded","runAfterUpload","uploadConfig","then","notifyFinishUpload","vidstate","loadVideoState","video","retrieveVideoSample","max_iter","capturer","ccapture","format","framerate","quality","vidState","capture","save","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","removeChild","upload","Grid","fluid","Input","placeholder","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","slicing","toggleSlicer","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","slicing_enabled","enableClipping","helpers","toggleHelper","ty","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","darkBackGround","backgroundColour","ReferenceOptions","toggleFold","toggleBoundingShapeEnabled","toggle_axes_enabled","toggle_axes_colour","displayFoldState","toggleFoldState","updateBoundingShape","activeShape","toggleAxesMulticolour","showAxes","repeats","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","vid","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","Blob","navigator","msSaveOrOpenBlob","setTimeout","revokeObjectURL","getData","view","saveVideoState","starting","genSets","setDefaultState","load","VIDEO","fileReader","FileReader","onloadend","split","toLowerCase","qmga_to_json","cnf_to_json","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","unfolded_sample1","unfolded_sample2","dataURL","toDataURL","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","code","config","duration","description","Notification","split_data","trim","unit_box","molecule_count","molecule_number","molecule_data","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.063ea15e.chunk.js","sourcesContent":["import {BufferAttribute, BufferGeometry} from 'three';\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport * as math from \"mathjs\";\n\nfunction linspace(start: number, stop: number, number: number): number[] {\n    let increment: number = (stop - start) / (number - 1)\n    let values: number[] = []\n    for (let i: number = 0; i < number; ++i) {\n        values.push(start + i * increment)\n    }\n    return values\n}\n\nfunction logspace(start: number, stop: number, number: number, base: number): number[] {\n    return linspace(start, stop, number).map(value => base ** value)\n}\n\nexport class Shape {\n\n    //complexity attributes\n    LOD;\n    static default_lod: number = 5\n    static complexity_count: number = 10\n    static complexity: number[] = math.multiply(math.round(math.divide(logspace(3, 7, Shape.complexity_count, 2), 2)), 2);\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometry?: BufferGeometry;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.LOD = Shape.default_lod;\n        this.stripGeometry = undefined;\n    }\n\n    set_lod(lod: number) {\n        this.LOD = lod\n    }\n\n    roll_vertices(vertices: number[][][], offset: boolean = false) {\n        for (let i = 0; i < vertices.length; ++i) {\n            let cut = math.ceil((i + (offset ? 1 : 0)) / 2)\n            vertices[i] = this.roll_row(vertices[i], cut)\n        }\n        return vertices\n    }\n\n    roll_row(vertices: number[][], cut: number) {\n        return vertices.slice(-cut).concat(vertices.slice(0, -cut))\n    }\n\n    reverse_vertices(section: number[][][]): number[][][] {\n        return section.map((row, row_index) => row.slice(-row_index).concat(row.slice(0, -row_index)))\n    }\n}\n\nexport class Sphere extends Shape {\n    radius: number\n    samples: number = Sphere.complexity[this.LOD]\n    vertical_samples: number = this.samples\n    vertical_sample_scale: number\n\n    constructor(radius: number, vertical_sample_scale: number = 1) {\n        super();\n        this.radius = radius\n        this.vertical_sample_scale = vertical_sample_scale\n        this.update_samples()\n    }\n\n    update_samples(): void {\n        this.samples = Math.max(4, Sphere.complexity[this.LOD])\n        this.vertical_samples = Math.max(4, this.samples * this.vertical_sample_scale)\n        if (this.vertical_samples % 2 == 1) {\n            ++this.vertical_samples\n        }\n    }\n\n    set_lod(lod: number) {\n        super.set_lod(lod);\n        this.update_samples();\n    }\n\n    generate(): void {\n        this.update_samples();\n        this.genGeometries();\n    }\n\n    sample_sphere(radius: number, theta: number, phi: number): number[] {\n        let sin_phi: number = Math.sin(phi);\n        return math.multiply(radius, [sin_phi * Math.cos(theta), sin_phi * Math.sin(theta), Math.cos(phi)])\n    }\n\n    spherical_vertices(radius: number, thetas: math.MathArray, phis: math.MathArray, samples: number): number[][] {\n        let offset_thetas: math.MathType = math.add(thetas, math.divide(Math.PI, samples))\n        let result = []\n        for (let [phi_index, phi] of phis.entries()) {\n            let abc = []\n            for (let theta of ((phi_index % 2 == 0) ? thetas : offset_thetas)) {\n                abc.push(this.sample_sphere(radius, theta, phi))\n            }\n            result.push(abc)\n        }\n        return result\n    }\n\n    build_quarters(vertices: number[][][]): math.MathType {\n        return math.concat(vertices, vertices.map(vertex_row => vertex_row.map(vertex => [-vertex[0], -vertex[1], vertex[2]])), 1)\n    }\n\n    quarter_thetas(samples: number): number[] {\n        return linspace(0, Math.PI, Math.floor(samples / 2) + 1).slice(0, -1)\n    }\n\n    quarter_sphere_vertices(radius: number, samples: number, phi_offset: number, vertical_samples: number = samples): math.MathArray {\n        let phis: number[] = linspace(0, Math.PI / 2, Math.floor(vertical_samples / 2) - phi_offset)\n        return this.spherical_vertices(radius, this.quarter_thetas(samples), phis, samples)\n    }\n\n    build_halves(vertices: number[][][]): math.MathType {\n        return math.concat(vertices, this.bottom_half(vertices), 0)\n    }\n\n    bottom_half(vertices: math.MathArray): math.MathArray {\n        //Initially I used .reverse which broke stuff as it's in-place\n        let rolled_vertices = []\n        let roll_offset = math.floor(vertices[0].length / 2)\n        for (let vertex_row of vertices) {\n            rolled_vertices.push(vertex_row.slice(roll_offset).concat(vertex_row.slice(0, roll_offset)))\n        }\n        return math.multiply(rolled_vertices.toReversed(), -1).slice(1)\n    }\n\n    half_sphere_vertices(radius: number, samples: number, vertical_samples: number = samples): math.MathType {\n        return this.build_quarters(this.quarter_sphere_vertices(radius, samples, 0, vertical_samples))\n    }\n\n    generate_vertices(): number[][][][] {\n        return [this.roll_vertices(this.build_halves(this.half_sphere_vertices(this.radius, this.samples, this.vertical_samples)))]\n    }\n\n    to_triangles(vertices: number[][][]) {\n        let positions: number[] = []\n        for (let row = 0; row < vertices.length; ++row) {\n            for (let row_column = 0; row_column < vertices[row].length; ++row_column) {\n                if (row > 0) {\n                    positions = positions.concat(vertices[row][row_column])\n                    positions = positions.concat(vertices[row][(row_column + 1) % vertices[row].length])\n                    positions = positions.concat(vertices[row - 1][(row_column) % vertices[row - 1].length])\n                }\n                //\n                if (row < vertices.length - 1) {\n                    positions = positions.concat(vertices[row][row_column])\n                    positions = positions.concat(vertices[row + 1][(row_column + 1) % vertices[row + 1].length])\n                    positions = positions.concat(vertices[row][(row_column + 1) % vertices[row].length])\n                }\n            }\n        }\n        return positions\n    }\n\n    geometry_from_vertices(vertices: number[][][], position_components: number): BufferGeometry {\n        let positions: number[] = this.to_triangles(vertices)\n        let geometry: BufferGeometry = new BufferGeometry();\n        geometry.setAttribute('position', new BufferAttribute(new Float32Array(positions), position_components));\n        geometry = BufferGeometryUtils.mergeVertices(geometry)\n        geometry.computeVertexNormals();\n        geometry.normalizeNormals();\n        return geometry\n    }\n\n    genGeometriesBase(position_components: number): BufferGeometry {\n        let sub_geometries = this.generate_vertices().map(sub_vertices => this.geometry_from_vertices(sub_vertices, position_components))\n        return BufferGeometryUtils.mergeBufferGeometries(sub_geometries)\n    }\n\n    genGeometries(): void {\n        const positionNumComponents: number = 3;\n        this.stripGeometry = this.genGeometriesBase(positionNumComponents)\n    }\n}\n\nexport class Spheroplatelet extends Sphere {\n    circle_radius: number\n\n    constructor(radius: number, circle_radius: number) {\n        super(radius);\n        this.circle_radius = circle_radius\n    }\n\n    generate_vertices(): math.MathType {\n        let vertices = super.generate_vertices()[0]\n        let row_count = math.size(vertices)[0]\n        let column_count = math.size(vertices)[1]\n        let top = [vertices[0].map(column => column.map(vertex => vertex))]\n        let bottom = [vertices[row_count - 1].map(column => column.map(vertex => vertex))]\n        let circle_angles = linspace(0, 2 * Math.PI, column_count + 1).slice(0, -1)\n        for (let row = 0; row < row_count; ++row) {\n            for (let column = 0; column < column_count; ++column) {\n                let radius_vector = vertices[row][column].slice(0, 2)\n                let norm = math.norm(radius_vector)\n                if (row == 0 || row == row_count - 1) {\n                    let face_circle_angles = circle_angles\n                    if (row == row_count - 1) {\n                        let offset = math.floor(row / 2) + 2\n                        face_circle_angles = circle_angles.slice(offset).concat(circle_angles.slice(0, offset))\n                    }\n                    let x = face_circle_angles[column]\n                    radius_vector = [math.cos(x), math.sin(x)]\n                    norm = 1\n                }\n                let normalised_radius_vector = math.multiply(this.circle_radius, math.divide(radius_vector, norm))\n                vertices[row][column][0] += normalised_radius_vector[0]\n                vertices[row][column][1] += normalised_radius_vector[1]\n            }\n        }\n        return [top.concat(vertices.slice(0, 1)), vertices, vertices.slice(-1).concat(bottom)]\n    }\n}\n\n//Ellipsoid mesh generator\nexport class Ellipsoid extends Sphere {\n    //Scale factor in [x, y, z] directions\n    scale: number[];\n\n    constructor(x: number, y: number, z: number) {\n        //Derive from origin centred sphere of radius 1\n        super(1);\n        this.scale = [x, y, z];\n    }\n\n    //Samples from ellipsoid instead of sphere\n    sample_sphere(radius: number, theta: number, phi: number): number[] {\n        //Multiply origin centred sphere coordinates by scale vector\n        return math.dotMultiply(super.sample_sphere(radius, theta, phi), this.scale);\n    }\n}\n\nexport class CapCutSphereBase extends Sphere {\n    cut_radius: number\n\n    constructor(radius: number, cut_radius: number, vertical_sample_scale: number = 1, z_cut: boolean = true) {\n        super(radius, vertical_sample_scale);\n        this.cut_radius = z_cut ? math.sqrt(math.square(radius) - math.square(cut_radius)) : cut_radius\n    }\n\n    base(phis: number[], flat_top: boolean) {\n        let vertices = this.roll_vertices(this.build_quarters(this.spherical_vertices(this.radius, this.quarter_thetas(this.samples), phis, this.samples)))\n        let end_source_index = flat_top ? 0 : vertices.length - 1\n        let xs = vertices[end_source_index].map(vertex => vertex[0])\n        let ys = vertices[end_source_index].map(vertex => vertex[1])\n        let zs = vertices[end_source_index].map(vertex => vertex[2])\n        let end = [new Array(math.size(vertices)[1]).fill([math.mean(xs), math.mean(ys), math.mean(zs)])]\n        return [vertices, flat_top ? end.concat(vertices.slice(0, 1)) : vertices.slice(-1).concat(end)]\n    }\n}\n\nexport class CutSphere extends CapCutSphereBase {\n    generate_vertices() {\n        let phis = linspace(math.asin(this.cut_radius / this.radius), Math.PI, this.vertical_samples - 1)\n        return super.base(phis, true)\n    }\n}\n\nexport class DoubleCutSphere extends CapCutSphereBase {\n    generate_vertices() {\n        let angle_cut = math.asin(this.cut_radius / this.radius)\n        let phis = linspace(angle_cut, Math.PI - angle_cut, this.vertical_samples - 2)\n        let partial_vertices = super.base(phis, true)\n        let index = partial_vertices[0].length - 1\n        let xs = partial_vertices[0][index].map(vertex => vertex[0])\n        let ys = partial_vertices[0][index].map(vertex => vertex[1])\n        let zs = partial_vertices[0][index].map(vertex => vertex[2])\n        let end = [new Array(math.size(partial_vertices[0])[1]).fill([math.mean(xs), math.mean(ys), math.mean(zs)])]\n        partial_vertices.push(end.concat([partial_vertices[0][index].toReversed()]))\n        return partial_vertices\n    }\n}\n\nexport class Cap extends CapCutSphereBase {\n    generate_vertices() {\n        let phis = linspace(0, math.asin(this.cut_radius / this.radius), this.vertical_samples - 1)\n        return super.base(phis, false)\n    }\n}\n\nexport class BaseLens extends Sphere {\n    radius_2: number\n    angle: number\n    cut_radius: number\n\n    constructor(radius: number, radius_2: number, angle: number) {\n        super(radius);\n        this.radius_2 = radius_2\n        this.angle = Math.PI - angle\n        this.cut_radius = this.radius * Math.sin(this.angle)\n    }\n\n    generate_vertices(): math.MathType {\n        if (this.angle == 0) {\n            return super.generate_vertices()\n        }\n        let cut_radius = this.cut_radius\n        let top_proportion = 0.5\n        let bottom_proportion = 0.5\n        let top_shape = new Cap(this.radius_2, cut_radius, top_proportion, false)\n        let bottom_cap = this.angle > Math.PI / 2\n        let bottom_shape = bottom_cap ? new Cap(this.radius, cut_radius, bottom_proportion, false) : new CutSphere(this.radius, cut_radius, bottom_proportion, false)\n        top_shape.set_lod(this.LOD)\n        bottom_shape.set_lod(this.LOD)\n        let top = math.multiply(top_shape.generate_vertices()[0], -1)\n        let bottom = bottom_shape.generate_vertices()[0]\n        if (bottom_cap) {\n            bottom.reverse()\n            for (let row = 0; row < math.size(bottom)[0]; ++row) {\n                bottom[row].reverse()\n                for (let column = 0; column < math.size(bottom)[1]; ++column) {\n                    bottom[row][column][1] *= -1\n                    bottom[row][column][2] *= -1\n                }\n            }\n        }\n        let pole_offset = bottom[bottom.length - 1][0][2]\n        bottom = this.reverse_vertices(bottom.map(row => row.map(vertex => math.multiply(math.subtract(vertex, [0, 0, pole_offset]), -1))).reverse())\n        let distance = bottom[bottom.length - 1][0][2] + top[top.length - 1][0][2]\n        top = this.reverse_vertices(top.map(row => row.map(vertex => math.add(math.multiply(vertex, -1), [0, 0, distance]))).reverse())\n        return [top, bottom]\n    }\n}\n\nexport class ThickLens extends BaseLens {\n    constructor(radius: number, thickness: number, angle: number) {\n        // let cos_theta_old = Math.cos(Math.PI - angle)\n        // let radius_2_old = (2 * radius ** 2 * cos_theta_old + 2 * radius ** 2 - 2 * radius * thickness * cos_theta_old - 2 * radius * thickness + thickness ** 2) / (2 * (radius * cos_theta_old + radius - thickness))\n        let cos_theta = Math.cos(angle)\n        let radius_2 = (2 * radius ** 2 * (1 - cos_theta) + 2 * thickness * radius * (cos_theta - 1) + thickness ** 2) / (2 * (radius * (1 - cos_theta) - thickness))\n        super(radius, radius_2, angle);\n    }\n}\n\nexport class Lens extends BaseLens {\n    constructor(radius: number, angle: number) {\n        super(radius, radius, angle);\n    }\n}\n\nexport class RadiusOnlyLens extends BaseLens {\n    constructor(radius: number) {\n        let angle = Math.acos(1 - 1 / (2 * Math.PI * radius ** 2));\n        super(radius / 2, radius / 2, angle);\n    }\n}\n\nexport class BiconvexLens extends BaseLens {\n    constructor(radius: number, angle: number, separation: number) {\n        super(radius, -radius, angle);\n        this.separation = separation;\n    }\n\n    new_row(top: number[][], radius: number) {\n        let offset = Math.acos(top[0][0] / radius)\n        return linspace(0 + offset, Math.PI * 2 + offset, top.length + 1).slice(0, -1).map(angle => this.sample_sphere(radius, angle, Math.PI / 2))\n    }\n\n    generate_vertices(): math.MathType {\n        let shape_halves = super.generate_vertices();\n        let offset = -(shape_halves[0][shape_halves[0].length - 1][0][2] + shape_halves[1][0][0][2]) / 2;\n        shape_halves = shape_halves.map(part => part.map(row => row.map(item => math.add(item, [0, 0, offset]))));\n        shape_halves[0] = shape_halves[0].map(row => row.map(item => math.subtract(item, [0, 0, this.separation / 2])));\n        shape_halves[1] = shape_halves[1].map(row => row.map(item => math.add(item, [0, 0, this.separation / 2])));\n        if (this.separation == 0) {\n            return shape_halves;\n        }\n        let top = shape_halves[1]\n        let bottom = shape_halves[0]\n        let new_row = this.new_row(top[top.length - 1], this.cut_radius)\n        let bottom_offsets = bottom[0].map(vertex => math.norm(math.subtract(vertex, top[top.length - 1][0])))\n        let bottom_roll = -bottom_offsets.indexOf(Math.min.apply(Math, bottom_offsets))\n        bottom = bottom.map(row => this.roll_row(row, bottom_roll))\n        top.push(new_row)\n        top = top.concat(bottom)\n        return [top];\n    }\n}\n\n//Spherocylinder mesh generator\nexport class Spherocylinder extends BiconvexLens {\n    constructor(radius: number, length: number) {\n        super(radius, Math.PI / 2, length);\n    }\n}","import {Alert} from 'rsuite';\nimport {AmbientLight, DirectionalLight, DirectionalLightHelper, Light, PointLight, PointLightHelper} from 'three';\n\nenum LightTypes {\n    AMBIENT = 0,\n    DIRECTIONAL,\n    POINT\n}\n\nexport class LightNew {\n    static light_types = LightTypes;\n    light: Light;\n    helper: DirectionalLightHelper | PointLightHelper | undefined;\n\n    constructor(lightType: LightTypes) {\n        this.light = this.setLight(lightType);\n        this.helper = this.setHelper();\n    }\n\n    setLight(lightType: LightTypes) {\n        let light;\n        switch (lightType) {\n            case LightTypes.AMBIENT:\n                light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case LightTypes.DIRECTIONAL:\n                light = new DirectionalLight(\"#ffffff\", 0.5);\n                light.position.set(-5, 0, -5);\n                break;\n            case LightTypes.POINT:\n                light = new PointLight(\"#ffffff\", 0.6);\n                light.position.set(5, 0, 5);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                throw RangeError;\n        }\n        return light\n    }\n\n    setHelper() {\n        let helper;\n        if (this.light instanceof DirectionalLight) {\n            helper = new DirectionalLightHelper(this.light, 10);\n        }\n        if (this.light instanceof PointLight) {\n            helper = new PointLightHelper(this.light, 10);\n        }\n        return helper;\n    }\n\n    updatePosition(x: number, y: number, z: number) {\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c: string, i: number) {\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n}\n\nexport default LightNew;","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'], vals: [1.0, 1.0, 0.2]\n    }, Spherocylinder: {\n        names: ['Radius', 'Length'], vals: [0.5, 0.7]\n    }, Spheroplatelet: {\n        names: ['RadSphere', 'RadCircle'], vals: [0.3, 0.2]\n    }, CutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n    }, Sphere: {\n        names: ['Radius'], vals: [0.6]\n    }, Cap: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n    }, Lens: {\n        names: ['Radius', 'Angle'], vals: [1, 0.7]\n    }, ThickLens: {\n        names: ['Radius', 'Thickness', 'Angle'], vals: [1, 0, 0.7]\n    }, RadiusOnlyLens: {\n        names: ['Radius'], vals: [0.5]\n    }, BiconvexLens: {\n        names: ['Radius', 'Angle', \"Separation\"], vals: [1, 0.7, 0]\n    }, DoubleCutSphere: {\n        names: ['Radius', 'zCut'], vals: [0.8, 0.7]\n\n    }\n}\n\nexport default Parameters;","import * as THREE from 'three';\nimport {Color, Euler, LOD, MeshPhongMaterial, Quaternion, Vector3} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes';\nimport {Shape} from './Shapes';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport {Alert} from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    unitBox;\n    variable_lod=false;\n\n\n    positions = [];\n    Folded_position = []\n    orientations = [];\n    elements = [];\n    meshes = [];\n// materials =[];\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n        quaternion;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n            this.quaternion = q\n        }\n\n        quaternionToUnitVector(q) {\n            let a = (2 * (q.w * q.y + q.x * q.z));\n            let b = (2 * (-q.w * q.x + q.y * q.z));\n            let c = (1 - 2 * (q.x ** 2 + q.y ** 2));\n            return [a, b, c];\n        }\n\n        setColourIndex(i) {\n            this.colourIndex = i;\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name === null) {\n            this.name = this.shapeType;\n        }\n        this.genSet();\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cap':\n                parameters = Parameters.Cap;\n                break;\n            case 'Lens':\n                parameters = Parameters.ThickLens;\n                break;\n            case 'Cinacchi Lens':\n                parameters = Parameters.RadiusOnlyLens;\n                break;\n            case 'Biconvex Lens':\n                parameters = Parameters.BiconvexLens;\n                break;\n            case 'Double Cut Sphere':\n                parameters = Parameters.DoubleCutSphere;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    isFoldedTest() {\n        let x = this.unitBox[0] / 2;\n        let y = this.unitBox[1] / 2;\n        let z = this.unitBox[2] / 2;\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if (a >= x || a <= -x) {\n                return false\n            }\n            if (b >= y || b <= -y) {\n                return false\n            }\n            if (c >= z || c <= -z) {\n                return false\n            }\n\n        }\n        return true;\n    }\n\n    genSet() {\n        this.validateData();\n        this.genElements();\n        this.genMeshes();\n        // this.genListBoundingBox();\n    }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw new Error('Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length);\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw new Error('Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.');\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length !== defaultParameters.vals.length) {\n            throw new Error('Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.renderBackFace = false;\n        this.lod = Shape.default_lod;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    genUnitBox() {\n        // This is the user input unit box of whole\n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition() {\n        // Place holder function to generate Psedo unfolded configuration\n        if (this.isFoldedTest() === false) {\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos = [];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rnd1 = (Math.random() * (2) - 1)\n            let rnd2 = (Math.random() * (2) - 1)\n            let rnd3 = (Math.random() * (2) - 1)\n            pos.push([this.positions[i][0] + rnd1 * x, this.positions[i][1] + rnd2 * y, this.positions[i][2] + rnd3 * z])\n        }\n        this.positions = pos;\n\n    }\n\n    genFoldedPositionFromUnfold() {\n        if (this.isFoldedTest() === true) {\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos = [];\n        let lx = this.unitBox[0];\n        let ly = this.unitBox[1];\n        let lz = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++) {\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n\n            rx = rx - lx * Math.round(rx / lx);\n            ry = ry - ly * Math.round(ry / ly);\n            rz = rz - lz * Math.round(rz / lz);\n\n            pos.push([rx, ry, rz])\n        }\n        this.Folded_position = pos;\n\n    }\n\n    setBackFace(bool) {\n        this.renderBackFace = bool;\n    }\n\n    genMeshes() {\n        let num = this.elements.length;\n\n        let c = '#FFFFFF'\n        let geometry_distances = this.variable_lod?[0, 0.01, 0.05, 0.1, 0.4, 0.5, 0.6, 0.7, 0.9]:[0]\n        let geometries = geometry_distances.map((distance, distance_index) => this.new_gen_geometries(Math.max(0, this.lod - distance_index)))\n        for (let i = 0; i < num; i++) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[this.elements[i].colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n            let mat = new MeshPhongMaterial({\n                side: this.renderBackFace ? THREE.DoubleSide : THREE.FrontSide,\n                clipShadows: true,\n                clippingPlanes: this.clippingPlanes,\n                wireframe: this.wireframe,\n                color: c,\n            });\n            let matrix2 = new THREE.Matrix4();\n            const position = new THREE.Vector3();\n            position.x = this.elements[i].position[0];\n            position.y = this.elements[i].position[1];\n            position.z = this.elements[i].position[2];\n            let ori = this.elements[i].quaternion\n            matrix2.compose(position, ori, new THREE.Vector3(0.5, 0.5, 0.5));\n            let meshes = geometries.map(geometry => new THREE.Mesh(geometry, mat))\n            let lod_mesh = new LOD()\n            for (let i = 0; i < meshes.length; ++i) {\n                lod_mesh.addLevel(meshes[i], geometry_distances[i])\n            }\n            lod_mesh.applyMatrix4(matrix2)\n            this.meshes.push(lod_mesh);\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length > 0) {\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for (let elem of this.elements) {\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    new_gen_geometries(lod) {\n        let shape\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                shape = new SHAPE.Sphere(...this.parameters);\n                break;\n            case 'Cap':\n                shape = new SHAPE.Cap(...this.parameters);\n                break;\n            case 'Lens':\n                shape = new SHAPE.ThickLens(...this.parameters);\n                break;\n            case 'Cinacchi Lens':\n                shape = new SHAPE.RadiusOnlyLens(...this.parameters);\n                break;\n            case 'Biconvex Lens':\n                shape = new SHAPE.BiconvexLens(...this.parameters);\n                break;\n            case 'Double Cut Sphere':\n                shape = new SHAPE.DoubleCutSphere(...this.parameters);\n                break;\n            default:\n                throw new Error('Error: unexpected shape identifier. \\n Found: ' + this.shapeType);\n        }\n        shape.LOD = lod\n        shape.generate();\n        return shape.stripGeometry\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2 * pos[0], 2 * pos[1], 2 * pos[2]);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw new Error('Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e');\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length === 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0] ** 2;\n            orderTensor[0][1] += orientation[0] * orientation[1];\n            orderTensor[0][2] += orientation[0] * orientation[2];\n            orderTensor[1][1] += orientation[1] ** 2;\n            orderTensor[1][2] += orientation[1] * orientation[2];\n            orderTensor[2][2] += orientation[2] ** 2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor;\n        orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor;\n        orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor;\n        orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n\n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0] ** 2 + this.director[1] ** 2 + this.director[2] ** 2);\n\n        if (norm === 0 || norm === isNaN || norm === undefined) {\n            this.director = [0, 0, 1];\n        } else {\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element) {\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0] + element.orientation[1] * this.director[1] + element.orientation[2] * this.director[2]);\n        if (this.orientationType === 'v') {\n            scalarProduct = Math.abs(element.orientation[1] * this.director[0] + element.orientation[0] * this.director[1] + element.orientation[2] * this.director[2]);\n        }\n        if (scalarProduct > 1) {\n            scalarProduct = 1;\n        }\n\n        return Math.round(Math.acos(scalarProduct) / Math.PI * 2 * (n));\n\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n}\n\nexport default Set;","import {Box3, Box3Helper, BufferGeometry, Color, GridHelper, Line, LineBasicMaterial, Vector3} from 'three';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;\n    G;\n    B;\n    director_colour;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes(undefined);\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n        this.director_colour = new Color(\"rgb(255, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b = null;\n        this.boundingShape = null;\n\n        for (let set of sets) {\n            if (b != null) {\n                break\n            }\n            b = set.genUnitBox()\n\n        }\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                box.setFromCenterAndSize(new Vector3(0, 0, 0), new Vector3(b[0], b[1], b[2]));\n                this.boundingShape = new Box3Helper(box, this.colour);\n\n                break;\n            default:\n                Alert.error('Error: Unknown bounding shape identifier');\n\n\n        }\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour, director) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour, linewidth: 5\n        });\n        if (!this.multicolour) {\n            this.genAxes(director);\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes(director) {\n        console.log(\"director\", director)\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let origin = new Vector3(0, 0, 0);\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, axesSize, 0)]), this.material));\n        let director_vector = new Vector3(director[0], director[1], -director[2]);\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, director_vector.clone().multiplyScalar(axesSize)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(director) {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let origin = new Vector3(0, 0, 0);\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B, linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, new Vector3(0, 0, axesSize)]), mat3));\n        if (typeof director !== typeof undefined) {\n            let director_vector = new Vector3(director[0], director[1], -director[2]);\n            let mat4 = this.material = new LineBasicMaterial({color: this.director_colour, linewidth: 5});\n            this.axes.push(new Line(new BufferGeometry().setFromPoints([origin, director_vector.clone().multiplyScalar(axesSize)]), mat4));\n        }\n    }\n\n    toggleMulticolour(director) {\n        this.multicolour = !this.multicolour;\n        if (this.multicolour) {\n            this.genMulticolourAxes(director);\n        } else {\n            this.updateColour(this.colour, director);\n            this.genAxes(director);\n        }\n    }\n\n\n}\n\nexport default ReferenceTools;","import {\n    BufferGeometry,\n    Color,\n    Euler,\n    InstancedMesh,\n    Line,\n    LineBasicMaterial,\n    Matrix4,\n    MeshPhongMaterial,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    Plane,\n    PlaneHelper,\n    Quaternion,\n    Scene,\n    Vector3,\n    WebGLRenderer\n} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport Set from './Set'\nimport LightNew from './Light'\nimport ReferenceTools from './ReferenceTools'\nimport {Alert} from 'rsuite'\nimport * as SHAPE from './Shapes';\n\n\nexport class Model extends Scene {\n    sets: Set[] = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n    axesEnabled = false;\n\n\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n    clippingPlanes;\n    clippingHelpers;\n    numOfObject;\n    axes: Line[] = [];\n    axes_enabled: boolean = false;\n    colour_axes: boolean = true;\n    lod: number = SHAPE.Shape.default_lod;\n    repeats_x: number = 0;\n    repeats_y: number = 0;\n    repeats_z: number = 0;\n    molecules: Object3D[] = [];\n    variable_lod: boolean = false;\n\n    constructor(chronometer, notify) {\n        super();\n        this.scene = this;\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n\n    }\n\n    onBeforeRender = () => {\n        this.set_axes();\n    };\n\n    /* GENERAL FUNCTIONS */\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            let hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    setDefault() {\n\n        this.renderer = new WebGLRenderer({\n            antialias: false, powerPreference: \"high-performance\", preserveDrawingBuffer: true\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.rotating = false;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.Video_sample_list = [];\n        this.initClippers();\n        this.lookAt = new Vector3(0, 0, 0);\n        this.updateDimensions();\n        this.setCamera(this.cameraType, true);\n        this.lighting = [new LightNew(LightNew.light_types.AMBIENT), new LightNew(LightNew.light_types.DIRECTIONAL), new LightNew(LightNew.light_types.POINT)];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = SHAPE.Shape.default_lod;\n    }\n\n    set_variable_lod(status: boolean) {\n        this.variable_lod = status;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, this.variable_lod], (i, status) => {\n                this.sets[i].variable_lod = status;\n                this.sets[i].meshes = [];\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    set_axes(enabled: boolean = this.axes_enabled, scale: number = 200, camera: PerspectiveCamera | OrthographicCamera = this.camera, sets: Set[] = this.sets, axes_origin: Vector3 = new Vector3(450, -250, 0), scene: Scene = this.scene, colour_axes: boolean = this.colour_axes): void {\n        console.assert(scale > 0)\n        console.log(camera.zoom)\n        //Remove existing lines from scene\n        if (typeof this.axes !== typeof undefined) {\n            for (let axis of this.axes) {\n                scene.remove(axis);\n            }\n        }\n        if (!enabled) {\n            return;\n        }\n        scale /= camera.zoom;\n        axes_origin.divideScalar(camera.zoom);\n        //Construct line parameters\n        let world_axes_origin: Vector3 = camera.localToWorld(axes_origin);\n        let axis_line_ends: Vector3[] = [new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1)];\n        let director_line_ends: Vector3[] = sets.map(set => set.director).map(director => new Vector3(director[0], director[1], -director[2]));\n        let line_ends: Vector3[] = axis_line_ends.concat(director_line_ends);\n        //Build line materials\n        let line_materials: LineBasicMaterial[] = line_ends.map(line_end => new LineBasicMaterial({color: this.colour_from_director(line_end, colour_axes)}));\n        //Build line geometries\n        let line_geometries: BufferGeometry[] = line_ends.map(line_end => new BufferGeometry().setFromPoints([world_axes_origin, world_axes_origin.clone().add(line_end.multiplyScalar(scale))]));\n        //Build line objects\n        let axes: Line[] = line_geometries.map((line_geometry, i) => new Line(line_geometry, line_materials[i]));\n        //Add lines to scene\n        for (let axis of axes) {\n            scene.add(axis);\n        }\n        //Store lines\n        this.axes = axes;\n    }\n\n    colour_from_director(vector: Vector3, enable_colour: boolean = true, palette_start: number = 4 * Math.PI / 3, palette_range: number = -2 / 3, sets: Set[] = this.sets): Color {\n        console.assert(0 <= palette_start && palette_start < 2 * Math.PI);\n        console.assert(-1 <= palette_range && palette_range <= 1);\n        console.assert(sets.length > 0);\n        let hue: number = 0;\n        let lightness: number = 1;\n        //Update hue if director present\n        if (enable_colour && sets.length > 0) {\n            //TODO handle multiple directors and director should be stored as vec3 in first place\n            let director: number[] = sets[0].director;\n            let director_vector: Vector3 = new Vector3(director[0], director[1], -director[2]);\n            //Set hue based on angle between director and vector\n            //TODO properly check rather than min\n            let angle: number = Math.acos(Math.min(director_vector.dot(vector.normalize()), 1));\n            console.assert(0 <= angle && angle <= Math.PI);\n            if (angle > Math.PI / 2) {\n                angle = Math.PI - angle;\n            }\n            console.assert(0 <= angle && angle <= Math.PI / 2);\n            hue = (palette_start + (angle * 4) * palette_range) % (2 * Math.PI) / (2 * Math.PI);\n            lightness = 0.5;\n        }\n        console.assert(0 <= hue && hue <= 1);\n        console.assert(0 <= lightness && lightness <= 1);\n        return new Color().setHSL(hue, 1, lightness);\n    }\n\n    update() {\n        console.log('update called');\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n\n    }\n\n    // occlusionCulling(){\n\n    // const renderer = new WebGLRenderer();\n    // const gl = renderer.getContext();\n    // console.log(gl)\n    // const scene = new Scene();\n    // const mesh1 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // const mesh2 = new Mesh(new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( {color: 0x00ff00}));\n    // scene.add(mesh1, mesh2);\n    // var query = gl.createQuery();\n    // const camera = this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n\n    // camera.position.z = 5;\n    // for (let l of this.lighting) {\n    //     scene.add(l.light);}\n    // gl.beginQuery(gl.ANY_SAMPLES_PASSED,query);\n    // renderer.render(scene, camera);\n    // gl.endQuery(gl.ANY_SAMPLES_PASSED,query);\n    // var result = gl.getQueryParameter(query,gl.QUERY_RESULT);\n    // console.log(Number(result));\n    // console.log(result)\n\n    getRender_Object_number() {\n        let num = 0;\n        this.scene.traverse(function (child) {\n            //@ts-ignore\n            if (child.isMesh) {\n                num = num + 1;\n            }\n\n        });\n\n        this.numOfObject = (num - 6);\n        console.log(this.numOfObject)\n    }\n\n    getData() {\n        // To save config to download\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n        console.log(this.sidebarExpanded)\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    update_repeats(x: number = this.repeats_x, y: number = this.repeats_y, z: number = this.repeats_z) {\n        this.repeats_x = x\n        this.repeats_y = y\n        this.repeats_z = z\n        while (true) {\n            let molecule = this.molecules.pop();\n            if (molecule == undefined) {\n                break;\n            }\n            this.scene.remove(molecule);\n        }\n        this.sets.forEach(set => {\n            set.meshes.forEach(mesh => {\n                for (let x = -this.repeats_x; x < this.repeats_x + 1; ++x) {\n                    for (let y = -this.repeats_y; y < this.repeats_y + 1; ++y) {\n                        for (let z = -this.repeats_z; z < this.repeats_z + 1; ++z) {\n                            if (x == 0 && y == 0 && z == 0) {\n                                continue;\n                            }\n                            let new_mesh: Object3D = mesh.clone();\n                            new_mesh.position.x += set.unitBox[0] * x;\n                            new_mesh.position.y += set.unitBox[1] * y;\n                            new_mesh.position.z += set.unitBox[2] * z;\n                            this.molecules.push(new_mesh);\n                            this.scene.add(new_mesh);\n                        }\n                    }\n                }\n            })\n        });\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n            // m.geometry.dispose();\n            // m.material.dispose();\n            // m.dispose();\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n        this.update_repeats();\n        // let mesh = this.occlusionCulling();\n        // this.scene.add(mesh);\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                // m.geometry.dispose();\n                // m.material.dispose();\n                // m.dispose();\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n        this.getRender_Object_number();\n\n    }\n\n    /* LOD FUNCTIONS */\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n            console.log('sidebar')\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        console.log('set camera called')\n        if (this.camera) {\n            this.camera = '';\n        }\n        this.cameraType = type;\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        // this.update();\n\n\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / -2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / -2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = colour;\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type !== 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour === '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id, toggle) {\n        if (toggle === true) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].genMeshes();\n            });\n        } else if (toggle === false) {\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements = [];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position = [];\n                this.sets[id].genElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggle_axes_enabled() {\n        this.axes_enabled = !this.axes_enabled;\n        this.update();\n    }\n\n    toggle_axes_colour() {\n        this.colour_axes = !this.colour_axes;\n        this.update();\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour(this.sets[0].director);\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    /* SLICING FUNCTIONS */\n    enableClipping(toggle, id) {\n        if (toggle === true) {\n            this.renderer.localClippingEnabled = true;\n            for (let x = 0; x < this.sets.length; x++) {\n                this.updateSets(x, [x], (x) => {\n                    this.sets[x].elements = [];\n                    this.sets[x].meshes = [];\n                    this.sets[x].setBackFace(true);\n                    this.sets[x].genElements();\n                    this.sets[x].genMeshes();\n                });\n            }\n\n        } else {\n            this.renderer.localClippingEnabled = false;\n\n        }\n\n\n    }\n\n    // disableClipping(){\n    //     this.renderer.localClippingEnabled = false;\n    // }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n\n        this.clippingPlanes = [new Plane(new Vector3(1, 0, 0), 180), new Plane(new Vector3(-1, 0, 0), 180), new Plane(new Vector3(0, 1, 0), 180), new Plane(new Vector3(0, -1, 0), 180), new Plane(new Vector3(0, 0, 1), 180), new Plane(new Vector3(0, 0, -1), 180)];\n\n        this.clippingHelpers = [new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000), new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00), new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff), new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n\n    }\n\n\n    // }\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    /* Video SUITE */\n    uploadConfig() {\n        return new Promise(async (resolve, reject) => {\n            let fileHandle = [];\n            let lst = [];\n            try {\n                fileHandle = await window.showOpenFilePicker({multiple: true});\n                for (let i = 0; i < fileHandle.length; i++) {\n                    const file = await fileHandle[i].getFile();\n                    lst.push(file);\n                }\n                this.Video_sample_list = lst;\n                resolve(lst);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    notifyFinishUpload() {\n        this.notify('info', `Files loaded successfully`, (<div>\n            <p style={{width: 320}}>\n                Now Select Your Video Viewing configuration!\n                You can show unit box, apply slicing , periodic boundary conditions etc.\n                Please Do not change screen size while generating Video e.g dont click on size bar\n            </p>\n        </div>));\n    }\n\n\n    retrieveVideoSample() {\n        return this.Video_sample_list;\n    }\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic', false);\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, {x: 50, y: 0, z: 50});\n        this.deleteAllMeshes();\n        this.testMaterial = new MeshPhongMaterial({wireframe: false});\n        // this.testShape = new SHAPE.Preset('Sphere', ...Parameters.Sphere.vals);\n        this.testShape = new SHAPE.Spheroplatelet(0.3, 0.2);\n        console.log('this.genshape');\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 140001;\n\n        let geoms = [];\n        geoms.push(this.testShape.stripGeometry.clone());\n        this.testGeo = geoms;\n\n        this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n\n        this.notify('info', 'Initialising Performance Test', (<p style={{width: 320}}>\n            Test Size: {this.testLimit.toString()} <br/>\n            Step: {step.toString()} <br/>\n            Shape: Spheroplatelet(0.3,0.2) <br/>\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br/>\n            Material: MeshPhongMaterial\n            <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n        </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Spheroplatelet (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString())\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (const set of this.sets) {\n            console.log(set)\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n                // m.geometry.dispose();\n                // m.material.dispose();\n                // m.dispose();\n            }\n\n        }\n\n    }\n\n    addRandomParticles(n) {\n        this.deleteAllMeshes();\n        console.log('add called')\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n        // let m;\n        // for (let i = 0; i < n; i++) {\n        //     for (let g of this.testGeo) {\n        //          m = new Mesh(g, this.testMaterial);\n        //         this.scene.add(m);\n        //     }}\n\n        let InstancedMesh1 = new InstancedMesh(this.testGeo[0], this.testMaterial, n);\n        let InstancedMesh2 = new InstancedMesh(this.testGeo[1], this.testMaterial, n);\n        let InstancedMesh3 = new InstancedMesh(this.testGeo[2], this.testMaterial, n);\n        console.log(InstancedMesh1);\n        for (let i = 0; i < n; i++) {\n            console.log('called')\n            const matrix = new Matrix4();\n            const position = new Vector3();\n            const rotation = new Euler();\n            const quaternion = new Quaternion();\n            const scale = new Vector3();\n            const color = new Color();\n            position.x = Math.random() * 40 - 20;\n            position.y = Math.random() * 40 - 20;\n            position.z = Math.random() * 40 - 20;\n\n            rotation.x = Math.random() * 2 * Math.PI;\n            rotation.y = Math.random() * 2 * Math.PI;\n            rotation.z = Math.random() * 2 * Math.PI;\n\n            quaternion.setFromEuler(rotation);\n\n            scale.x = scale.y = scale.z = Math.random();\n\n            matrix.compose(position, quaternion, scale);\n            InstancedMesh1.setMatrixAt(i, matrix);\n            InstancedMesh2.setMatrixAt(i, matrix);\n            InstancedMesh3.setMatrixAt(i, matrix);\n            InstancedMesh1.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh2.setColorAt(i, color.setHex(0xffffff * Math.random()));\n            InstancedMesh3.setColorAt(i, color.setHex(0xffffff * Math.random()));\n        }\n        this.scene.add(InstancedMesh1, InstancedMesh2, InstancedMesh3);\n        this.update();\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\n\nexport default Model;\n","import {ButtonToolbar, Col, Dropdown, InputGroup, InputNumber, RangeSlider, Row, Slider} from 'rsuite';\nimport React, {useState} from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    let set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n        set.push(<ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i}\n                                 step={props.step} positive={props.positive} styling={props.styling}/>);\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive) {\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        let InputBox;\n        if (this.numerical) {\n            let defaultVal = this.values;\n            InputBox = (<div style={this.styling[0]}>\n                <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min}/>\n            </div>);\n        } else {\n            let vals = this.values;\n            let active = this.active;\n            let listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item key={val} eventKey={val} active={act}\n                                              onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item key={'panel'} eventKey={'panel'} panel style={{width: 150}}></Dropdown.Item>);\n\n            InputBox = (<ButtonToolbar style={{width: 10, marginLeft: 0}}>\n                <Dropdown style={{width: 100}} title={this.active}>\n                    {listItems}\n                </Dropdown>\n            </ButtonToolbar>);\n\n        }\n\n        return (<div>\n            <Row style={{marginTop: 15}}>\n                <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                <Col md={10}/>\n                <Col md={14}>{InputBox}</Col>\n            </Row>\n        </div>);\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (<div>\n        <br/>\n        <Row>\n            <Col md={5}>\n                <p style={{marginTop: 10, marginLeft: 30}}>{props.title}</p>\n            </Col>\n            <Col md={1}/>\n            <Col md={16}>\n                <InputGroup>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[0]}\n                        step={0.1}\n                        onChange={nextValue => {\n                            const end = value[1];\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            if (parseFloat(nextValue) > end) {\n                                return;\n                            }\n                            setValue([parseFloat(nextValue), end]);\n                            f(i, [parseFloat(nextValue), end]);\n                        }}\n                    />\n                    <InputGroup.Addon>to</InputGroup.Addon>\n                    <InputNumber\n                        min={-100.0}\n                        max={100.0}\n                        value={value[1]}\n                        step={0.1}\n                        onChange={(nextValue) => {\n                            if (!nextValue || isNaN(nextValue)) {\n                                nextValue = 0;\n                            }\n                            const start = value[0];\n                            if (start > parseFloat(nextValue)) {\n                                return;\n                            }\n                            setValue([start, parseFloat(nextValue)]);\n                            f(i, [start, parseFloat(nextValue)]);\n                        }}\n                    />\n                </InputGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col md={21}>\n                <RangeSlider\n                    min={-100.0}\n                    max={100.0}\n                    progress\n                    style={{marginLeft: 35, marginTop: 30}}\n                    value={value}\n                    onChange={value => {\n                        setValue(value);\n                        f(i, value);\n                    }}\n                />\n            </Col>\n\n        </Row>\n    </div>);\n}\n\nexport const CustomSlider = (props) => {\n    let f = props.f;\n    let [value, setValue] = useState(props.val);\n    let type;\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{marginLeft: 25, marginTop: 16, width: 170}}\n                    value={parseInt(value)}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{marginLeft: 80, marginTop: 3, marginBottom: 3, width: 65, height: 35}}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        if (!value || isNaN(value)) {\n                            value = 0;\n                        }\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>);\n}","import {\n    Alert,\n    Button,\n    ButtonToolbar,\n    Checkbox,\n    ControlLabel,\n    Drawer,\n    Dropdown,\n    Form,\n    FormGroup,\n    Header,\n    Icon,\n    Nav,\n    Navbar,\n    Slider,\n    Tooltip,\n    Whisper\n} from 'rsuite';\nimport {ParameterSet} from './Tools';\nimport React from \"react\";\nimport {Shape} from \"../Model/Shapes\";\n\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.resolution = [10];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    setResolution(val) {\n        this.resolution[0] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (<Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\"/>}>\n\n            <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n            <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={1} positive\n                          styling={[{marginRight: 25}, {marginTop: 18, marginLeft: 35}]}/>\n\n            <Button style={{width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15}}\n                    appearance='primary' onClick={this.export}> Export </Button>\n        </Dropdown>);\n    }\n\n}\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {active: 2};\n        this.f = props.f;\n        this.toggler = props.toggler;\n    }\n\n    render() {\n        return (<Dropdown\n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\"/>}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n            }}>\n\n            <Dropdown.Menu title=\"Samples\">\n                <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Spherocylinders\">\n                <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Menu title=\"Dense Packings\">\n                <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n            </Dropdown.Menu>\n            <Dropdown.Item panel style={{width: 120}}></Dropdown.Item>\n        </Dropdown>);\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {val: props.model.lod + 1, variable_lod: props.model.variable_lod};\n        this.updateVal = this.updateVal.bind(this);\n        this.toggleVariableLod = this.toggleVariableLod.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    toggleVariableLod(){\n        this.model.set_variable_lod(!this.model.variable_lod);\n        this.setState({variable_lod: this.model.variable_lod})\n    }\n\n    render() {\n        const lod = this.state.val;\n        const variable_lod = this.state.variable_lod;\n        return (<Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\"/>}>\n            <Form style={{marginLeft: 20, marginTop: 20}} layout=\"inline\">\n                <FormGroup>\n                    <ControlLabel>Adjust LOD</ControlLabel>\n                    <Whisper placement=\"bottom\" trigger=\"hover\" speaker={<Tooltip>\n                        Decreasing LOD will increase rendering speed.\n                    </Tooltip>}>\n                        <Icon icon=\"question-circle\" size=\"lg\"/>\n                    </Whisper>\n                </FormGroup>\n            </Form>\n\n            <Slider\n                min={1}\n                step={1}\n                max={Shape.complexity_count}\n                value={lod}\n                graduated\n                progress\n                style={{width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20}}\n                onChange={(value) => {\n                    this.model.updateLOD(value - 1);\n                    this.updateVal(value);\n                    this.model.update();\n                }}\n\n            />\n            <Checkbox style={{marginLeft: 12}} checked={variable_lod}\n                      onClick={this.toggleVariableLod}> Variable LOD</Checkbox>\n            <br/>\n        </Dropdown>);\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = {fps: 0, showDrawer: false, rotating: false, numOfRender: this.model.numOfObject};\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2), numOfRender: this.model.numOfObject\n        });\n    }\n\n    render() {\n        const num = this.state.numOfRender;\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (<div>\n            <Header style={{height: 56}}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight>\n                            <ButtonToolbar>\n\n                                <Nav.Item active>fps: {fps}</Nav.Item>\n                                <Nav.Item active>Draw calls made: {num}</Nav.Item>\n                                <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\"\n                                          icon={<Icon icon=\"dashboard\"/>}>Run Performance Test</Nav.Item>\n\n                                <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\"\n                                          icon={<Icon icon=\"refresh\" spin={rotating}/>}>Autorotate</Nav.Item>\n\n\n                                <PerformanceDropdown model={this.model}/>\n                                <LibraryDropdown f={this.functions[3]}/>\n                                <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\"\n                                          icon={<Icon icon=\"info\"/>}>About</Nav.Item>\n                                <ExportDropdown f={this.functions[2]}/>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\"/>}\n                                          onSelect={this.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                       id=\"upload-btn\"\n                                       style={{display: 'none'}}\n                                       className='input-file'\n                                       accept='.json,.webmga'\n                                       onChange={e => this.functions[1](e.target.files[0])}/>\n                                <label htmlFor=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\"/>}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav>\n                            <h6 style={{padding: 20}}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n            <Drawer\n                size={'sm'}\n                placement={'right'}\n                show={showDrawer}\n                onHide={this.toggleDrawer}\n                backdrop={false}\n            >\n                <Drawer.Header>\n                    <Drawer.Title>About</Drawer.Title>\n                    <br/>\n                    <ButtonToolbar>\n                        <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"mortar-board\"/> Liquid Crystals\n                        </Button>\n                        <Button key=\"man\" color=\"cyan\"\n                                href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"info-circle\"/> User Manual\n                        </Button>\n                        <Button color=\"cyan\" href=\"dissertations/2021.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation 2021\n                        </Button>\n                        <Button color=\"cyan\" href=\"dissertations/2023.pdf\"\n                                target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Icon icon=\"book\"/> Dissertation 2023\n                        </Button>\n                        <Button color=\"cyan\" href=\"https://github.com/joe-down/WebMGA-3\" target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                            <Icon icon=\"github\"/> Github\n                        </Button>\n                    </ButtonToolbar>\n                    <br/>\n                    <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations\n                        included in the library.</i></p>\n\n                    <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a\n                        scientific publication, see 'User Manual'.</i></p>\n\n                </Drawer.Header>\n\n                <div style={{margin: 25}}>\n                    <h2>WebMGA </h2>\n                    <br/>\n                    WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc\n                    Computer Science at University College London, supervised by Guido Germano, Michael P. Allen,\n                    and Tobias Ritschel.\n                    <br/><br/>\n                    The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for\n                    coarse-grained molecular models that utilises prolated and elongated convex bodies as the\n                    elementary units of simulation.\n                    <br/><br/>\n                    Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack\n                    of available visualisation platforms suitable for this niche, WebMGA provides a unique,\n                    out-of-the-box solution for researchers and educators to generate, stylise, and interact with\n                    three-dimensional renders of molecular simulations.\n                    <br/><br/>\n                    WebMGA is written in Javascript, and implements the graphics library <a\n                    href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering\n                    images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\"\n                                      rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface\n                    that is intuitively compartmentalised and easy to learn.\n                    <br/><br/>\n                    WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\"\n                                                 rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based\n                    application written in C++ that filled this gap in molecular graphics in 2008.\n\n                </div>\n            </Drawer>\n        </div>);\n    }\n}\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon,Input } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport {View} from './View'\n\nimport ccapture from \"ccapture.js-npmfixed\";\nimport { Scrollbars } from 'rc-scrollbars';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n        this.model.deleteAllMeshes();\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = parseInt(val);\n                break;\n            case 'g':\n                colour.g =  parseInt(val);\n                break;\n            case 'b':\n                colour.b =  parseInt(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        const parameter = parseFloat(val);\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Sphere\", \"Ellipsoid\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Double Cut Sphere\", \"Cap\", \"Lens\", \"Cinacchi Lens\", \"Biconvex Lens\"];\n        const sets = this.state.sets;\n\n        return (\n            <Scrollbars  style={{height:800}}>\n            <div key={reset} >\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput key ={5}f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput key ={6}f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n            </Scrollbars>\n        );\n    }\n}\n\nexport class VideoOptions extends React.Component{\n    constructor(props){\n        super();\n        this.model = props.model;\n        this.state =View.state.reference;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.setfps = this.setfps.bind(this);\n        this.UploadFiles = this.UploadFiles.bind(this);\n        this.RealTimeVideo = this.RealTimeVideo.bind(this);\n        this.VideoToggle = this.VideoToggle.bind(this);\n        this.setVideoState = this.setVideoState.bind(this);\n        this.state.filename = 'WebMGA-Video.webm';\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n    setFileName (val){\n        this.setState({\n            filename:val\n        })\n    }\n    setfps(val){\n     this.setState({\n        fps:val\n     })\n     View.state.reference.fps = val;\n    }\n    UploadFiles(){\n        let toggle = ! this.state.uploaded;\n        this.setState({\n            uploaded: toggle\n        })\n        if (toggle === true){\n            async function runAfterUpload(model, functions) {\n                const lst = await model.uploadConfig();\n                functions[1](lst[0],true,0);\n            }\n            runAfterUpload(this.model,this.functions).then(()=>{\n                this.model.notifyFinishUpload();\n            })\n        }\n        else{\n            this.model.Video_sample_list =[];\n        }\n\n        View.state.reference.uploaded= !View.state.reference.uploaded;\n    }\n    setVideoState(){\n        var data = this.functions[5]();\n        this.state.vidstate  = data;\n        let toggle = ! this.state.loadVideoState\n        this.setState({\n            loadVideoState :toggle\n        })\n        View.state.reference.loadVideoState =!View.state.reference.loadVideoState;\n    }\n    VideoToggle(){\n        console.log(this.state.video);\n        let toggle = !this.state.video;\n        this.setState({\n            video:toggle\n        })\n        this.state.video = toggle;\n        console.log(toggle)\n        if(toggle ===true){\n            this.toggler.closeSidemenu();\n            const samples = this.model.retrieveVideoSample();\n            const max_iter = samples.length;\n            var capturer = new ccapture( { format: 'webm',framerate:this.state.fps,quality:100});\n            this.RealTimeVideo(0,samples,max_iter,capturer,this.state.vidstate ,this.state.filename);\n\n        }\n        View.state.reference.video = !View.state.reference.video\n    }\n\n    RealTimeVideo(i,samples,max_iter,capturer,vidState,filename){\n        if(i ===0){\n            capturer.start();\n            capturer.capture(this.model.renderer.domElement);\n        }\n        if(i<max_iter){\n            this.functions[1].bind(this)(samples[i],i,vidState);\n            capturer.capture( this.model.renderer.domElement )\n            console.log('running animation',i)\n            if(this.state.video === true ){\n                requestAnimationFrame( ()=> this.RealTimeVideo(i+1,samples,max_iter,capturer,vidState,filename));\n            };\n        }\n        if (i === max_iter){\n                capturer.stop();\n                capturer.save(function( blob ) {\n                    console.log(blob);\n                    var url = URL.createObjectURL(blob);\n                    var link = document.createElement('a');\n                    link.href = url;\n                    console.log(filename)\n                    link.download = filename + '.webm';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                });\n                View.state.reference.video =false;\n                View.state.reference.setVideoState = false;\n\n        }}\n\n\n    render(){\n        const video = this.state.video;\n        const upload = this.state.uploaded;\n        const setVideoState = this.state.loadVideoState;\n        const fps = this.state.fps;\n        return(\n            <div>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Load Configurations </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={upload} onClick={this.UploadFiles} > Load </Checkbox>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Set Frame Rate</b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider boundaries={[1,60]} val={fps} f={this.setfps}type={'fps'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enviroment set up  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.setVideoState} checked={setVideoState}>Apply </Checkbox>\n                        </Col>\n                        <Col xs={1}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    Modify enviromental set ups such as show unit box at other menus.\n                                    Toggle Apply to apply settings to Video.\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Create Video </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                        <p>Input File name:</p>\n                        <Input style={{ width:150,height:30,marginLeft: 20 }} placeholder=\"New_Video\"\n                            onChange={(filename) => this.setFileName(filename)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox onClick={this.VideoToggle} checked={video} disabled={!upload||!setVideoState}> Create </Checkbox>\n                        </Col>\n                   </Row>\n\n                </Grid>\n                <br />\n                <br />\n            </div>\n\n        )\n    }\n}\n\n\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n\n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(parseInt(val));\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val,false);\n        if (val === \"orthographic\") {\n            this.updateZoom(50);\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n        if (val != isNaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = parseInt(val);\n                    break;\n                case 'y':\n                    position.y = parseInt(val);\n                    break;\n                case 'z':\n                    position.z = parseInt(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (isNaN(val) ||!val) {\n            val =0\n        }\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(val);\n                break;\n            case 1:\n                lookAt.y = parseFloat(val);\n                break;\n            case 2:\n                lookAt.z = parseFloat(val);\n                break;\n            default:\n                Alert.error('Error: Unexpected Look At Input');\n                return;\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        this.toggleSlicer = this.toggleSlicer.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n        console.log(this.state,View.state.slicing);\n    }\n\n    toggleSlicer(){\n        let toggle = !this.state.slicing_enabled;\n        this.model.enableClipping(toggle,View.state.model.active);\n        this.setState({\n            slicing_enabled :toggle\n        })\n        View.state.slicing.slicing_enabled = toggle\n        console.log(this.state,View.state.slicing);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n\n        switch (i) {\n            case 0:\n                this.setState(\n                    {\n                        x:val\n                    }\n                );\n                View.state.slicing.x = val;\n                break;\n            case 1:\n                this.setState(\n                    {\n                        y:val\n                    }\n                );\n                View.state.slicing.ty = val;\n                break;\n            case 2:\n                this.setState(\n                    {\n                        z:val\n                    }\n                );\n                View.state.slicing.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        const slicing_enabled = this.state.slicing_enabled;\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Enable Slicing</b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={slicing_enabled}onClick={this.toggleSlicer}> enable </Checkbox>\n                        </Col>\n                    </Row>\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} disabled={!slicing_enabled}/>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n\n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg() {\n        console.log(this.state.darkBackGround)\n        let toggle = !this.state.darkBackGround;\n        this.setState({\n            darkBackGround:toggle\n        })\n        console.log(this.state.darkBackGround)\n        if (toggle === true){\n            this.model.updateBg(\"#000000\");\n        }\n        else{\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.update();\n        View.state.ambientLight.darkBackGround = !View.state.ambientLight.darkBackGround;\n\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.darkBackGround;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked ={backgroundColour} onClick={this.updateBg}> Dark Mode</Checkbox>\n                        </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n        this.state.model = View.state.model;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n        this.update_repeats = this.update_repeats.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n        this.toggle_axes_enabled = this.toggle_axes_enabled.bind(this)\n        this.toggle_axes_colour = this.toggle_axes_colour.bind(this)\n\n    }\n\n    toggleFold() {\n        let toggle = !this.state.model.configurations[this.state.model.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        console.log(this.state.model);\n        View.state.model.configurations[this.state.model.active].displayFoldState = toggle;\n        this.model.toggleFoldState(this.state.model.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n        View.state.reference.boundingShapeEnabled = ! View.state.reference.boundingShapeEnabled;\n    }\n\n    toggle_axes_enabled() {\n        this.model.toggle_axes_enabled();\n        this.setState({axesEnabled: !this.model.axes_enabled});\n    }\n\n    toggle_axes_colour() {\n        this.model.toggle_axes_colour();\n        this.setState({multicolour: !this.model.colour_axes});\n    }\n\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n\n    update_repeats(val, type) {\n        val = Math.abs(Math.round(val));\n        switch (type) {\n            case 0:\n                this.state.repeats.x = val;\n                break;\n            case 1:\n                this.state.repeats.y = val;\n                break;\n            case 2:\n                this.state.repeats.z = val;\n                break;\n            default:\n                throw new Error(\"Bad repeat type\")\n        }\n        console.log(\"bread\", this.state, View)\n        this.model.update_repeats(this.state.repeats.x, this.state.repeats.y, this.state.repeats.z);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.model.configurations[this.state.model.active];\n        const enabled = this.state.boundingShapeEnabled;\n        const showAxes = this.model.axes_enabled;\n        const multicolour = this.model.colour_axes;\n        return (\n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unit Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Repeats  </b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={[this.state.repeats.x, this.state.repeats.y, this.state.repeats.z]} f={this.update_repeats} step={1} styling={submenuParameterSetStyling} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{marginLeft: 12}} checked={showAxes}\n                                      onClick={this.toggle_axes_enabled}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{marginLeft: 12}} checked={multicolour}\n                                      onClick={this.toggle_axes_colour}> Multi-Colour</Checkbox>\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n","import {Alert, Container, Content, Icon, IconButton, Nav, Navbar, Sidebar} from 'rsuite';\nimport React, {Component} from \"react\";\nimport {\n    AdditionalLightOptions,\n    AmbientLightOptions,\n    CameraOptions,\n    ModelsOptions,\n    ReferenceOptions,\n    SlicingOptions,\n    VideoOptions\n} from './SubMenus'\n\n\nconst NavToggle = ({expand, onChange}) => {\n    return (<Navbar appearance=\"subtle\" className=\"nav-toggle\">\n        <Navbar.Body>\n            <Nav pullRight>\n                <IconButton\n                    circle\n                    style={{textAlign: 'center', margin: 10}}\n                    onClick={onChange}\n                    appearance=\"default\"\n                    icon={<Icon icon={expand ? 'angle-left' : 'angle-right'}/>}/>\n            </Nav>\n        </Navbar.Body>\n    </Navbar>);\n};\n\nconst navItemStyle = {margin: 6.5};\n\nlet sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({active, onSelect, ...props}) => {\n    return (<div>\n        <Nav {...props} activeKey={active} onSelect={onSelect}\n             style={{backgroundColor: '#101010', height: sidebarHeight}}>\n            <Nav.Item title=\"Models\" eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\"/>}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Slicing\" eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item title=\"Video Rendering\" eventKey=\"Video Rendering\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"film\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item title=\"Camera\" eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item title=\"Ambient\" eventKey=\"Ambient\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item title=\"Lighting\" eventKey=\"Lighting\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\"/>}/>\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item title=\"Reference\" eventKey=\"Reference\"\n                      icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\"/>}/>\n            {/* </Whisper> */}\n\n        </Nav>\n    </div>);\n};\n\nconst MenuContent = ({active, expand, onChange, model, toggler, functions}) => {\n\n    let menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange}/>);\n    } else {\n        menuContent.push(<div style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav>\n                        <h3 style={{marginTop: 15, marginLeft: 30}}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange}/>\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n        </div>);\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model}/>);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler}/>);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model}/>);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model}/>);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model}/>);\n                break;\n            case \"Video Rendering\":\n                menuContent.push(<VideoOptions key={active} model={model} functions={functions} toggler={toggler}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded, active: 'Models'\n        };\n        this.functions = props.functions;\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n\n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand) {\n                this.handleToggle();\n            }\n        }\n    }\n\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n\n    render() {\n        const {expand} = this.state;\n        const {active} = this.state;\n        return (<div>\n                <Sidebar\n                    style={{display: 'flex', flexDirection: 'column'}}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56}>\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect}/>\n                        </Sidebar>\n                        <Content>\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle}\n                                         model={this.model} toggler={this.toggler} functions={this.functions}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    static state;\n    header;\n    sidebar;\n    model;\n    expanded;\n    ModelDefaultState = {\n        active: 0, reset: 0, sets: [], configurations: [],\n    }\n    SlicingDefaultState = {\n        clipIntersection: false,\n        slicing_enabled: false,\n        helpers: [false, false, false],\n        x: [-80, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n    ConfigurationDefaultState = {\n        title: '', shape: 'Ellipsoid', parameters: {\n            names: ['X', 'Y', 'Z'], vals: [1, 1, 0.2]\n        }, colour: {\n            r: 255, g: 255, b: 255\n        }, colourFromDirector: true, displayAsWireframe: false\n    }\n    CameraDefaultState = {\n        type: 'orthographic', lookAt: {\n            x: 0, y: 0, z: 0\n        }, position: {\n            x: 0, y: 0, z: -15\n        }, zoom: 50\n    }\n    PointLightDefaultState = {\n        reset: 0, active: 'point', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 60\n        }, position: {\n            x: 5, y: 0, z: 5\n        }\n    }\n    DirectionalLightDefaultState = {\n        reset: 0, active: 'directional', enabled: true, helper: false, colour: {\n            r: 255, g: 255, b: 255, i: 50\n        }, position: {\n            x: -5, y: 0, z: -5\n        }\n\n    }\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        multicolour: true,\n        size: 50,\n        fps: 24,\n        uploaded: true,\n        video: false,\n        loadVideoState: false,\n        repeats: {x: 0, y: 0, z: 0}\n    }\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255, g: 255, b: 255, i: 40\n        }, darkBackGround: true\n    }\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler={toggler}/>;\n        this.sidebar =\n            <VisualisationMenu model={this.model} functions={io} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state, vid) {\n        View.state = state;\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        if (View.state.reference.repeats === undefined) {\n            View.state.reference.repeats = this.ReferenceDefaultState.repeats\n        }\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i, substate.displayFoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled)\n    }\n\n    loadState(state, vid) {\n        if (!vid) {\n            this.loadLightingAndCamera(state, vid);\n        }\n        this.loadReferenceAndSlicing(state);\n\n    }\n\n    loadReferenceAndSlicing(state) {\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.toggleFoldState(0, state.boundingShapeEnabled);\n        this.model.enableClipping(state.slicing.slicing_enabled);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n\n    }\n\n    loadLightingAndCamera(state, vid) {\n        console.log('called load light')\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n        if (state.ambientLight.darkBackGround) {\n            this.model.updateBg(\"#000000\");\n        }\n        if (!state.ambientLight.darkBackGround) {\n            this.model.updateBg('#FFFFFF');\n        }\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        if (!vid) {\n            this.model.setCamera(state.camera.type, false);\n            this.model.updateCameraPosition(state.camera.position);\n        }\n        this.model.updateLookAt(state.camera.lookAt);\n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultState(init, vid) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state, vid);\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {mean, std} from 'mathjs';\nimport unfolded_sample1 from './Samples/UnfoldedSC4.json';\nimport unfolded_sample2 from './Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\n\nimport {Alert, Notification} from 'rsuite'\n\n\nclass Controller {\n    model;\n    view;\n    io;\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => {\n        }\n        autorotate = () => {\n        }\n        updateCamera = () => {\n        }\n\n    }\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 5000;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter === this.tick) {\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)', (\n                    <p style={{width: 320}}>\n                        <b>FPS</b> <br/>\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br/>\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()}\n                        <br/>\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString() + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n                    this.externalToggle.autorotate();\n                    this.notify('success', 'Test Completed Succesfully', (<p style={{width: 320}}>\n                        All molecules deleted. Please see console output for a list of average FPS and standard\n                        deviations.\n                    </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime === null) {\n                this.prevTime = Date.now();\n            }\n\n            let time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n    constructor() {\n\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate, this.saveVideoState];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(({\n            top: 70, duration: 8000\n        }));\n\n    }\n\n    start = () => {\n        this.chronometer.model = this.model;\n        this.generate(sample2, true, false);\n        // this.model.occlusionCulling();\n        this.addListeners();\n        this.notify('info', `Welcome to WebMGA`, (<div>\n            <p style={{width: 320}}>\n                Check out the liquid crystal configurations in the Library, and head to the About section to\n                learn more!\n\n            </p>\n            <p style={{width: 320}}>\n                This application works best on the Chrome browser.\n            </p></div>));\n        // this.loadVideoSample();\n    }\n\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title, placement: 'bottomEnd', duration: 7000, description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        let file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename); else { // Others\n            let a = document.createElement(\"a\"), url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    saveVideoState = () => {\n        let data = {};\n        data.state = this.view.getData();\n        console.log('get state');\n        return JSON.stringify(data);\n\n    }\n\n    generate = (data, starting, vidstate) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            if (vidstate) {\n                this.view.setState((JSON.parse(vidstate)).state, true);\n            } else {\n                this.view.setDefaultState(starting, false);\n                Alert.info(\"Setting default viewing state.\");\n            }\n        } else {\n            this.view.setState(data.state, false);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n    }\n\n    load = (file, VIDEO, vidstate) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = () => {\n            let data;\n            if (file.type === \"application/json\") {\n                data = JSON.parse(fileReader.result);\n            } else if (file.name.split(\".\").pop().toLowerCase() === \"qmga\") {\n                data = this.qmga_to_json(fileReader.result);\n            } else {\n                data = this.cnf_to_json(fileReader.result);\n            }\n            try {\n                console.log(vidstate);\n                this.generate(data, false, vidstate);\n                if (VIDEO === false) {\n                    Alert.success('File loaded successfully.');\n                }\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n            }\n        };\n        fileReader.readAsText(file);\n    }\n\n    qmga_to_json(data) {\n        let set = {name: \"Molecules\", orientationType: \"v\"}\n        let split_data = data.trim().split(\"\\n\")\n        let unit_box = split_data[0].split(/ +/)\n        set.unitBox = [parseFloat(unit_box[0]) / 2, parseFloat(unit_box[1]) / 2, parseFloat(unit_box[2]) / 2]\n        let molecule_count = split_data.length - 1\n        set.positions = new Array(molecule_count)\n        set.orientations = new Array(molecule_count)\n        for (let molecule_number = 0; molecule_number < molecule_count; ++molecule_number) {\n            let molecule_data = split_data[molecule_number + 1].trim().split(/ +/)\n            //TODO need to implement scale at position 0\n            set.positions[molecule_number] = molecule_data.slice(1, 4).map(value => parseFloat(value))\n            set.orientations[molecule_number] = molecule_data.slice(4, 7).map(value => parseFloat(value))\n        }\n        return {model: {sets: [set]}, state: null}\n    }\n\n    cnf_to_json(data) {\n        let set = {name: \"Molecules\", orientationType: \"v\"}\n        let split_data = data.trim().split(\"\\n\")\n        set.unitBox = [parseFloat(split_data[1]), parseFloat(split_data[2]), parseFloat(split_data[3])]\n        let molecule_count = parseInt(split_data[0])\n        set.positions = new Array(molecule_count)\n        set.orientations = new Array(molecule_count)\n        for (let molecule of split_data.slice(5)) {\n            let molecule_data = molecule.trim().split(/ +/)\n            let molecule_number = parseInt(molecule_data[12]) - 1\n            set.positions[molecule_number] = molecule_data.slice(0, 3).map(value => parseFloat(value))\n            set.orientations[molecule_number] = molecule_data.slice(6, 9).map(value => parseFloat(value))\n        }\n        return {model: {sets: [set]}, state: null}\n    }\n\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 17:\n                sample = unfolded_sample1;\n                break;\n            case 18:\n                sample = unfolded_sample2;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false, false);\n\n\n        Alert.success('File loaded successfully.');\n\n    }\n    export = (height, width, resolution) => {\n        // fix orthographic projection\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution / 10);\n\n        let link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', `Thank you!`, (<div>\n            Image exported successfully.\n        </div>));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            switch (e.code) {\n                case 'Space':\n                    this.externalToggle.autorotate();\n                    if (this.chronometer.testing) {\n                        this.chronometer.testing = false;\n                    }\n                    break;\n                case  'KeyA':\n                    console.log(this.model.camera.position);\n                    break;\n            }\n\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n}\n\nexport default Controller;","import React, {Component} from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport {Container, Content} from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n    controller;\n\n    constructor(props) {\n        super(props);\n        this.controller = new Controller();\n\n        this.state = {\n            header: this.controller.getHeader(), sidebar: this.controller.getSidebar()\n        };\n    }\n\n    componentDidMount() {\n        this.mount.appendChild(this.controller.getDomElement());\n        this.controller.start();\n    }\n\n    render() {\n        const header = this.state.header;\n        const sidebar = this.state.sidebar;\n\n        return (<div>\n            <Container>\n                {header}\n                <Container>\n                    {sidebar}\n                    <Content>\n                        <div ref={ref => (this.mount = ref)}/>\n                    </Content>\n                </Container>\n\n            </Container>\n\n        </div>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode> <App/> </React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}