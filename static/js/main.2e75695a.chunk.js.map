{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","Folded_position","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","target","min","max","m","mat","gutsMaterial","v","elem","rgb","colourMap","values","MeshPhongMaterial","color","side","THREE","shininess","clipShadows","Mesh","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","localClippingEnabled","setFaceCulling","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","id","params","f","remove","updateSets","setUserColour","r","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","enabled","visible","warning","updatePosition","genFoldedPositionFromUnfold","passGrid","passAxes","passShape","toggleGrid","toggleAxes","boundingShapeEnabled","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","style","console","log","children","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","updateKey","key","setState","Menu","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","toggler","fps","showDrawer","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","for","pullLeft","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","PeriodicBoundingOption","toggleFold","toggleBoundingShapeEnabled","displayFoldState","slicing","toggleFoldState","reference","activeShape","Grid","fluid","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","backgroundColour","ReferenceOptions","updateGridSize","gridColour","updateReferenceColour","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","starting","genSets","setDefaultState","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","unfolded_sample1","unforded_sample2","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e75695a.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    Material\n\n} from 'three';\nimport * as THREE from 'three';\nimport {eigs, ParenthesisNodeDependencies, planckMassDependencies} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n    \n    \n    \n    positions = [];\n    Folded_position=[]\n    orientations = [];\n    elements = [];\n    meshes = [];\n\n    \n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci; \n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n    \n        this.genSet();\n        \n    }\n\n    isFoldedTest(){\n        let x = this.unitBox[0]/2;\n        let y = this.unitBox[1]/2;\n        let z = this.unitBox[2]/2;\n        for (let i = 0; i < this.positions.length; i++){\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if(a>=x || a<=-x){\n                return false\n            }\n            if(b>=y|| b<=-y){\n                return false\n            }\n            if(c>=z || c<=-z){\n               return false\n            }\n        return true;\n        \n    }\n}\n\n    genSet(){\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n    \n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        // this.isFolded = this.isFoldedTest(); \n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    // updateSlicedset(){\n    //     clippingPlanes = this.clippingPlanes;\n    //     for(let mesh of this.meshes){\n    //         mesh.material.geometries\n    //     }\n    // }\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n    genUnitBox(){\n    \n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition(){\n    \n        if(this.isFoldedTest()== false){\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos =[];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rnd1 = (Math.random() * (2) -1) \n            let rnd2 = (Math.random() * (2) -1)\n            let rnd3 = (Math.random() * (2) -1)\n            pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        }\n        this.positions = pos;\n        \n    }\n\n    genFoldedPositionFromUnfold(){\n        if(this.isFoldedTest()== true){\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos =[];\n        let lx = this.unitBox[0]/2;\n        let ly = this.unitBox[1]/2;\n        let lz = this.unitBox[2]/2;\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n            \n            rx = rx%lx;\n            ry = ry%ly;\n            rz = rz%lz;\n           \n            pos.push([rx,ry,rz])\n        }\n        this.Folded_position = pos;\n        \n    }\n    inRange(target,min,max){\n        if (min<=target<=max ){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n        let gutsMaterial;\n        let v;\n        let ab =true;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n        \n            mat = new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: false,\n                side : THREE.FrontSide,\n                shininess: 40,\n                clipShadows: true\n            });\n            mat.wireframe = this.wireframe;\n            gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n        \n           \n            // mat = new MeshPhongMaterial({\n            //     color: c,\n            //     clippingPlanes: this.clippingPlanes,\n            //     clipIntersection: false,\n            //     side : THREE.FrontSide,\n            //     shininess: 40,\n            //     clipShadows: true\n            // });\n            // mat.wireframe = this.wireframe;\n            // gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n\t\t\t\t\t\n            //stencil buffer\n            //view-source:https://threejs.org/examples/webgl_clipping_stencil.html\n            //https://stackoverflow.com/questions/36557486/three-js-object-clipping/37593904#37593904\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                v = new Mesh(g,gutsMaterial)\n                this.meshes.push(m,v);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let pos = this.positions\n        if (this.Folded_position.length>0){\n            pos = this.Folded_position;\n        }\n        for (let i = 0; i < pos.length; i++) {\n            this.elements.push(new this.Element(pos[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n        \n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n        \n        for (let set of sets) {\n            if (b != null){\n                break\n            }\n            b =set.genUnitBox()\n            \n        }\n    \n        switch (type) {\n            case 'box':\n                    let box = new Box3();\n                    box.setFromCenterAndSize(new Vector3(0,0,0),new Vector3(b[0]*2,b[1]*2,b[2]*2));\n                    this.boundingShape = new Box3Helper(box, this.colour);\n                    \n                break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n            \n\n        }\n        \n\n        return this.boundingShape;\n\n    }\n\n   \n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n   \n\n}\n\nexport default ReferenceTools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    Mesh\n} from 'three';\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    \n    \n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    \n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n       \n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\"});\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n        this.renderer.setFaceCulling( THREE.CullFaceBack);\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        //this.removeclipping();\n        this.initClippers();\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    update() {\n        \n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id,toggle){\n        if(toggle==true){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });}\n        else if(toggle == false){\n            this.updateSets(id, [id], (id) => {\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].Folded_position =[];\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n    \n    \n\n    /* SLICING FUNCTIONS */\n\n    initClippers() {\n        this.clippingIntersections = false;\n       \n   \n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 180),\n            new Plane(new Vector3(-1, 0, 0), 180),\n            new Plane(new Vector3(0, 1, 0), 180),\n            new Plane(new Vector3(0, -1, 0), 180),\n            new Plane(new Vector3(0, 0, 1), 180),\n            new Plane(new Vector3(0, 0, -1), 180)\n        ];\n       \n       this.clippingHelpers = [\n        new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n        new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n        \n    }\n    removeclipping(){\n        for (let a of this.clippingPlanes) {\n            this.scene.remove(a);\n        }\n        for (let a of this.clippingHelpers) {\n            this.scene.remove(a);\n        }\n\n    \n    }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic');\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Torus (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshPhongMaterial\n                <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if (this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput key={i} title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-100.0}\n                        max={100.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider, Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.resolution =[1.0];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n    setResolution(val,index){\n        this.resolution[index] = parseInt(val);\n    }\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n                 <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={0.1} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(key) {\n        this.setState({\n            active: key\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Unfolded Samples\">\n                <Dropdown.Item eventKey={17}>Unfolded SC4 Nematic</Dropdown.Item>\n                <Dropdown.Item eventKey={18}>Unfolded E3 Chiral Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Item panel style={{ width: 120 }}></Dropdown.Item>\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false };\n\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                \n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    {/* <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                        <Tooltip>\n                                            The performance test was included for completeness and will be removed after submission.\n                                        </Tooltip>\n                                    }>\n                                        <Icon style={{marginTop: 18}}icon=\"question-circle\" size=\"lg\" />\n                                    </Whisper> */}\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                \n                                    \n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"info\" />}>About</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals\n                        </Button>\n                            <Button key=\"man\" color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n                        <br />\n                        <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations included in the library.</i></p>\n\n                        <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see 'User Manual'.</i></p>\n\n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h2>WebMGA </h2>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++ that filled this gap in molecular graphics in 2008.\n                    \n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class PeriodicBoundingOption extends React.Component{\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        //this.state.configurations[this.state.active].displayFoldState=true;\n        //this.state.boundingShapeEnabled =false;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        //this.toggleUnFold= this.toggleUnFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.configurations[this.state.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        View.state.model.configurations[this.state.active].displayFoldState = toggle;\n        if(toggle==false){\n            View.state.slicing.x =[-80,80];\n            View.state.slicing.y =[-80,80];\n            View.state.slicing.z =[-80,80];\n       \n        }\n        else{\n            View.state.slicing.x =[-50,50];\n            View.state.slicing.y =[-50,50];\n            View.state.slicing.z =[-50,50];\n       \n        }\n         this.model.toggleFoldState(this.state.active,toggle);\n        this.model.update();\n    }\n\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.state.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n    }\n    \n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const enabled = this.state.boundingShapeEnabled;\n        return (\n            \n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Boundary Conditions  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unfold </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayUnFoldState} onClick={this.toggleUnFold}> Show</Checkbox>\n                        </Col>\n                    </Row> */}\n                </Grid>\n                <br />\n\n                <br />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(val);\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val);\n        if (val == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = val;\n                    break;\n                case 'y':\n                    position.y = val;\n                    break;\n                case 'z':\n                    position.z = val;\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(val);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(val);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        // this.state.x =[-100,100];\n        // this.state.y =[-100,100];\n        // this.state.z =[-100,100];\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n        this.model.update();\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n        switch (i) {\n            case 0:\n                this.state.x = val;\n                break;\n            case 1:\n                this.state.y = val;\n                break;\n            case 2:\n                this.state.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                 {/* <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={false} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>  */}\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg(val, i) {\n        let colour = this.state.backgroundColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBg} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBg} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBg} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        // this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        // this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(val, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = val;\n                break;\n            case 'g':\n                rgb.g = val;\n                break;\n            case 'b':\n                rgb.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(val) {\n        this.model.updateGridSize(val);\n        this.model.update();\n        View.state.reference.size = val;\n    }\n    // toggleBoundingShapeEnabled() {\n    //     let toggle = !View.state.reference.boundingShapeEnabled;\n    //     this.setState({\n    //         boundingShapeEnabled: toggle\n    //     });\n    //     View.state.reference.boundingShapeEnabled = toggle;\n    //     this.model.updateBoundingShape(this.state.activeShape, toggle);\n    //     this.model.update();\n    // }\n    \n    // selectShape(val) {\n    //     this.setState({\n    //         activeShape: val\n    //     });\n    //     View.state.reference.activeShape = val;\n    //     this.model.updateBoundingShape(val, this.state.boundingShapeEnabled);\n    //     this.model.update();\n    // }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        // const enabled = this.state.boundingShapeEnabled;\n        // const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row> */}\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    {/* <Radio disabled={true} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio> */}\n\n                                {/* </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row> */} \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions,PeriodicBoundingOption } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\"  eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\"  eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Periodic Bounding\"  eventKey=\"Periodic Bounding\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"growth\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\"  eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\"  eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\"  eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\"  eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav >\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model} />);\n                break;\n            case \"Periodic Bounding\":\n                menuContent.push(<PeriodicBoundingOption  key={active} model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        //View.state.slicing.x=[-80,80];\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n\n        \n    }\n    \n\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i,substate.displayFoldState);\n            // this.model.toggleUnfoldState(i,substate.displayUnfoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state){\n        this.loadReferenceAndSlicing(state);\n        this.loadLightingAndCamera(state);\n        \n    }\n \n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n        \n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state)\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: [],\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-180, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: true,\n        displayFoldState :true,\n        boundingShapeEnabled:false\n        //displayUnfoldState:false\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n    \n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\nimport unfolded_sample1 from'./Samples/UnfoldedSC4.json';\nimport unforded_sample2 from'./Samples/UnfoldedE3.json';\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        \n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter == this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime == null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.render();\n        this.notify('info', 'Welcome to WebMGA',\n            (<div>\n            <p style={{ width: 320 }} >\n                Check out the liquid crystal configurations in the Library, and head to the About section to learn more!\n                \n            </p>\n            <p style={{ width: 320 }} >\n                This application works best on the Chrome browser.\n             </p></div>\n            )\n\n\n\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 15000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultState(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.updateLOD(this.model.lod);\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            case 17:\n                sample =unfolded_sample1;\n                break;\n            case 18:\n                sample =unforded_sample2 ;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width,resolution) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution).replace(\"image/jpeg\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key == 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}