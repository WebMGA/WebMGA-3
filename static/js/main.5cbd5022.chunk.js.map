{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","unitBox","clippingPlanes","clipIntersection","setDefaults","shapeType","genSet","a","b","c","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","lod","constant","toggle","material","isFoldedTest","pos","rnd1","random","rnd2","rnd3","info","lx","ly","lz","rx","ry","rz","target","min","max","m","mat","gutsMaterial","v","elem","rgb","colourMap","values","MeshPhongMaterial","color","side","THREE","shininess","clipShadows","Mesh","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","genUnitBox","box","Box3","setFromCenterAndSize","Box3Helper","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","localClippingEnabled","setFaceCulling","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","id","params","f","remove","updateSets","setUserColour","r","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","enabled","visible","warning","updatePosition","updateSlicer","genFoldedPositionFromUnfold","genUnfoldPosition","passGrid","passAxes","passShape","toggleGrid","toggleAxes","boundingShapeEnabled","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","style","console","log","children","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","resolution","setResolution","setDimensions","export","concat","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","updateKey","key","setState","Menu","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","toggler","fps","showDrawer","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","for","pullLeft","padding","Drawer","show","onHide","backdrop","Title","href","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","PeriodicBoundingOption","toggleFold","toggleBoundingShapeEnabled","displayFoldState","slicing","toggleFoldState","reference","activeShape","Grid","fluid","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","JSON","stringify","SlicingOptions","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","backgroundColour","ReferenceOptions","updateGridSize","gridColour","updateReferenceColour","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","starting","genSets","setDefaultState","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cbd5022.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","export var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    Material\n\n} from 'three';\nimport * as THREE from 'three';\nimport {eigs, ParenthesisNodeDependencies, planckMassDependencies} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n    unitBox;\n    \n    \n    \n    positions = [];\n    orientations = [];\n    elements = [];\n    meshes = [];\n\n    \n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.unitBox = data.unitBox;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci; \n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n    \n        this.genSet();\n        \n    }\n\n    isFoldedTest(){\n        let x = this.unitBox[0]/2;\n        let y = this.unitBox[1]/2;\n        let z = this.unitBox[2]/2;\n        for (let i = 0; i < this.positions.length; i++){\n            let a = this.positions[i][0];\n            let b = this.positions[i][1];\n            let c = this.positions[i][2];\n            if(a>=x || a<=-x){\n                return false\n            }\n            if(b>=y|| b<=-y){\n                return false\n            }\n            if(c>=z || c<=-z){\n               return false\n            }\n        return true;\n        \n    }\n}\n\n    genSet(){\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n    \n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        // this.isFolded = this.isFoldedTest(); \n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n    // updateSlicedset(){\n    //     clippingPlanes = this.clippingPlanes;\n    //     for(let mesh of this.meshes){\n    //         mesh.material.geometries\n    //     }\n    // }\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n    genUnitBox(){\n    \n        return this.unitBox;\n\n    }\n\n    genUnfoldPosition(){\n    \n        if(this.isFoldedTest()== false){\n            Alert.info('Model is already unfolded');\n            return\n        }\n        let pos =[];\n        let x = this.unitBox[0];\n        let y = this.unitBox[1];\n        let z = this.unitBox[2];\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rnd1 = (Math.random() * (2) -1) \n            let rnd2 = (Math.random() * (2) -1)\n            let rnd3 = (Math.random() * (2) -1)\n            pos.push([this.positions[i][0]+rnd1*x ,this.positions[i][1]+rnd2*y,this.positions[i][2]+rnd3*z])\n        }\n        this.positions = pos;\n        \n    }\n\n    genFoldedPositionFromUnfold(){\n        if(this.isFoldedTest()== true){\n            Alert.info('Model is already folded');\n            return\n        }\n        let pos =[];\n        let lx = this.unitBox[0]/2;\n        let ly = this.unitBox[1]/2;\n        let lz = this.unitBox[2]/2;\n\n        for (let i = 0; i < this.positions.length; i++){\n            let rx = this.positions[i][0];\n            let ry = this.positions[i][1];\n            let rz = this.positions[i][2];\n            \n            rx = rx%lx;\n            ry = ry%ly;\n            rz = rz%lz;\n           \n            pos.push([rx,ry,rz])\n        }\n        this.positions = pos;\n        \n    }\n    inRange(target,min,max){\n        if (min<=target<=max ){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n        let gutsMaterial;\n        let v;\n        let ab =true;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n        \n            mat = new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: false,\n                side : THREE.FrontSide,\n                shininess: 40,\n                clipShadows: true\n            });\n            mat.wireframe = this.wireframe;\n            gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n        \n           \n            // mat = new MeshPhongMaterial({\n            //     color: c,\n            //     clippingPlanes: this.clippingPlanes,\n            //     clipIntersection: false,\n            //     side : THREE.FrontSide,\n            //     shininess: 40,\n            //     clipShadows: true\n            // });\n            // mat.wireframe = this.wireframe;\n            // gutsMaterial = new THREE.MeshBasicMaterial( {color: c, side: THREE.BackSide, clippingPlanes: this.clippingPlanes, clipShadows: true} );\n\t\t\t\t\t\n            //stencil buffer\n            //view-source:https://threejs.org/examples/webgl_clipping_stencil.html\n            //https://stackoverflow.com/questions/36557486/three-js-object-clipping/37593904#37593904\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                v = new Mesh(g,gutsMaterial)\n                this.meshes.push(m,v);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n       \n        if(this.positions.length ==0){\n            Alert.error('a');\n            return\n        }\n        for (let i = 0; i < this.positions.length; i++) {\n            this.elements.push(new this.Element(this.positions[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    // boundingShape;\n    // boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n        \n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n        let b;\n        this.boundingShape = null;\n        \n        for (let set of sets) {\n            if (b != null){\n                break\n            }\n            b =set.genUnitBox()\n            \n        }\n    \n        switch (type) {\n            case 'box':\n                    let box = new Box3();\n                    box.setFromCenterAndSize(new Vector3(0,0,0),new Vector3(b[0]*2,b[1]*2,b[2]*2));\n                    this.boundingShape = new Box3Helper(box, this.colour);\n                    \n                break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n            \n\n        }\n        \n\n        return this.boundingShape;\n\n    }\n\n   \n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n   \n\n}\n\nexport default ReferenceTools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    Mesh\n} from 'three';\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    \n    \n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n    \n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n       \n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\"});\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n        this.renderer.setFaceCulling( THREE.CullFaceBack);\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        //this.removeclipping();\n        this.initClippers();\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    update() {\n        \n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            // temp.unitBox = set.unitBox;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n    /* PERIODIC BOUNDING TOOL FUNCTIONS */\n\n    toggleFoldState(id,toggle){\n        if(toggle==true){\n            this.updateSets(id, [id], (id) => {\n                this.updateSlicer(0, [-50,50]);\n                this.updateSlicer(1, [-50,50]);\n                this.updateSlicer(2, [-50,50]);\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genFoldedPositionFromUnfold();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });}\n        else if(toggle == false){\n            this.updateSets(id, [id], (id) => {\n                this.updateSlicer(0, [-80,80]);\n                this.updateSlicer(1, [-80,80]);\n                this.updateSlicer(2, [-80,80]);\n                this.sets[id].elements =[];\n                this.sets[id].meshes = [];\n                this.sets[id].genUnfoldPosition();\n                this.sets[id].genElements();\n                this.sets[id].setElements();\n                this.sets[id].genMeshes();\n            });\n        }\n    }\n    // toggleUnfoldState(id,toggle){\n    //     if(toggle){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genUnfoldPosition();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //     else if(toggle == false){\n    //         this.updateSets(id, [id], (id) => {\n    //             this.sets[id].elements =[];\n    //             this.sets[id].meshes = [];\n    //             this.sets[id].genFoldedPositionFromUnfold();\n    //             this.sets[id].genElements();\n    //             this.sets[id].setElements();\n    //             this.sets[id].genMeshes();\n    //         });\n    //     }\n    //}\n\n\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n    \n    \n\n    /* SLICING FUNCTIONS */\n\n    initClippers() {\n        this.clippingIntersections = false;\n       \n   \n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 180),\n            new Plane(new Vector3(-1, 0, 0), 180),\n            new Plane(new Vector3(0, 1, 0), 180),\n            new Plane(new Vector3(0, -1, 0), 180),\n            new Plane(new Vector3(0, 0, 1), 180),\n            new Plane(new Vector3(0, 0, -1), 180)\n        ];\n       \n       this.clippingHelpers = [\n        new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n        new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n        new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n        new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n\n        \n    }\n    removeclipping(){\n        for (let a of this.clippingPlanes) {\n            this.scene.remove(a);\n        }\n        for (let a of this.clippingHelpers) {\n            this.scene.remove(a);\n        }\n\n    \n    }\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic');\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Torus (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshPhongMaterial\n                <br/> <br/>\n            <b>Please do not change any settings while the performance test is running!</b>\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if (this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput key={i} title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-100.0}\n                            max={100.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-100.0}\n                        max={100.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider, Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.resolution =[1.0];\n        this.f = props.f;\n        this.setResolution = this.setResolution.bind(this);\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n    setResolution(val,index){\n        this.resolution[index] = parseInt(val);\n    }\n    export() {\n        this.f(...this.dimensions.concat(this.resolution));\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n                 <ParameterSet f={this.setResolution} titles={['Resolution']} values={this.resolution} step={0.1} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(key) {\n        this.setState({\n            active: key\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={12}>E3 Chiral Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC (in Cylinder)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Item panel style={{ width: 120 }}></Dropdown.Item>\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false };\n\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                \n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"active\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    {/* <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                        <Tooltip>\n                                            The performance test was included for completeness and will be removed after submission.\n                                        </Tooltip>\n                                    }>\n                                        <Icon style={{marginTop: 18}}icon=\"question-circle\" size=\"lg\" />\n                                    </Whisper> */}\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                \n                                    \n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"info\" />}>About</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/notes.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals\n                        </Button>\n                            <Button key=\"man\" color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/manual.txt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                            <Button color=\"cyan\" href=\"http://students.cs.ucl.ac.uk/2019/group3/WebMGA/diss.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n                        <br />\n                        <p><i>See 'Liquid Crystals' for a scientific explanation of the liquid crystal configurations included in the library.</i></p>\n\n                        <p><i>For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see 'User Manual'.</i></p>\n\n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h2>WebMGA </h2>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++ that filled this gap in molecular graphics in 2008.\n                    \n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class PeriodicBoundingOption extends React.Component{\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        //this.state.configurations[this.state.active].displayFoldState=true;\n        //this.state.boundingShapeEnabled =false;\n        this.model = props.model;\n        this.toggleFold = this.toggleFold.bind(this);\n        //this.toggleUnFold= this.toggleUnFold.bind(this);\n        this.toggleBoundingShapeEnabled= this.toggleBoundingShapeEnabled.bind(this);\n    }\n   \n    toggleFold() {\n        let toggle = !this.state.configurations[this.state.active].displayFoldState;\n        this.setState({\n            displayFoldState: toggle\n        });\n        View.state.model.configurations[this.state.active].displayFoldState = toggle;\n        if(toggle==false){\n            View.state.slicing.x =[-80,80];\n            View.state.slicing.y =[-80,80];\n            View.state.slicing.z =[-80,80];\n       \n        }\n        else{\n            View.state.slicing.x =[-50,50];\n            View.state.slicing.y =[-50,50];\n            View.state.slicing.z =[-50,50];\n       \n        }\n         this.model.toggleFoldState(this.state.active,toggle);\n        this.model.update();\n    }\n    // toggleUnFold() {\n    //     let toggle = !this.state.configurations[this.state.active].displayUnFoldState;\n    //     this.setState({\n    //         displayUnFoldState: toggle\n    //     });\n    //     View.state.model.configurations[this.state.active].displayUnFoldState = toggle;\n    //     this.model.toggleUnfoldState(this.state.active,toggle);\n    //     this.model.update();\n    // }\n    toggleBoundingShapeEnabled() {\n        let toggle = !this.state.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        this.state.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(View.state.reference.activeShape, toggle);\n        this.model.update();\n    }\n    \n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const enabled = this.state.boundingShapeEnabled;\n        return (\n            \n            <div>\n\n                <Grid fluid>\n                <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Box </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled}onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Periodic Bounding Condition  </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayFoldState} onClick={this.toggleFold}> Fold</Checkbox>\n                        </Col>\n                    </Row>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Unfold </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={configState.displayUnFoldState} onClick={this.toggleUnFold}> Show</Checkbox>\n                        </Col>\n                    </Row> */}\n                </Grid>\n                <br />\n\n                <br />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(val);\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val);\n        if (val == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = val;\n                    break;\n                case 'y':\n                    position.y = val;\n                    break;\n                case 'z':\n                    position.z = val;\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(val);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(val);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing\n        this.model = props.model;\n        // this.state.x =[-100,100];\n        // this.state.y =[-100,100];\n        // this.state.z =[-100,100];\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n        this.model.update();\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n        switch (i) {\n            case 0:\n                this.state.x = val;\n                break;\n            case 1:\n                this.state.y = val;\n                break;\n            case 2:\n                this.state.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                 {/* <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={false} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>  */}\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\n      \n\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg(val, i) {\n        let colour = this.state.backgroundColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBg} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBg} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBg} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        // this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        // this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(val, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = val;\n                break;\n            case 'g':\n                rgb.g = val;\n                break;\n            case 'b':\n                rgb.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(val) {\n        this.model.updateGridSize(val);\n        this.model.update();\n        View.state.reference.size = val;\n    }\n    // toggleBoundingShapeEnabled() {\n    //     let toggle = !View.state.reference.boundingShapeEnabled;\n    //     this.setState({\n    //         boundingShapeEnabled: toggle\n    //     });\n    //     View.state.reference.boundingShapeEnabled = toggle;\n    //     this.model.updateBoundingShape(this.state.activeShape, toggle);\n    //     this.model.update();\n    // }\n    \n    // selectShape(val) {\n    //     this.setState({\n    //         activeShape: val\n    //     });\n    //     View.state.reference.activeShape = val;\n    //     this.model.updateBoundingShape(val, this.state.boundingShapeEnabled);\n    //     this.model.update();\n    // }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        // const enabled = this.state.boundingShapeEnabled;\n        // const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row> */}\n                    {/* <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    {/* <Radio disabled={true} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio> */}\n\n                                {/* </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row> */} \n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions,PeriodicBoundingOption } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\"  eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\"  eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Periodic Bounding\"  eventKey=\"Periodic Bounding\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"growth\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\"  eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\"  eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\"  eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\"  eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav >\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions key={active} model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions key={active} model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions key={active} model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions key={active} model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions key={active} model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions key={active} model={model} />);\n                break;\n            case \"Periodic Bounding\":\n                menuContent.push(<PeriodicBoundingOption  key={active} model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent key={10} active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        //View.state.slicing.x=[-80,80];\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n\n        \n    }\n    \n\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.toggleFoldState(i,substate.displayFoldState);\n            // this.model.toggleUnfoldState(i,substate.displayUnfoldState);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state){\n        this.loadReferenceAndSlicing(state);\n        this.loadLightingAndCamera(state);\n        \n    }\n \n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n        \n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state)\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: [],\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-180, 80],\n        y: [-80, 80],\n        z: [-80, 80]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: true,\n        displayFoldState :true,\n        boundingShapeEnabled:false\n        //displayUnfoldState:false\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n    \n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\n\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        \n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter == this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime == null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.render();\n        this.notify('info', 'Welcome to WebMGA',\n            (<div>\n            <p style={{ width: 320 }} >\n                Check out the liquid crystal configurations in the Library, and head to the About section to learn more!\n                \n            </p>\n            <p style={{ width: 320 }} >\n                This application works best on the Chrome browser.\n             </p></div>\n            )\n\n\n\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 15000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultState(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.updateLOD(this.model.lod);\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width,resolution) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/jpeg\", resolution).replace(\"image/jpeg\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.jpeg\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key == 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}